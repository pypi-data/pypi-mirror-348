[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-proxy-adapter"
version = "3.1.6"
description = "Reliable microservice with unified JSON-RPC endpoint"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    { name = "Vasiliy Zubarev", email = "vasiliy.zubarev@example.com" }
]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Developers",
]
dependencies = [
    "fastapi>=0.95.0,<1.0.0",
    "pydantic>=2.0.0",
    "uvicorn>=0.22.0,<1.0.0",
    "docstring-parser>=0.15,<1.0.0",
    "typing-extensions>=4.5.0,<5.0.0",
    "jsonrpc>=1.2.0",
    "psutil>=5.9.0",
]

[project.urls]
Documentation = "https://github.com/maverikod/vvz-mcp-proxy-adapter/tree/main/docs/RU/README.md"
Source = "https://github.com/maverikod/vvz-mcp-proxy-adapter"
"Bug Reports" = "https://github.com/maverikod/vvz-mcp-proxy-adapter/issues"

[tool.setuptools]
packages = [
    "mcp_proxy_adapter", 
    "mcp_proxy_adapter.api", 
    "mcp_proxy_adapter.api.middleware",
    "mcp_proxy_adapter.commands", 
    "mcp_proxy_adapter.core",
    "mcp_proxy_adapter.schemas",
    "examples", 
    "examples.minimal_example", 
    "examples.basic_example", 
    "examples.complete_example", 
    "examples.anti_patterns",
    "examples.commands",
    "examples.basic_example.commands",
    "examples.basic_example.docs.EN",
    "examples.basic_example.docs.RU",
    "examples.basic_example.tests",
    "examples.complete_example.commands",
    "examples.complete_example.configs",
    "examples.minimal_example.tests",
    "examples.anti_patterns.bad_design"
]

[tool.setuptools.package-data]
"mcp_proxy_adapter" = ["py.typed", "**/*.json", "**/*.yaml"]
"examples" = ["**/*.py", "**/*.json", "**/*.yaml", "**/*.md", "**/*.txt", "**/*.yml"]

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=mcp_proxy_adapter --cov-report=term-missing" 