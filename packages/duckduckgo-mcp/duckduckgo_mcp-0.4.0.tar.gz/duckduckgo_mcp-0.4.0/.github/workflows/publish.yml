name: Publish to PyPI

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Install uv
        run: |
          curl -sSfL https://astral.sh/uv/install.sh | sh -s --
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          
      - name: Create virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip install --system build twine setuptools_scm
          
      - name: Generate dynamic version
        run: |
          pip install setuptools_scm
          dynamic_version=$(python -c "from setuptools_scm import get_version; print(get_version())")
          echo "VERSION=$dynamic_version" >> $GITHUB_ENV

      - name: Check if version exists on PyPI
        run: |
          VERSION=${{ env.VERSION }}
          if curl -sSfL "https://pypi.org/pypi/duckduckgo-mcp/json" | \
             python3 -c "import sys, json; d=json.load(sys.stdin); print(any(d['releases'].get('$VERSION', [])))" | grep -q "True"; then
            echo "Version $VERSION already exists on PyPI with files. Skipping upload."
            exit 1
          fi

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        if: github.event_name == 'release' && startsWith(github.event.release.tag_name, 'v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distributions
          path: dist/
