%YAML 1.2
# The Classic ARL reference experiment

---
uid: "Classic-ARL-Environmental-Impact-Experiment"  # Base name for the whole experiment
seed: 2022  # Seed used to initialize the random number generator
version: 3.5.0  # Target palaestrAI version
output: palaestrai-runfiles  # Directory where the run files will be saved
repetitions: 1  # How often each run will be repeated. Each repetition is a separate file
max_runs: 100  # Maximum number of runs (excluding repetitions) created by the DoE generator
definitions:  # In this section all the components will be defined
  ###########################################
  # The environment' section
  environments:
    midasmv_tar_ms:
      environment:
        name: palaestrai_mosaik:MosaikEnvironment
        uid: midas_powergrid
        params:
          module: midas.tools.palaestrai:Descriptor  # Always the same if you use MIDAS
          description_func: describe  # Always the same if you use MIDAS
          instance_func: get_world  # Always the same if you use MIDAS
          arl_sync_freq: &step_size 60 # &step_size 1 means to set variable step_size=1
          arl_sync_port: 59878
          end: &end 24 * 60 * 60  # One step extra because one step gets "lost"
          start_date: 2020-04-13 12:00:00+0100
          params:  # Parameters that are passed to description_func and
                    # instance_func, Part that is being sent to MIDAS directly
            name: carl_cigre_ts # scenario name
            config: tests/fixtures/midas-scenarios/classic-arl.yml # relative to current working directory; the file that is called .config/midas/ClasicARL.yml on my laptop   
            step_size: *step_size # &step_size put here from above with value 1
      reward:
        name: midas_palaestrai.rewards:AllesDestroyAllPire2RewardIchWeissNicht
    midasmv_tar_ms_later:
      environment:
        name: palaestrai_mosaik:MosaikEnvironment
        uid: midas_powergrid
        params:
          module: midas_palaestrai:Descriptor  # Always the same if you use MIDAS
          description_func: describe  # Always the same if you use MIDAS
          instance_func: get_world  # Always the same if you use MIDAS
          arl_sync_freq: *step_size  # &step_size 1 means to set variable step_size=1
          end: *end  # One step extra because one step gets "lost"
          arl_sync_port: 59879
          start_date: 2020-04-13 18:30:00+0100
          params: # Parameters that are passed to description_func and
            # instance_func, Part that is being sent to MIDAS directly
            name: carl_cigre_ts # scenario name
            config: tests/fixtures/midas-scenarios/classic-arl.yml # relative to current working directory; the file that is called .config/midas/ClasicARL.yml on my laptop 
            step_size: *step_size # &step_size put here from above with value 1
            
      reward:
        name: midas_palaestrai.rewards:AllesDestroyAllPire2RewardIchWeissNicht
    midasmv_tar_ms_other_season:
      environment:
        name: palaestrai_mosaik:MosaikEnvironment
        uid: midas_powergrid
        params:
          module: midas_palaestrai:Descriptor  # Always the same if you use MIDAS
          description_func: describe  # Always the same if you use MIDAS
          instance_func: get_world  # Always the same if you use MIDAS
          arl_sync_freq: *step_size  # &step_size 1 means to set variable step_size=1
          arl_sync_port: 59880
          end: *end  # One step extra because one step gets "lost"
          start_date: 2020-11-13 18:30:00+0100
          params: # Parameters that are passed to description_func and
            # instance_func, Part that is being sent to MIDAS directly
            name: carl_cigre_ts # scenario name
            config: tests/fixtures/midas-scenarios/classic-arl.yml # relative to current working directory; the file that is called .config/midas/ClasicARL.yml on my laptop
            step_size: *step_size # &step_size put here from above with value 1
      reward:
        name: midas_palaestrai.rewards:AllesDestroyAllPire2RewardIchWeissNicht

    midasmv_tar_ms_train:
      environment:
        name: palaestrai_mosaik:MosaikEnvironment
        uid: midas_powergrid
        params:
          module: midas.tools.palaestrai:Descriptor
          description_func: describe
          instance_func: get_world
          arl_sync_port: 59881
          arl_sync_freq: *step_size
          start_date: 2020-11-13 18:30:00+0100
          end: 20
          params:
            name: carl_cigre_ts # scenario name
            config: tests/fixtures/midas-scenarios/classic-arl.yml # relative to current working directory; the file that is called .config/midas/ClasicARL.yml on my laptop
            step_size: 1    
      reward:
        name: midas_palaestrai.rewards:AllesDestroyAllPire2RewardIchWeissNicht
  ###########################################
  # The agents' section
  agents:
    state_machine:
      name: State_Machine_1
      brain:
        name: palaestrai.agent.none_brain:NoneBrain
        params: { }
      muscle:
        name: arl.agent:StateMachineAgent
        params:
          sensor_actuator_mapping:
            0-bus-1.vm_pu: "midas_powergrid.Pysimmods-0.Battery-0.p_set_mw"
            0-bus-3.vm_pu: "Pysimmods-0.Photovoltaic-0.q_set_mvar" # just for 1

      objective:
        name: midas.tools.palaestrai.voltage_attacker_objective:VoltageBandViolationPendulum
        #midas.tools.palaestrai.voltage_attacker_objective:VoltageBandViolationPendulum
        #midas.tools.palaestrai:ArlAttackerObjective
        params: { }
    gandalf_sac:
      name: Gandalf_s
      brain:
        name: harl.sac.brain:SACBrain
        params: {}
      muscle:
        name: harl.sac.muscle:SACMuscle
        params: {}
      objective:
        name: midas.tools.palaestrai.voltage_defender_objective:VoltageDefenderObjective
        params: {}
    sauron_sac_env_imp:
      name: Sauron
      replay:
        - agent: State_Machine_1
          experiment_run: "Classic-ARL-Environmental-Impact-Experiment-0"
          phase: 0
      brain:
        name: harl.sac.brain:SACBrain
        params:
          update_after: 0
          update_every: 1
          batch_size: 86000
      muscle:
        name: harl.sac.muscle:SACMuscle
        params:
          start_steps: 0
      objective:
        name: midas.tools.palaestrai.voltage_attacker_objective:VoltageBandViolationPendulum
        #midas.tools.palaestrai.voltage_attacker_objective:VoltageBandViolationPendulum
        #midas.tools.palaestrai:ArlAttackerObjective
        params: {}
  ###########################################
  # The sensors' section
  sensors:
    not_all_sensors:
      midas_powergrid:
        - midas_powergrid.Powergrid-0.0-bus-1.vm_pu
        - midas_powergrid.Powergrid-0.0-line-0.in_service
        - Pysimmods-0.Battery-0.soc_percent
    all_sensors:
      midas_powergrid:
        - midas_powergrid.Powergrid-0.0-bus-1.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-1.va_degree
        - midas_powergrid.Powergrid-0.0-bus-10.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-10.va_degree
        - midas_powergrid.Powergrid-0.0-bus-11.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-11.va_degree
        - midas_powergrid.Powergrid-0.0-bus-12.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-12.va_degree
        - midas_powergrid.Powergrid-0.0-bus-13.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-13.va_degree
        - midas_powergrid.Powergrid-0.0-bus-14.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-14.va_degree
        - midas_powergrid.Powergrid-0.0-bus-2.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-2.va_degree
        - midas_powergrid.Powergrid-0.0-bus-3.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-3.va_degree
        - midas_powergrid.Powergrid-0.0-bus-4.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-4.va_degree
        - midas_powergrid.Powergrid-0.0-bus-5.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-5.va_degree
        - midas_powergrid.Powergrid-0.0-bus-6.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-6.va_degree
        - midas_powergrid.Powergrid-0.0-bus-7.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-7.va_degree
        - midas_powergrid.Powergrid-0.0-bus-8.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-8.va_degree
        - midas_powergrid.Powergrid-0.0-bus-9.vm_pu
        - midas_powergrid.Powergrid-0.0-bus-9.va_degree
        - midas_powergrid.Powergrid-0.0-line-0.loading_percent
        - midas_powergrid.Powergrid-0.0-line-0.in_service
        - midas_powergrid.Powergrid-0.0-line-1.loading_percent
        - midas_powergrid.Powergrid-0.0-line-1.in_service
        - midas_powergrid.Powergrid-0.0-line-10.loading_percent
        - midas_powergrid.Powergrid-0.0-line-10.in_service
        - midas_powergrid.Powergrid-0.0-line-11.loading_percent
        - midas_powergrid.Powergrid-0.0-line-11.in_service
        - midas_powergrid.Powergrid-0.0-line-12.loading_percent
        - midas_powergrid.Powergrid-0.0-line-12.in_service
        - midas_powergrid.Powergrid-0.0-line-13.loading_percent
        - midas_powergrid.Powergrid-0.0-line-13.in_service
        - midas_powergrid.Powergrid-0.0-line-14.loading_percent
        - midas_powergrid.Powergrid-0.0-line-14.in_service
        - midas_powergrid.Powergrid-0.0-line-2.loading_percent
        - midas_powergrid.Powergrid-0.0-line-2.in_service
        - midas_powergrid.Powergrid-0.0-line-3.loading_percent
        - midas_powergrid.Powergrid-0.0-line-3.in_service
        - midas_powergrid.Powergrid-0.0-line-4.loading_percent
        - midas_powergrid.Powergrid-0.0-line-4.in_service
        - midas_powergrid.Powergrid-0.0-line-5.loading_percent
        - midas_powergrid.Powergrid-0.0-line-5.in_service
        - midas_powergrid.Powergrid-0.0-line-6.loading_percent
        - midas_powergrid.Powergrid-0.0-line-6.in_service
        - midas_powergrid.Powergrid-0.0-line-7.loading_percent
        - midas_powergrid.Powergrid-0.0-line-7.in_service
        - midas_powergrid.Powergrid-0.0-line-8.loading_percent
        - midas_powergrid.Powergrid-0.0-line-8.in_service
        - midas_powergrid.Powergrid-0.0-line-9.loading_percent
        - midas_powergrid.Powergrid-0.0-line-9.in_service
  ###########################################
  # The actuators' section
  actuators:
    attacker_actuators:
      midas_powergrid:
        - midas_powergrid.Pysimmods-0.Battery-0.p_set_mw

    defender_actuators:
      midas_powergrid:
        - midas_powergrid.Powergrid-0.0-load-4-6.p_mw
        - midas_powergrid.Powergrid-0.0-load-4-6.q_mvar
        - midas_powergrid.Powergrid-0.0-load-5-7.p_mw
        - midas_powergrid.Powergrid-0.0-load-5-7.q_mvar
        - midas_powergrid.Powergrid-0.0-load-6-8.p_mw
        - midas_powergrid.Powergrid-0.0-load-6-8.q_mvar
        - midas_powergrid.Powergrid-0.0-load-7-9.p_mw
        - midas_powergrid.Powergrid-0.0-load-7-9.q_mvar
        - midas_powergrid.Powergrid-0.0-load-8-10.p_mw
        - midas_powergrid.Powergrid-0.0-load-8-10.q_mvar
        - midas_powergrid.Powergrid-0.0-load-9-11.p_mw
        - midas_powergrid.Powergrid-0.0-load-9-11.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-4-6.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-4-6.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-5-7.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-5-7.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-6-8.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-6-8.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-7-9.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-7-9.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-8-10.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-8-10.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-9-11.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-9-11.q_mvar

        - midas_powergrid.Powergrid-0.0-load-0-1.p_mw
        - midas_powergrid.Powergrid-0.0-load-0-1.q_mvar
        - midas_powergrid.Powergrid-0.0-load-1-3.p_mw
        - midas_powergrid.Powergrid-0.0-load-1-3.q_mvar
        - midas_powergrid.Powergrid-0.0-load-10-12.p_mw
        - midas_powergrid.Powergrid-0.0-load-10-12.q_mvar
        - midas_powergrid.Powergrid-0.0-load-11-13.p_mw
        - midas_powergrid.Powergrid-0.0-load-11-13.q_mvar
        - midas_powergrid.Powergrid-0.0-load-12-14.p_mw
        - midas_powergrid.Powergrid-0.0-load-12-14.q_mvar
        - midas_powergrid.Powergrid-0.0-load-2-4.p_mw
        - midas_powergrid.Powergrid-0.0-load-2-4.q_mvar
        - midas_powergrid.Powergrid-0.0-load-3-5.p_mw
        - midas_powergrid.Powergrid-0.0-load-3-5.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-0-1.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-0-1.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-1-3.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-1-3.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-10-12.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-10-12.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-11-13.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-11-13.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-12-14.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-12-14.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-2-4.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-2-4.q_mvar
        - midas_powergrid.Powergrid-0.0-sgen-3-5.p_mw
        - midas_powergrid.Powergrid-0.0-sgen-3-5.q_mvar
        - midas_powergrid.Powergrid-0.0-trafo-0.tap_pos
        - midas_powergrid.Powergrid-0.0-trafo-1.tap_pos
  ###########################################
  # The simulation section
  simulation:
    vanilla_sim: # User-defined name of one simulation controller.
      name: palaestrai.simulation:TakingTurns
      conditions:
        - name: palaestrai.experiment:EnvironmentTerminationCondition
          params: {}
  ###########################################
  # The phase-configs' section
  phase_config:
    training:
      mode: train
      worker: 1
      episodes: 1
    test:
      mode: test
      worker: 1
      episodes: 1
  ###########################################
  # The run-configs' section
  run_config:
    condition:
      name: palaestrai.experiment:VanillaRunGovernorTerminationCondition
      params: {}

schedule:
  - phase0:
      environments: [[midasmv_tar_ms]]  # one factor, one level
      agents: [[state_machine]] # one factor, one levels
      simulation: [vanilla_sim] # one factor, one level
      phase_config: [training] # one factor, one level
      sensors:
        state_machine: [ not_all_sensors ]
      actuators:
        state_machine: [ attacker_actuators ]
  - phaseII_train:
      phase_config: [training]
      environments: [[midasmv_tar_ms_train]]  # one factor, one level
      agents: [[sauron_sac_env_imp]]
      sensors:
        sauron_sac_env_imp: [not_all_sensors]
        #gandalf_sac: [all_sensors]
      actuators:
        sauron_sac_env_imp: [attacker_actuators]
        #gandalf_sac: [defender_actuators]
  - phaseIII_test:
      phase_config: [test]
      environments: [[midasmv_tar_ms]]  # one factor, one level
      agents: [[sauron_sac_env_imp]]
      sensors:
        sauron_sac_env_imp: [not_all_sensors]
        #gandalf_sac: [all_sensors]
      actuators:
        sauron_sac_env_imp: [attacker_actuators]
        #gandalf_sac: [defender_actuators]
  - phaseIV_test_later:
      phase_config: [test]
      environments: [[midasmv_tar_ms_later]]

  - phaseV_test_other_season:
      phase_config: [test]
      environments: [[midasmv_tar_ms_other_season]]
