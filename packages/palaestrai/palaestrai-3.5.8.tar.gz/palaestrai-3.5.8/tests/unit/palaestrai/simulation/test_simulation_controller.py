from __future__ import annotations
from typing import Iterator, Any

from unittest.async_case import IsolatedAsyncioTestCase
from unittest.mock import patch, AsyncMock, MagicMock

import numpy as np

from palaestrai.core.protocol import (
    SimulationStartRequest,
    SimulationStartResponse,
    EnvironmentSetupRequest,
    EnvironmentSetupResponse,
    EnvironmentStartRequest,
    EnvironmentStartResponse,
    AgentSetupRequest,
    AgentSetupResponse,
)

from palaestrai.agent import (
    SensorInformation,
    ActuatorInformation,
)
from palaestrai.simulation import SimulationController
from palaestrai.types import Mode, Discrete, Box


class AwaitableMock(AsyncMock):
    def __await__(self) -> Iterator[Any]:
        self.await_count += 1
        return iter([])


class TestSimulationController(IsolatedAsyncioTestCase):
    @patch(
        "asyncio.get_running_loop",
        return_value=MagicMock(
            create_future=MagicMock(return_value=AwaitableMock())
        ),
    )
    def test_unassigned_sensors_actuators(self, _):
        sc = SimulationController(
            termination_conditions=[],
            environment_conductor_ids=[],
            agent_conductor_ids=["ac1", "ac2", "ac3"],
            agents={
                "ac1": {  # All sensors/actuators: Ok.
                    "sensors": [
                        "myenv.0",
                        "myenv.1",
                        "myenv.2",
                        "myenv.3",
                        "myenv.4",
                    ],
                    "actuators": [
                        "myenv.0",
                        "myenv.1",
                        "myenv.2",
                        "myenv.3",
                        "myenv.4",
                    ],
                },
                "ac2": {
                    "sensors": [
                        "myenv.0",  # Ok
                        "1sensor_without_envid",  # No env ID
                        "myenv.snesor_with_typo",  # Typo in sensor
                    ],
                    "actuators": [
                        "myemv.4",  # Typo in env
                        "myenv.6",  # Does not exist.
                    ],
                },
                "ac3": {  # Only a subset of available sensors/actuators, ok.
                    "sensors": ["myenv.0", "myenv.4"],
                    "actuators": ["myenv.0", "myenv.1", "myenv.4"],
                },
            },
            mode=Mode.TEST,  # Pun intended.
        )

        _sensors = [
            SensorInformation(0, Discrete(1), f"myenv.{i}") for i in range(5)
        ]
        _actuators = [
            ActuatorInformation(0, Discrete(1), f"myenv.{i}") for i in range(5)
        ]
        sc._sensors_available.update(
            {sensor.uid: sensor for sensor in _sensors}
        )
        sc._actuators_available.update(
            {actuator.uid: actuator for actuator in _actuators}
        )

        self.assertDictEqual(
            sc._unassigned_sensors_actuators(),
            {
                "ac2": (
                    {"1sensor_without_envid", "myenv.snesor_with_typo"},
                    {"myemv.4", "myenv.6"},
                )
            },
        )

    def test_unassigned_sensors_actuators_midas(self):
        sc = SimulationController(
            termination_conditions=[],
            environment_conductor_ids=[],
            agent_conductor_ids=["AgentConductor-2815b6"],
            agents={
                "AgentConductor-2815b6": {
                    "actuators": [
                        "midas_powergrid.Powergrid-0.0-load-0-1.p_mw",
                        "midas_powergrid.Powergrid-0.0-load-0-1.q_mvar",
                        "midas_powergrid.Powergrid-0.0-load-1-3.p_mw",
                        "midas_powergrid.Powergrid-0.0-load-1-3.q_mvar",
                        "midas_powergrid.Powergrid-0.0-load-10-12.p_mw",
                        "midas_powergrid.Powergrid-0.0-load-10-12.q_mvar",
                        "midas_powergrid.Powergrid-0.0-load-11-13.p_mw",
                        "midas_powergrid.Powergrid-0.0-load-11-13.q_mvar",
                        "midas_powergrid.Powergrid-0.0-load-12-14.p_mw",
                        "midas_powergrid.Powergrid-0.0-load-12-14.q_mvar",
                        "midas_powergrid.Powergrid-0.0-load-2-4.p_mw",
                        "midas_powergrid.Powergrid-0.0-load-2-4.q_mvar",
                        "midas_powergrid.Powergrid-0.0-load-3-5.p_mw",
                        "midas_powergrid.Powergrid-0.0-load-3-5.q_mvar",
                        "midas_powergrid.Powergrid-0.0-sgen-0-1.p_mw",
                        "midas_powergrid.Powergrid-0.0-sgen-0-1.q_mvar",
                        "midas_powergrid.Powergrid-0.0-sgen-1-3.p_mw",
                        "midas_powergrid.Powergrid-0.0-sgen-1-3.q_mvar",
                        "midas_powergrid.Powergrid-0.0-sgen-10-12.p_mw",
                        "midas_powergrid.Powergrid-0.0-sgen-10-12.q_mvar",
                        "midas_powergrid.Powergrid-0.0-sgen-11-13.p_mw",
                        "midas_powergrid.Powergrid-0.0-sgen-11-13.q_mvar",
                        "midas_powergrid.Powergrid-0.0-sgen-12-14.p_mw",
                        "midas_powergrid.Powergrid-0.0-sgen-12-14.q_mvar",
                        "midas_powergrid.Powergrid-0.0-sgen-2-4.p_mw",
                        "midas_powergrid.Powergrid-0.0-sgen-2-4.q_mvar",
                        "midas_powergrid.Powergrid-0.0-sgen-3-5.p_mw",
                        "midas_powergrid.Powergrid-0.0-sgen-3-5.q_mva",
                    ],
                    "sensors": [
                        "midas_powergrid.Powergrid-0.0-ext_grid-0-0.p_mw",
                        "midas_powergrid.Powergrid-0.0-bus-1.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-1.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-10.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-10.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-11.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-11.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-12.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-12.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-13.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-13.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-14.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-14.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-2.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-2.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-3.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-3.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-4.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-4.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-5.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-5.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-6.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-6.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-7.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-7.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-8.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-8.va_degree",
                        "midas_powergrid.Powergrid-0.0-bus-9.vm_pu",
                        "midas_powergrid.Powergrid-0.0-bus-9.va_degree",
                        "midas_powergrid.Powergrid-0.0-line-0.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-0.in_service",
                        "midas_powergrid.Powergrid-0.0-line-1.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-1.in_service",
                        "midas_powergrid.Powergrid-0.0-line-10.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-10.in_service",
                        "midas_powergrid.Powergrid-0.0-line-11.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-11.in_service",
                        "midas_powergrid.Powergrid-0.0-line-12.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-12.in_service",
                        "midas_powergrid.Powergrid-0.0-line-13.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-13.in_service",
                        "midas_powergrid.Powergrid-0.0-line-14.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-14.in_service",
                        "midas_powergrid.Powergrid-0.0-line-2.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-2.in_service",
                        "midas_powergrid.Powergrid-0.0-line-3.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-3.in_service",
                        "midas_powergrid.Powergrid-0.0-line-4.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-4.in_service",
                        "midas_powergrid.Powergrid-0.0-line-5.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-5.in_service",
                        "midas_powergrid.Powergrid-0.0-line-6.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-6.in_service",
                        "midas_powergrid.Powergrid-0.0-line-7.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-7.in_service",
                        "midas_powergrid.Powergrid-0.0-line-8.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-8.in_service",
                        "midas_powergrid.Powergrid-0.0-line-9.loading_percent",
                        "midas_powergrid.Powergrid-0.0-line-9.in_service",
                    ],
                },
            },
            mode=Mode.TEST,  # Pun intended.
        )

        sc._sensors_available = {
            uid: MagicMock()
            for uid in [
                "midas_powergrid.Powergrid-0.0-bus-2.in_service",
                "midas_powergrid.Powergrid-0.0-bus-1.va_degree",
                "midas_powergrid.Powergrid-0.0-line-8.i_to_ka",
                "midas_powergrid.Powergrid-0.0-line-10.i_to_ka",
                "midas_powergrid.Powergrid-0.0-line-11.loading_percent",
                "midas_powergrid.Powergrid-0.0-bus-2.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-13.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-line-6.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-line-7.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-line-14.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-9.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-switch-7.closed",
                "midas_powergrid.Powergrid-0.0-switch-7.i_ka",
                "midas_powergrid.Powergrid-0.0-line-9.in_service",
                "midas_powergrid.Powergrid-0.0-line-13.va_to_degree",
                "midas_powergrid.Powergrid-0.0-bus-3.in_service",
                "midas_powergrid.Powergrid-0.0-bus-13.va_degree",
                "midas_powergrid.Powergrid-0.0-line-4.loading_percent",
                "midas_powergrid.Powergrid-0.0-load-6-8.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-13.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-12.p_from_mw",
                "midas_powergrid.Powergrid-0.0-bus-11.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-9.i_from_ka",
                "midas_powergrid.Powergrid-0.0-ext_grid-0-0.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-6.va_from_degree",
                "midas_powergrid.Powergrid-0.0-trafo-0.i_hv_ka",
                "midas_powergrid.Powergrid-0.0-line-3.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-bus-8.vm_pu",
                "midas_powergrid.Powergrid-0.0-storage-1-3.in_service",
                "midas_powergrid.Powergrid-0.0-line-12.i_from_ka",
                "midas_powergrid.Powergrid-0.0-storage-8-10.q_mvar",
                "midas_powergrid.Powergrid-0.0-bus-7.p_mw",
                "midas_powergrid.Powergrid-0.0-line-12.max_i_ka",
                "midas_powergrid.Powergrid-0.0-sgen-8-10.in_service",
                "midas_powergrid.Powergrid-0.0-line-13.in_service",
                "midas_powergrid.Powergrid-0.0-line-6.i_to_ka",
                "midas_powergrid.Powergrid-0.0-bus-8.va_degree",
                "midas_powergrid.Powergrid-0.0-line-5.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-10.max_i_ka",
                "midas_powergrid.Powergrid-0.0-line-14.i_from_ka",
                "midas_powergrid.Powergrid-0.0-line-4.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-line-1.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-1-3.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-10.loading_percent",
                "midas_powergrid.Powergrid-0.0-line-7.max_i_ka",
                "midas_powergrid.Powergrid-0.0-line-7.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-6.in_service",
                "midas_powergrid.Powergrid-0.0-line-0.i_from_ka",
                "midas_powergrid.Powergrid-0.0-load-2-4.p_mw",
                "midas_powergrid.Powergrid-0.0-sgen-2-4.q_mvar",
                "midas_powergrid.Powergrid-0.0-trafo-0.loading_percent",
                "midas_powergrid.Powergrid-0.0-load-0-1.in_service",
                "midas_powergrid.Powergrid-0.0-line-2.i_to_ka",
                "midas_powergrid.Powergrid-0.0-bus-13.in_service",
                "midas_powergrid.Powergrid-0.0-line-12.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-12.i_to_ka",
                "midas_powergrid.Powergrid-0.0-line-1.va_from_degree",
                "midas_powergrid.Powergrid-0.0-bus-1.vn_kv",
                "midas_powergrid.Powergrid-0.0-bus-8.q_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-1-3.p_mw",
                "midas_powergrid.Powergrid-0.0-trafo-1.loading_percent",
                "midas_powergrid.Powergrid-0.0-line-14.va_from_degree",
                "midas_powergrid.Powergrid-0.Grid-0.health",
                "midas_powergrid.Powergrid-0.0-line-4.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-bus-5.vn_kv",
                "midas_powergrid.Powergrid-0.0-line-3.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-bus-8.p_mw",
                "midas_powergrid.Powergrid-0.0-line-8.va_from_degree",
                "midas_powergrid.Powergrid-0.0-line-3.p_from_mw",
                "midas_powergrid.Powergrid-0.0-trafo-1.q_lv_mvar",
                "midas_powergrid.Powergrid-0.0-line-5.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-line-14.p_from_mw",
                "midas_powergrid.Powergrid-0.0-line-13.p_from_mw",
                "midas_powergrid.Powergrid-0.0-bus-12.vm_pu",
                "midas_powergrid.Powergrid-0.0-bus-3.q_mvar",
                "midas_powergrid.Powergrid-0.0-switch-6.i_ka",
                "midas_powergrid.Powergrid-0.0-bus-6.in_service",
                "midas_powergrid.Powergrid-0.0-bus-9.va_degree",
                "midas_powergrid.Powergrid-0.0-trafo-0.vm_hv_pu",
                "midas_powergrid.Powergrid-0.0-storage-7-9.in_service",
                "midas_powergrid.Powergrid-0.0-line-0.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-load-7-9.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-12-14.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-10.va_from_degree",
                "midas_powergrid.Powergrid-0.0-line-7.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-7-9.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-6.p_from_mw",
                "midas_powergrid.Powergrid-0.0-bus-14.p_mw",
                "midas_powergrid.Powergrid-0.0-line-13.i_from_ka",
                "midas_powergrid.Powergrid-0.0-bus-4.va_degree",
                "midas_powergrid.Powergrid-0.0-bus-3.va_degree",
                "midas_powergrid.Powergrid-0.0-storage-4-6.in_service",
                "midas_powergrid.Powergrid-0.0-bus-5.va_degree",
                "midas_powergrid.Powergrid-0.0-storage-3-5.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-9.q_mvar",
                "midas_powergrid.Powergrid-0.0-load-5-7.p_mw",
                "midas_powergrid.Powergrid-0.0-sgen-7-9.in_service",
                "midas_powergrid.Powergrid-0.0-line-6.max_i_ka",
                "midas_powergrid.Powergrid-0.0-trafo-0.in_service",
                "midas_powergrid.Powergrid-0.0-load-10-12.q_mvar",
                "midas_powergrid.Powergrid-0.0-bus-2.vn_kv",
                "midas_powergrid.Powergrid-0.0-bus-1.in_service",
                "midas_powergrid.Powergrid-0.0-line-14.i_to_ka",
                "midas_powergrid.Powergrid-0.0-line-7.p_from_mw",
                "midas_powergrid.Powergrid-0.0-load-8-10.q_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-12-14.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-4.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-8.max_i_ka",
                "midas_powergrid.Powergrid-0.0-load-4-6.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-8.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-load-8-10.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-7.vm_pu",
                "midas_powergrid.Powergrid-0.0-storage-11-13.p_mw",
                "midas_powergrid.Powergrid-0.0-trafo-0.vm_lv_pu",
                "midas_powergrid.Powergrid-0.0-line-0.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-line-2.loading_percent",
                "midas_powergrid.Powergrid-0.0-bus-6.vn_kv",
                "midas_powergrid.Powergrid-0.0-line-1.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-line-11.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-line-11.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-line-8.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-10.p_to_mw",
                "midas_powergrid.Powergrid-0.0-bus-12.va_degree",
                "midas_powergrid.Powergrid-0.0-bus-3.p_mw",
                "midas_powergrid.Powergrid-0.0-storage-6-8.p_mw",
                "midas_powergrid.Powergrid-0.0-storage-0-1.q_mvar",
                "midas_powergrid.Powergrid-0.0-bus-13.vm_pu",
                "midas_powergrid.Powergrid-0.0-storage-2-4.p_mw",
                "midas_powergrid.Powergrid-0.0-switch-4.i_ka",
                "midas_powergrid.Powergrid-0.0-line-9.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-switch-5.i_ka",
                "midas_powergrid.Powergrid-0.0-line-4.va_to_degree",
                "midas_powergrid.Powergrid-0.0-load-4-6.in_service",
                "midas_powergrid.Powergrid-0.0-load-7-9.in_service",
                "midas_powergrid.Powergrid-0.0-bus-6.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-5.va_to_degree",
                "midas_powergrid.Powergrid-0.0-line-5.i_to_ka",
                "midas_powergrid.Powergrid-0.0-sgen-4-6.p_mw",
                "midas_powergrid.Powergrid-0.0-storage-8-10.p_mw",
                "midas_powergrid.Powergrid-0.0-line-1.p_from_mw",
                "midas_powergrid.Powergrid-0.0-line-2.p_from_mw",
                "midas_powergrid.Powergrid-0.0-storage-10-12.q_mvar",
                "midas_powergrid.Powergrid-0.0-bus-12.in_service",
                "midas_powergrid.Powergrid-0.0-line-2.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-6.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-line-12.loading_percent",
                "midas_powergrid.Powergrid-0.0-switch-1.i_ka",
                "midas_powergrid.Powergrid-0.0-trafo-1.p_lv_mw",
                "midas_powergrid.Powergrid-0.0-line-6.p_to_mw",
                "midas_powergrid.Powergrid-0.0-trafo-1.in_service",
                "midas_powergrid.Powergrid-0.0-line-2.max_i_ka",
                "midas_powergrid.Powergrid-0.0-line-5.p_from_mw",
                "midas_powergrid.Powergrid-0.0-line-1.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-line-4.p_to_mw",
                "midas_powergrid.Powergrid-0.0-storage-7-9.p_mw",
                "midas_powergrid.Powergrid-0.0-line-0.i_to_ka",
                "midas_powergrid.Powergrid-0.0-line-13.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-line-2.i_from_ka",
                "midas_powergrid.Powergrid-0.0-bus-1.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-2.p_mw",
                "midas_powergrid.Powergrid-0.0-storage-0-1.in_service",
                "midas_powergrid.Powergrid-0.0-sgen-9-11.q_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-5-7.p_mw",
                "midas_powergrid.Powergrid-0.0-trafo-0.va_hv_degree",
                "midas_powergrid.Powergrid-0.0-line-13.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-sgen-12-14.in_service",
                "midas_powergrid.Powergrid-0.0-storage-10-12.in_service",
                "midas_powergrid.Powergrid-0.0-load-12-14.in_service",
                "midas_powergrid.Powergrid-0.0-line-2.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-line-5.i_from_ka",
                "midas_powergrid.Powergrid-0.0-storage-4-6.p_mw",
                "midas_powergrid.Powergrid-0.0-switch-5.closed",
                "midas_powergrid.Powergrid-0.0-ext_grid-0-0.p_mw",
                "midas_powergrid.Powergrid-0.0-trafo-1.i_hv_ka",
                "midas_powergrid.Powergrid-0.0-bus-13.vn_kv",
                "midas_powergrid.Powergrid-0.0-bus-6.vm_pu",
                "midas_powergrid.Powergrid-0.0-line-13.va_from_degree",
                "midas_powergrid.Powergrid-0.0-line-10.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-storage-5-7.in_service",
                "midas_powergrid.Powergrid-0.0-load-8-10.in_service",
                "midas_powergrid.Powergrid-0.0-line-3.p_to_mw",
                "midas_powergrid.Powergrid-0.0-bus-14.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-8.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-load-12-14.p_mw",
                "midas_powergrid.Powergrid-0.0-line-1.i_from_ka",
                "midas_powergrid.Powergrid-0.0-bus-5.p_mw",
                "midas_powergrid.Powergrid-0.0-line-7.in_service",
                "midas_powergrid.Powergrid-0.0-line-4.va_from_degree",
                "midas_powergrid.Powergrid-0.0-line-11.va_to_degree",
                "midas_powergrid.Powergrid-0.0-bus-4.in_service",
                "midas_powergrid.Powergrid-0.0-load-0-1.q_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-3-5.in_service",
                "midas_powergrid.Powergrid-0.0-bus-9.in_service",
                "midas_powergrid.Powergrid-0.0-bus-8.vn_kv",
                "midas_powergrid.Powergrid-0.0-line-11.in_service",
                "midas_powergrid.Powergrid-0.0-load-4-6.p_mw",
                "midas_powergrid.Powergrid-0.0-sgen-5-7.q_mvar",
                "midas_powergrid.Powergrid-0.0-bus-5.vm_pu",
                "midas_powergrid.Powergrid-0.0-sgen-0-1.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-3-5.in_service",
                "midas_powergrid.Powergrid-0.0-sgen-2-4.p_mw",
                "midas_powergrid.Powergrid-0.0-switch-3.i_ka",
                "midas_powergrid.Powergrid-0.0-trafo-0.tap_max",
                "midas_powergrid.Powergrid-0.0-storage-12-14.in_service",
                "midas_powergrid.Powergrid-0.0-line-12.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-line-8.loading_percent",
                "midas_powergrid.Powergrid-0.0-load-2-4.in_service",
                "midas_powergrid.Powergrid-0.0-storage-1-3.p_mw",
                "midas_powergrid.Powergrid-0.0-line-3.i_to_ka",
                "midas_powergrid.Powergrid-0.0-load-1-3.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-10.p_from_mw",
                "midas_powergrid.Powergrid-0.0-line-5.loading_percent",
                "midas_powergrid.Powergrid-0.0-line-9.va_to_degree",
                "midas_powergrid.Powergrid-0.0-sgen-7-9.p_mw",
                "midas_powergrid.Powergrid-0.0-trafo-0.tap_pos",
                "midas_powergrid.Powergrid-0.0-line-7.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-line-14.loading_percent",
                "midas_powergrid.Powergrid-0.0-bus-11.p_mw",
                "midas_powergrid.Powergrid-0.0-sgen-3-5.q_mvar",
                "midas_powergrid.Powergrid-0.0-bus-10.in_service",
                "midas_powergrid.Powergrid-0.0-line-3.va_from_degree",
                "midas_powergrid.Powergrid-0.0-sgen-10-12.q_mvar",
                "midas_powergrid.Powergrid-0.0-load-5-7.q_mvar",
                "midas_powergrid.Powergrid-0.0-trafo-0.delta_tap_pos",
                "midas_powergrid.Powergrid-0.0-line-4.i_to_ka",
                "midas_powergrid.Powergrid-0.0-sgen-6-8.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-10.q_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-0-1.p_mw",
                "midas_powergrid.Powergrid-0.0-trafo-0.p_hv_mw",
                "midas_powergrid.Powergrid-0.0-bus-3.vm_pu",
                "midas_powergrid.Powergrid-0.0-sgen-12-14.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-10.i_from_ka",
                "midas_powergrid.Powergrid-0.0-switch-0.i_ka",
                "midas_powergrid.Powergrid-0.0-storage-7-9.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-11.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-load-3-5.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-6.p_mw",
                "midas_powergrid.Powergrid-0.0-line-6.loading_percent",
                "midas_powergrid.Powergrid-0.0-line-10.in_service",
                "midas_powergrid.Powergrid-0.0-trafo-1.va_lv_degree",
                "midas_powergrid.Powergrid-0.0-bus-4.p_mw",
                "midas_powergrid.Powergrid-0.0-line-11.i_to_ka",
                "midas_powergrid.Powergrid-0.0-line-14.max_i_ka",
                "midas_powergrid.Powergrid-0.0-line-7.loading_percent",
                "midas_powergrid.Powergrid-0.0-line-4.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-line-4.p_from_mw",
                "midas_powergrid.Powergrid-0.0-trafo-0.p_lv_mw",
                "midas_powergrid.Powergrid-0.0-bus-12.q_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-4-6.q_mvar",
                "midas_powergrid.Powergrid-0.0-load-10-12.in_service",
                "midas_powergrid.Powergrid-0.0-storage-2-4.in_service",
                "midas_powergrid.Powergrid-0.0-bus-4.vm_pu",
                "midas_powergrid.Powergrid-0.0-line-9.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-storage-5-7.q_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-11-13.p_mw",
                "midas_powergrid.Powergrid-0.0-sgen-9-11.in_service",
                "midas_powergrid.Powergrid-0.0-line-1.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-6.i_from_ka",
                "midas_powergrid.Powergrid-0.0-load-6-8.in_service",
                "midas_powergrid.Powergrid-0.0-load-11-13.in_service",
                "midas_powergrid.Powergrid-0.0-line-2.in_service",
                "midas_powergrid.Powergrid-0.0-switch-3.closed",
                "midas_powergrid.Powergrid-0.0-line-14.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-line-8.i_from_ka",
                "midas_powergrid.Powergrid-0.0-storage-6-8.in_service",
                "midas_powergrid.Powergrid-0.0-trafo-1.tap_max",
                "midas_powergrid.Powergrid-0.0-trafo-0.q_hv_mvar",
                "midas_powergrid.Powergrid-0.0-line-11.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-line-1.loading_percent",
                "midas_powergrid.Powergrid-0.0-switch-4.closed",
                "midas_powergrid.Powergrid-0.0-sgen-8-10.q_mvar",
                "midas_powergrid.Powergrid-0.0-bus-10.va_degree",
                "midas_powergrid.Powergrid-0.0-load-1-3.p_mw",
                "midas_powergrid.Powergrid-0.0-line-3.i_from_ka",
                "midas_powergrid.Powergrid-0.0-sgen-0-1.in_service",
                "midas_powergrid.Powergrid-0.0-sgen-1-3.in_service",
                "midas_powergrid.Powergrid-0.0-line-11.i_from_ka",
                "midas_powergrid.Powergrid-0.0-bus-1.vm_pu",
                "midas_powergrid.Powergrid-0.0-bus-11.vm_pu",
                "midas_powergrid.Powergrid-0.0-bus-11.in_service",
                "midas_powergrid.Powergrid-0.0-storage-2-4.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-3-5.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-5.max_i_ka",
                "midas_powergrid.Powergrid-0.0-line-8.in_service",
                "midas_powergrid.Powergrid-0.0-storage-11-13.in_service",
                "midas_powergrid.Powergrid-0.0-line-0.va_from_degree",
                "midas_powergrid.Powergrid-0.0-line-4.i_from_ka",
                "midas_powergrid.Powergrid-0.0-load-0-1.p_mw",
                "midas_powergrid.Powergrid-0.0-line-7.i_from_ka",
                "midas_powergrid.Powergrid-0.0-sgen-10-12.in_service",
                "midas_powergrid.Powergrid-0.0-line-14.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-bus-5.in_service",
                "midas_powergrid.Powergrid-0.0-line-8.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-line-0.max_i_ka",
                "midas_powergrid.Powergrid-0.0-line-14.va_to_degree",
                "midas_powergrid.Powergrid-0.0-line-3.in_service",
                "midas_powergrid.Powergrid-0.0-sgen-5-7.in_service",
                "midas_powergrid.Powergrid-0.0-bus-4.vn_kv",
                "midas_powergrid.Powergrid-0.0-bus-7.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-9-11.in_service",
                "midas_powergrid.Powergrid-0.0-line-0.loading_percent",
                "midas_powergrid.Powergrid-0.0-line-6.va_to_degree",
                "midas_powergrid.Powergrid-0.0-line-9.max_i_ka",
                "midas_powergrid.Powergrid-0.0-bus-9.vn_kv",
                "midas_powergrid.Powergrid-0.0-bus-10.vm_pu",
                "midas_powergrid.Powergrid-0.0-line-10.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-line-4.max_i_ka",
                "midas_powergrid.Powergrid-0.0-bus-14.vm_pu",
                "midas_powergrid.Powergrid-0.0-load-5-7.in_service",
                "midas_powergrid.Powergrid-0.0-line-12.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-line-3.max_i_ka",
                "midas_powergrid.Powergrid-0.0-line-1.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-load-10-12.p_mw",
                "midas_powergrid.Powergrid-0.0-trafo-1.tap_min",
                "midas_powergrid.Powergrid-0.0-trafo-1.delta_tap_pos",
                "midas_powergrid.Powergrid-0.0-line-11.p_to_mw",
                "midas_powergrid.Powergrid-0.0-load-7-9.p_mw",
                "midas_powergrid.Powergrid-0.0-line-2.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-storage-12-14.p_mw",
                "midas_powergrid.Powergrid-0.0-line-10.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-11-13.in_service",
                "midas_powergrid.Powergrid-0.0-line-3.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-trafo-0.i_lv_ka",
                "midas_powergrid.Powergrid-0.0-sgen-4-6.in_service",
                "midas_powergrid.Powergrid-0.0-trafo-1.vm_hv_pu",
                "midas_powergrid.Powergrid-0.0-line-1.in_service",
                "midas_powergrid.Powergrid-0.0-bus-1.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-12.in_service",
                "midas_powergrid.Powergrid-0.0-bus-7.va_degree",
                "midas_powergrid.Powergrid-0.0-line-8.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-bus-14.in_service",
                "midas_powergrid.Powergrid-0.0-bus-8.in_service",
                "midas_powergrid.Powergrid-0.0-bus-2.vm_pu",
                "midas_powergrid.Powergrid-0.0-switch-6.closed",
                "midas_powergrid.Powergrid-0.0-line-9.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-bus-2.va_degree",
                "midas_powergrid.Powergrid-0.0-line-13.loading_percent",
                "midas_powergrid.Powergrid-0.0-sgen-6-8.in_service",
                "midas_powergrid.Powergrid-0.0-line-1.max_i_ka",
                "midas_powergrid.Powergrid-0.0-load-1-3.in_service",
                "midas_powergrid.Powergrid-0.0-line-13.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-12.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-line-5.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-load-3-5.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-10-12.p_mw",
                "midas_powergrid.Powergrid-0.0-storage-9-11.p_mw",
                "midas_powergrid.Powergrid-0.0-line-5.va_from_degree",
                "midas_powergrid.Powergrid-0.0-line-9.loading_percent",
                "midas_powergrid.Powergrid-0.0-trafo-1.vm_lv_pu",
                "midas_powergrid.Powergrid-0.0-load-11-13.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-1-3.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-6-8.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-4.in_service",
                "midas_powergrid.Powergrid-0.0-line-13.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-line-0.va_to_degree",
                "midas_powergrid.Powergrid-0.0-line-9.p_to_mw",
                "midas_powergrid.Powergrid-0.0-line-12.va_to_degree",
                "midas_powergrid.Powergrid-0.0-line-3.va_to_degree",
                "midas_powergrid.Powergrid-0.0-line-5.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-load-12-14.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-7.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-trafo-1.va_hv_degree",
                "midas_powergrid.Powergrid-0.0-line-11.max_i_ka",
                "midas_powergrid.Powergrid-0.0-bus-9.p_mw",
                "midas_powergrid.Powergrid-0.0-line-1.i_to_ka",
                "midas_powergrid.Powergrid-0.0-bus-7.in_service",
                "midas_powergrid.Powergrid-0.0-load-2-4.q_mvar",
                "midas_powergrid.Powergrid-0.0-trafo-0.va_lv_degree",
                "midas_powergrid.Powergrid-0.0-trafo-0.tap_min",
                "midas_powergrid.Powergrid-0.0-sgen-3-5.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-11.va_degree",
                "midas_powergrid.Powergrid-0.0-line-3.loading_percent",
                "midas_powergrid.Powergrid-0.0-trafo-0.q_lv_mvar",
                "midas_powergrid.Powergrid-0.0-storage-0-1.p_mw",
                "midas_powergrid.Powergrid-0.0-line-6.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-line-13.i_to_ka",
                "midas_powergrid.Powergrid-0.0-bus-5.q_mvar",
                "midas_powergrid.Powergrid-0.0-bus-6.va_degree",
                "midas_powergrid.Powergrid-0.0-load-9-11.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-5-7.p_mw",
                "midas_powergrid.Powergrid-0.0-line-5.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-line-0.in_service",
                "midas_powergrid.Powergrid-0.0-line-10.q_to_mvar",
                "midas_powergrid.Powergrid-0.0-bus-9.vm_pu",
                "midas_powergrid.Powergrid-0.0-line-7.va_from_degree",
                "midas_powergrid.Powergrid-0.0-sgen-6-8.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-0.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-load-3-5.in_service",
                "midas_powergrid.Powergrid-0.0-trafo-1.q_hv_mvar",
                "midas_powergrid.Powergrid-0.0-load-6-8.q_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-2-4.in_service",
                "midas_powergrid.Powergrid-0.0-trafo-1.p_hv_mw",
                "midas_powergrid.Powergrid-0.0-line-14.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-bus-12.p_mw",
                "midas_powergrid.Powergrid-0.0-line-12.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-line-2.va_to_degree",
                "midas_powergrid.Powergrid-0.0-line-0.p_to_mw",
                "midas_powergrid.Powergrid-0.0-bus-14.vn_kv",
                "midas_powergrid.Powergrid-0.0-bus-14.va_degree",
                "midas_powergrid.Powergrid-0.0-sgen-11-13.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-10.va_to_degree",
                "midas_powergrid.Powergrid-0.0-bus-10.vn_kv",
                "midas_powergrid.Powergrid-0.0-line-2.q_from_mvar",
                "midas_powergrid.Powergrid-0.0-sgen-9-11.p_mw",
                "midas_powergrid.Powergrid-0.0-bus-10.p_mw",
                "midas_powergrid.Powergrid-0.0-sgen-10-12.p_mw",
                "midas_powergrid.Powergrid-0.0-line-1.va_to_degree",
                "midas_powergrid.Powergrid-0.0-sgen-8-10.p_mw",
                "midas_powergrid.Powergrid-0.0-line-11.va_from_degree",
                "midas_powergrid.Powergrid-0.0-switch-0.closed",
                "midas_powergrid.Powergrid-0.0-switch-1.closed",
                "midas_powergrid.Powergrid-0.0-switch-2.i_ka",
                "midas_powergrid.Powergrid-0.0-line-13.max_i_ka",
                "midas_powergrid.Powergrid-0.0-line-8.p_from_mw",
                "midas_powergrid.Powergrid-0.0-bus-12.vn_kv",
                "midas_powergrid.Powergrid-0.0-line-9.va_from_degree",
                "midas_powergrid.Powergrid-0.0-load-9-11.p_mw",
                "midas_powergrid.Powergrid-0.0-line-7.i_to_ka",
                "midas_powergrid.Powergrid-0.0-line-8.va_to_degree",
                "midas_powergrid.Powergrid-0.0-line-12.va_from_degree",
                "midas_powergrid.Powergrid-0.0-load-9-11.in_service",
                "midas_powergrid.Powergrid-0.0-line-7.va_to_degree",
                "midas_powergrid.Powergrid-0.0-bus-7.vn_kv",
                "midas_powergrid.Powergrid-0.0-line-0.p_from_mw",
                "midas_powergrid.Powergrid-0.0-bus-3.vn_kv",
                "midas_powergrid.Powergrid-0.0-line-9.p_from_mw",
                "midas_powergrid.Powergrid-0.0-line-3.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-line-5.in_service",
                "midas_powergrid.Powergrid-0.0-line-9.i_to_ka",
                "midas_powergrid.Powergrid-0.0-line-11.p_from_mw",
                "midas_powergrid.Powergrid-0.0-bus-13.p_mw",
                "midas_powergrid.Powergrid-0.0-line-2.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-trafo-1.tap_pos",
                "midas_powergrid.Powergrid-0.0-line-2.va_from_degree",
                "midas_powergrid.Powergrid-0.0-line-14.in_service",
                "midas_powergrid.Powergrid-0.0-load-11-13.p_mw",
                "midas_powergrid.Powergrid-0.0-line-6.vm_to_pu",
                "midas_powergrid.Powergrid-0.0-storage-8-10.in_service",
                "midas_powergrid.Powergrid-0.0-line-4.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-storage-4-6.q_mvar",
                "midas_powergrid.Powergrid-0.0-switch-2.closed",
                "midas_powergrid.Powergrid-0.0-line-14.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-trafo-1.i_lv_ka",
                "midas_powergrid.Powergrid-0.0-storage-11-13.q_mvar",
                "midas_powergrid.Powergrid-0.0-storage-9-11.q_mvar",
                "midas_powergrid.Powergrid-0.0-line-0.vm_from_pu",
                "midas_powergrid.Powergrid-0.0-bus-11.vn_kv",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.wind_dir_deg",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.air_pressure_hpa",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.dh_w_per_m2",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.t_air_deg_celsius",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.day_avg_t_air_deg_celsius",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.wind_v_m_per_s",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.bh_w_per_m2",
                "midas_powergrid.Pysimmods-0.Photovoltaic-4.p_possible_max_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-0.p_possible_max_mw",
                "midas_powergrid.Pysimmods-0.CHP-0.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-5.p_possible_max_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-1.t_module_deg_celsius",
                "midas_powergrid.Pysimmods-0.Photovoltaic-5.t_module_deg_celsius",
                "midas_powergrid.Pysimmods-0.Battery-0.p_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-4.p_mw",
                "midas_powergrid.Pysimmods-0.HVAC-0.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-4.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-2.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-6.p_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-2.p_possible_max_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-3.t_module_deg_celsius",
                "midas_powergrid.Pysimmods-0.Photovoltaic-4.t_module_deg_celsius",
                "midas_powergrid.Pysimmods-0.Photovoltaic-1.p_mw",
                "midas_powergrid.Pysimmods-0.CHP-1.p_mw",
                "midas_powergrid.Pysimmods-0.CHP-0.p_mw",
                "midas_powergrid.Pysimmods-0.HVAC-0.p_mw",
                "midas_powergrid.Pysimmods-0.HVAC-1.p_mw",
                "midas_powergrid.Pysimmods-0.Battery-0.soc_percent",
                "midas_powergrid.Pysimmods-0.Photovoltaic-6.t_module_deg_celsius",
                "midas_powergrid.Pysimmods-0.Photovoltaic-2.p_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-5.q_mvar",
                "midas_powergrid.Pysimmods-0.Battery-0.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-6.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-3.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-1.p_possible_max_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-0.q_mvar",
                "midas_powergrid.Pysimmods-0.CHP-1.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-3.p_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-2.t_module_deg_celsius",
                "midas_powergrid.Pysimmods-0.CHP-2.p_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-3.p_possible_max_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-0.p_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-6.p_possible_max_mw",
                "midas_powergrid.Pysimmods-0.HVAC-1.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-1.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-0.t_module_deg_celsius",
                "midas_powergrid.Pysimmods-0.CHP-2.q_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-5.p_mw",
            ]
        }
        sc._actuators_available = {
            uid: MagicMock()
            for uid in [
                "midas_powergrid.Powergrid-0.0-switch-0.closed",
                "midas_powergrid.Powergrid-0.0-switch-1.closed",
                "midas_powergrid.Powergrid-0.0-switch-2.closed",
                "midas_powergrid.Powergrid-0.0-switch-3.closed",
                "midas_powergrid.Powergrid-0.0-switch-4.closed",
                "midas_powergrid.Powergrid-0.0-switch-5.closed",
                "midas_powergrid.Powergrid-0.0-switch-6.closed",
                "midas_powergrid.Powergrid-0.0-switch-7.closed",
                "midas_powergrid.Powergrid-0.0-trafo-0.delta_tap_pos",
                "midas_powergrid.Powergrid-0.0-trafo-0.tap_pos",
                "midas_powergrid.Powergrid-0.0-trafo-1.delta_tap_pos",
                "midas_powergrid.Powergrid-0.0-trafo-1.tap_pos",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.delta_wind_v_m_per_s",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.delta_t_air_deg_celsius",
                "midas_powergrid.WeatherData-0.WeatherCurrent-0.delta_gh_w_per_m2",
                "midas_powergrid.Pysimmods-0.Photovoltaic-0.p_set_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-0.q_set_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-1.p_set_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-1.q_set_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-2.p_set_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-2.q_set_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-3.p_set_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-3.q_set_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-4.p_set_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-4.q_set_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-5.p_set_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-5.q_set_mvar",
                "midas_powergrid.Pysimmods-0.Photovoltaic-6.p_set_mw",
                "midas_powergrid.Pysimmods-0.Photovoltaic-6.q_set_mvar",
                "midas_powergrid.Pysimmods-0.HVAC-0.p_set_mw",
                "midas_powergrid.Pysimmods-0.HVAC-1.p_set_mw",
                "midas_powergrid.Pysimmods-0.CHP-0.p_set_mw",
                "midas_powergrid.Pysimmods-0.CHP-1.p_set_mw",
                "midas_powergrid.Pysimmods-0.CHP-2.p_set_mw",
                "midas_powergrid.Pysimmods-0.Battery-0.p_set_mw",
            ]
        }
        unassigned = sc._unassigned_sensors_actuators()
        self.assertTrue(unassigned)

    async def test_request_environment_updates(self):
        sc = SimulationController(
            termination_conditions=[],
            environment_conductor_ids=[],
            agent_conductor_ids=["ac1", "ac2", "ac3"],
            agents={
                "ac1": {  # All sensors/actuators: Ok.
                    "sensors": [
                        "myenv.0",
                        "myenv.1",
                        "myenv.2",
                        "myenv.3",
                        "myenv.4",
                    ],
                    "actuators": [
                        "myenv.0",
                        "myenv.1",
                        "myenv.2",
                        "myenv.3",
                        "myenv.4",
                        "myenv2.0",
                        "myenv2.1",
                        "myenv2.2",
                    ],
                },
                "ac2": {
                    "sensors": [
                        "myenv.0",  # Ok
                        "1sensor_without_envid",  # No env ID
                        "myenv.snesor_with_typo",  # Typo in sensor
                    ],
                    "actuators": [
                        "myemv.4",  # Typo in env
                        "myenv.6",  # Does not exist.
                    ],
                },
                "ac3": {  # Only a subset of available sensors/actuators, ok.
                    "sensors": ["myenv.0", "myenv.4"],
                    "actuators": ["myenv.0", "myenv.1", "myenv.4"],
                },
            },
            mode=Mode.TEST,  # Pun intended.
        )
        sc._experiment_run_id = "asdf"
        sc._experiment_run_instance_id = "You Only Live Twice"
        sc._active_environments = {"EC-0.myenv-1234", "EC-1.myenv2-4567"}

        reqs = sc._request_environment_updates(
            [MagicMock(uid="myenv.0"), MagicMock(uid="myenv2.2")]
        )
        self.assertEqual(len(reqs), 2)
        e1 = next(r for r in reqs if r.receiver == "EC-0.myenv-1234")
        self.assertEqual(e1.actuators[0].uid, "myenv.0")
        e2 = next(r for r in reqs if r.receiver == "EC-1.myenv2-4567")
        self.assertEqual(e2.actuators[0].uid, "myenv2.2")

        reqs = sc._request_environment_updates(
            [MagicMock(uid="m.moep"), MagicMock(uid="m.moepmoep")]
        )
        self.assertEqual(len(reqs), 2)
        self.assertEqual(len(reqs[0].actuators), 0)
        self.assertEqual(len(reqs[1].actuators), 0)

    @patch(
        "palaestrai.core.event_state_machine.MajorDomoWorker",
        return_value=AsyncMock(
            transceive=AsyncMock(
                side_effect=[
                    SimulationStartRequest(
                        sender_run_governor_id="rg_id",
                        receiver_simulation_controller_id="sc_id",
                        experiment_run_id="er_id",
                        experiment_run_instance_id="er_i_id",
                        experiment_run_phase_id="er_p_id",
                        experiment_run_phase=47,
                        experiment_run_phase_configuration={},
                    ),
                    # SimulationStopRequest(sender="rg_id", receiver="sc_id"),
                ]
            )
        ),
    )
    @patch(
        "palaestrai.core.event_state_machine.MajorDomoClient",
        return_value=AsyncMock(
            send=AsyncMock(
                side_effect=[
                    EnvironmentSetupResponse(
                        sender_environment_conductor="ec1_id",
                        receiver_simulation_controller="sc_id",
                        environment_id="env1_id",
                        environment_name="The Env",
                        experiment_run_id="er_id",
                        experiment_run_instance_id="er_i_id",
                        experiment_run_phase=47,
                        environment_type="myenv1",
                        environment_parameters={},
                    ),
                    EnvironmentSetupResponse(
                        sender_environment_conductor="ec2_id",
                        receiver_simulation_controller="sc_id",
                        environment_id="env2_id",
                        environment_name="The Env",
                        experiment_run_id="er_id",
                        experiment_run_instance_id="er_i_id",
                        experiment_run_phase=47,
                        environment_type="myenv2",
                        environment_parameters={},
                    ),
                    EnvironmentStartResponse(
                        sender_environment="env1_id",
                        receiver_simulation_controller="sc_id",
                        experiment_run_id="er_id",
                        experiment_run_instance_id="er_i_id",
                        experiment_run_phase=47,
                        sensors=[
                            SensorInformation(
                                0, Discrete(1), f"myenv1.DiscSens-{i}"
                            )
                            for i in range(5)
                        ],
                        actuators=[
                            ActuatorInformation(
                                0, Discrete(1), f"myenv1.DiscAct-{i}"
                            )
                            for i in range(5)
                        ],
                    ),
                    EnvironmentStartResponse(
                        sender_environment="env2_id",
                        receiver_simulation_controller="sc_id",
                        experiment_run_id="er_id",
                        experiment_run_instance_id="er_i_id",
                        experiment_run_phase=47,
                        sensors=[
                            SensorInformation(
                                np.array([0.0], dtype=np.float32),
                                Box(low=[-float(i)], high=[float(i)]),
                                f"myenv2.BoxSens-{i}",
                            )
                            for i in range(5)
                        ],
                        actuators=[
                            ActuatorInformation(
                                np.array([0.0], dtype=np.float32),
                                Box(
                                    low=np.array([-float(i + 1.0)]),
                                    high=np.array([float(i + 1.0)]),
                                ),
                                f"myenv2.BoxAct-{i}",
                            )
                            for i in range(5)
                        ],
                    ),
                    AgentSetupResponse(
                        sender_agent_conductor="ac1_id",
                        receiver_simulation_controller="sc_id",
                        experiment_run_id="er_id",
                        experiment_run_instance_id="er_i_id",
                        experiment_run_phase=47,
                        rollout_worker_id="ag1_id",
                        muscle_name="Agent 1",
                    ),
                    AgentSetupResponse(
                        sender_agent_conductor="ac2_id",
                        receiver_simulation_controller="sc_id",
                        experiment_run_id="er_id",
                        experiment_run_instance_id="er_i_id",
                        experiment_run_phase=47,
                        rollout_worker_id="ag2_id",
                        muscle_name="Muscle 2",
                    ),
                ]
            )
        ),
    )
    async def test_simulation_start_request(self, mock_client, mock_worker):
        sc = SimulationController(
            termination_conditions=[],
            environment_conductor_ids=["ec1_id", "ec2_id"],
            agent_conductor_ids=["ac1_id", "ac2_id"],
            agents={
                "ac1_id": {  # All sensors/actuators: Ok.
                    "name": "ag1_id",
                    "brain": {"name": "ag1_Brain", "params": {}},
                    "muscle": {"name": "ag1_id", "params": {}},
                    "sensors": [f"myenv1.DiscSens-{i}" for i in range(5)],
                    "actuators": [f"myenv1.DiscAct-{i}" for i in range(5)],
                },
                "ac2_id": {
                    "name": "ag2_id",
                    "brain": {"name": "ag2_Brain", "params": {}},
                    "muscle": {"name": "ag2_id", "params": {}},
                    "sensors": [f"myenv2.BoxSens-{i}" for i in range(5)],
                    "actuators": [f"myenv2.BoxAct-{i}" for i in range(5)],
                },
            },
            mode=Mode.TEST,  # Pun intended.
        )
        sc.simulate = AsyncMock(
            side_effect=sc.stop
        )  # Don't simulate, just set up.
        await sc.run()
        # only take the mock_calls of first client as they all are the same client
        setup_client_calls = next(iter(sc.__esm__._mdp_clients.values()))[
            0
        ].mock_calls
        self.assertEqual(
            len(sc._environment_conductor_ids) * 2
            + len(sc._agent_conductor_ids),
            len(setup_client_calls),
        )
        self.assertEqual(
            [
                EnvironmentSetupRequest,
                EnvironmentSetupRequest,
                EnvironmentStartRequest,
                EnvironmentStartRequest,
                AgentSetupRequest,
                AgentSetupRequest,
            ],
            [x.args[1].__class__ for x in setup_client_calls],
        )
        self.assertIsInstance(
            sc.__esm__._mdp_worker.transceive.mock_calls[1].args[0],
            SimulationStartResponse,
        )
        sc.simulate.assert_called()
