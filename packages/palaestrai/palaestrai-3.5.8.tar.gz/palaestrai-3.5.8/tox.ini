[tox]
envlist = {py310}
skip_missing_interpreters=True

[cfg-black]
deps =
    black ~= 24.10.0
commands =
    black --check -l 79 ./src/palaestrai ./tests

[cfg-mypy]
deps =
    mypy
    lxml
    types-click
    types-setuptools
    types-mock
    types-simplejson
allowlist_externals=
    mkdir
commands =
    python3 -m pip install .[dev]
    python3 -m pip install .[influx]
    mkdir -p {toxinidir}/test_reports/mypy/
    mypy --disable-error-code "annotation-unchecked" --junit-xml {toxinidir}/test_reports/mypy/mypy.xml {toxinidir}/src {toxinidir}/tests

[cfg-unit-test]
deps =
    coverage
    pytest
    pytest-cov
    black
    robotframework
    types-click
    types-setuptools
    types-mock
    alchemy-mock
allowlist_externals =
    mkdir
commands =
    python3 -m pip install .[dev]
    mkdir -p {toxinidir}/test_reports/
    pytest --cov={toxinidir}/src {toxinidir}/tests/unit --junitxml={toxinidir}/test_reports/report.xml
    coverage xml -o {toxinidir}/test_reports/coverage.xml

[cfg-docs]
deps =
    furo
    sphinx ~= 7.4.7
    jupyter
    nbsphinx
    numpydoc
    matplotlib
    sphinx-autoapi
    eralchemy2
    .[full-dev]
commands =
    sphinx-build -v -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
allowlist_externals =
    sphinx-build

[cfg-system]
deps =
    robotframework-pabot
allowlist_externals =
    {toxinidir}/tests/fixtures/run_pabot.sh
commands =
    {toxinidir}/tests/fixtures/run_pabot.sh {toxinidir}/test_reports/{envname} {toxinidir}/tests system {envbindir}
passenv = POSTGRES_*

[cfg-integration-src]
deps =
    robotframework
    {[cfg-docs]deps}
    .[influx]
allowlist_externals =
    {toxinidir}/tests/fixtures/run_robot.sh
commands =
    {toxinidir}/tests/fixtures/run_robot.sh {toxinidir}/test_reports/{envname} {toxinidir}/tests/integration integration-src
passenv = POSTGRES_*

[cfg-integration-pypi]
deps =
    robotframework
    furo
    sphinx
    jupyter
    nbsphinx
    numpydoc
    matplotlib
    sphinx-autoapi
    eralchemy2
    .[dev]
    .[full]
    .[influx]
allowlist_externals =
    {toxinidir}/tests/fixtures/run_robot.sh
commands =
    {toxinidir}/tests/fixtures/run_robot.sh {toxinidir}/test_reports/{envname} {toxinidir}/tests/integration integration-pypi
passenv = POSTGRES_*

[testenv]
deps =
    {[cfg-black]deps}
    {[cfg-mypy]deps}
    {[cfg-docs]deps}
    {[cfg-unit-test]deps}
    {[cfg-system]deps}
    {[cfg-integration]deps}
allowlist_externals=
    {[cfg-unit-test]allowlist_externals}
commands =
    {[cfg-black]commands}
    {[cfg-mypy]commands}
    {[cfg-docs]commands}
    {[cfg-unit-test]commands}
    {[cfg-system]commands}
    {[cfg-integration]commands}
passenv = {[cfg-system]passenv}

[testenv:black]
deps = {[cfg-black]deps}
commands = {[cfg-black]commands}

[testenv:mypy]
deps = {[cfg-mypy]deps}
allowlist_externals= {[cfg-mypy]allowlist_externals}
commands = {[cfg-mypy]commands}

[testenv:unit-test]
deps =
    {[cfg-unit-test]deps}
allowlist_externals=
    {[cfg-unit-test]allowlist_externals}
commands =
    {[cfg-unit-test]commands}

[testenv:system]
deps =
    {[cfg-system]deps}
    {[cfg-docs]deps}
commands =
    {[cfg-system]commands}
allowlist_externals =
    {[cfg-system]allowlist_externals}
passenv = {[cfg-system]passenv}

[testenv:integration-pypi]
deps =
    {[cfg-integration-pypi]deps}
commands =
    {[cfg-integration-pypi]commands}
allowlist_externals =
    {[cfg-integration-pypi]allowlist_externals}
passenv =
    {[cfg-integration-pypi]passenv}

[testenv:integration-src]
deps =
    {[cfg-integration-src]deps}
commands =
    {[cfg-integration-src]commands}
allowlist_externals =
    {[cfg-integration-src]allowlist_externals}
passenv =
    {[cfg-integration-src]passenv}

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps = {[cfg-docs]deps}
commands = {[cfg-docs]commands}
allowlist_externals = {[cfg-docs]allowlist_externals}

[testenv:unit-docker]
skip_install=true
deps = docker-compose
commands =
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile unit build --no-cache
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile unit up --exit-code-from palaestrai_unit_test

[testenv:system-docker]
skip_install=true
deps = docker-compose
commands =
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile system build --no-cache
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile system up --exit-code-from palaestrai_system_test

[testenv:full-docker]
skip_install=true
deps = docker-compose
commands =
    docker-compose rm -f
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile full build
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile full up --abort-on-container-exit palaestrai_full_test
