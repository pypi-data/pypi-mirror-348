// AUTOGENERATED FILE - DO NOT EDIT

var pt = window.PropTypes;
var pk = window['dash_leaflet'];

pk.AttributionControl.propTypes = {prefix:pt.oneOfType([pt.string]),
 position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.BaseLayer.propTypes = {name:pt.bool,
 checked:pt.bool,
 children:pt.node,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.Circle.propTypes = {children:pt.node,
 radius:pt.number,
 stroke:pt.bool,
 color:pt.string,
 weight:pt.number,
 opacity:pt.number,
 lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),
 lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),
 dashArray:pt.string,
 dashOffset:pt.string,
 fill:pt.bool,
 fillColor:pt.string,
 fillOpacity:pt.number,
 fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 center:pt.any,
 pathOptions:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.CircleMarker.propTypes = {children:pt.node,
 radius:pt.number,
 stroke:pt.bool,
 color:pt.string,
 weight:pt.number,
 opacity:pt.number,
 lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),
 lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),
 dashArray:pt.string,
 dashOffset:pt.string,
 fill:pt.bool,
 fillColor:pt.string,
 fillOpacity:pt.number,
 fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 center:pt.any,
 pathOptions:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.Colorbar.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 opacity:pt.number,
 className:pt.string,
 colorscale:pt.oneOfType([pt.string,pt.arrayOf(pt.string)]),
 width:pt.number,
 height:pt.number,
 min:pt.number,
 max:pt.number,
 classes:pt.oneOfType([pt.number,pt.arrayOf(pt.number)]),
 unit:pt.string,
 nTicks:pt.number,
 tickDecimals:pt.number,
 tickValues:pt.arrayOf(pt.number),
 tickText:pt.arrayOf(pt.number),
 tooltip:pt.bool,
 style:pt.any,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.DivMarker.propTypes = {position:pt.any,
 children:pt.node,
 opacity:pt.number,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 keyboard:pt.bool,
 title:pt.string,
 alt:pt.string,
 zIndexOffset:pt.number,
 riseOnHover:pt.bool,
 riseOffset:pt.number,
 shadowPane:pt.string,
 autoPanOnFocus:pt.bool,
 draggable:pt.bool,
 autoPan:pt.bool,
 autoPanPadding:pt.arrayOf(pt.number),
 autoPanSpeed:pt.number,
 iconOptions:pt.shape({iconSize:pt.number,iconAnchor:pt.number,popupAnchor:pt.number,className:pt.string,html:pt.string}),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.EasyButton.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 title:pt.string,
 icon:pt.string,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.EditControl.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 draw:pt.object,
 edit:pt.object,
 action:pt.shape({layer_type:pt.string,type:pt.string,n_actions:pt.number}),
 drawToolbar:pt.shape({mode:pt.oneOf(["'marker'", "'polygon'", "'polyline'", "'rectangle'", "'circle'", "'circlemarker'"]),action:pt.oneOf(["'cancel'", "'finish'", "'delete last point'"]),n_clicks:pt.number}),
 editToolbar:pt.shape({mode:pt.oneOf(["'edit'", "'remove'"]),action:pt.oneOf(["'cancel'", "'save'", "'clear all'"]),n_clicks:pt.number}),
 geojson:pt.shape({features:pt.arrayOf(pt.object)}),
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.FeatureGroup.propTypes = {children:pt.node,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.FullScreenControl.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 title:pt.string,
 content:pt.string,
 titleCancel:pt.string,
 forceSeparateButton:pt.bool,
 forcePseudoFullscreen:pt.bool,
 fullscreenElement:pt.any,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.GeoJSON.propTypes = {children:pt.node,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 style:pt.any,
 pointToLayer:pt.oneOfType([pt.string,pt.object]),
 onEachFeature:pt.oneOfType([pt.string,pt.object]),
 filter:pt.oneOfType([pt.string,pt.object]),
 coordsToLatLng:pt.oneOfType([pt.string,pt.object]),
 markersInheritOptions:pt.bool,
 data:pt.object,
 url:pt.string,
 zoomToBoundsOnClick:pt.bool,
 zoomToBounds:pt.bool,
 hoverStyle:pt.oneOfType([pt.string,pt.object]),
 hideout:pt.oneOfType([pt.string,pt.object]),
 format:pt.oneOf(["'geojson'", "'geobuf'", "'flatgeobuf'"]),
 formatOptions:pt.shape({rect:pt.shape({minX:pt.number,minY:pt.number,maxX:pt.number,maxY:pt.number})}),
 cluster:pt.bool,
 clusterToLayer:pt.oneOfType([pt.string,pt.object]),
 spiderfyOnMaxZoom:pt.bool,
 superClusterOptions:pt.object,
 options:pt.object,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.GestureHandling.propTypes = {id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.ImageOverlay.propTypes = {children:pt.node,
 opacity:pt.number,
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 alt:pt.string,
 url:pt.string,
 crossOrigin:pt.oneOfType([pt.oneOf(["anonymous"]),pt.oneOf(["use-credentials"])]),
 errorOverlayUrl:pt.string,
 zIndex:pt.number,
 bounds:pt.any,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_loads:pt.number};
pk.LayerGroup.propTypes = {children:pt.node,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.LayersControl.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 children:pt.node,
 collapsed:pt.bool,
 autoZIndex:pt.bool,
 hideSingleBase:pt.bool,
 sortLayers:pt.bool,
 baseLayer:pt.string,
 overlays:pt.arrayOf(pt.string),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.LocateControl.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 icon:pt.string,
 setView:pt.oneOfType([pt.oneOf(["once"]),pt.oneOf(["always"]),pt.oneOf(["untilPan"]),pt.oneOf(["untilPanOrZoom"])]),
 flyTo:pt.bool,
 keepCurrentZoomLevel:pt.bool,
 initialZoomLevel:pt.oneOfType([pt.number]),
 clickBehavior:pt.object,
 returnToPrevBounds:pt.bool,
 cacheLocation:pt.bool,
 showCompass:pt.bool,
 drawCircle:pt.bool,
 drawMarker:pt.bool,
 circleStyle:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 markerStyle:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 compassStyle:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 followCircleStyle:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 followMarkerStyle:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 followCompassStyle:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 iconLoading:pt.string,
 iconElementTag:pt.string,
 circlePadding:pt.arrayOf(pt.number),
 metric:pt.bool,
 showPopup:pt.bool,
 strings:pt.shape({title:pt.string,metersUnit:pt.string,feetUnit:pt.string,popup:pt.string,outsideMapBoundsMsg:pt.string}),
 locateOptions:pt.shape({watch:pt.bool,setView:pt.bool,maxZoom:pt.number,timeout:pt.number,maximumAge:pt.number,enableHighAccuracy:pt.bool}),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.MapContainer.propTypes = {children:pt.node,
 className:pt.string,
 center:pt.shape({equals:pt.any,toString:pt.any,distanceTo:pt.any,wrap:pt.any,toBounds:pt.any,clone:pt.any,lat:pt.number,lng:pt.number,alt:pt.number}),
 eventHandlers:pt.shape({baselayerchange:pt.shape({}),overlayadd:pt.shape({}),overlayremove:pt.shape({}),layeradd:pt.shape({}),layerremove:pt.shape({}),zoomlevelschange:pt.shape({}),unload:pt.shape({}),viewreset:pt.shape({}),load:pt.shape({}),zoomstart:pt.shape({}),movestart:pt.shape({}),zoom:pt.shape({}),move:pt.shape({}),zoomend:pt.shape({}),moveend:pt.shape({}),autopanstart:pt.shape({}),dragstart:pt.shape({}),drag:pt.shape({}),add:pt.shape({}),remove:pt.shape({}),loading:pt.shape({}),error:pt.shape({}),update:pt.shape({}),down:pt.shape({}),predrag:pt.shape({}),resize:pt.shape({}),popupopen:pt.shape({}),popupclose:pt.shape({}),tooltipopen:pt.shape({}),tooltipclose:pt.shape({}),locationerror:pt.shape({}),locationfound:pt.shape({}),click:pt.shape({}),dblclick:pt.shape({}),mousedown:pt.shape({}),mouseup:pt.shape({}),mouseover:pt.shape({}),mouseout:pt.shape({}),mousemove:pt.shape({}),contextmenu:pt.shape({}),preclick:pt.shape({}),keypress:pt.shape({}),keydown:pt.shape({}),keyup:pt.shape({}),zoomanim:pt.shape({}),dragend:pt.shape({}),tileunload:pt.shape({}),tileloadstart:pt.shape({}),tileload:pt.shape({}),tileabort:pt.shape({}),tileerror:pt.shape({})}),
 style:pt.any,
 keyboard:pt.bool,
 bounds:pt.oneOfType([pt.shape({extend:pt.any,pad:pt.any,getCenter:pt.any,getSouthWest:pt.any,getNorthEast:pt.any,getNorthWest:pt.any,getSouthEast:pt.any,getWest:pt.any,getSouth:pt.any,getEast:pt.any,getNorth:pt.any,contains:pt.any,intersects:pt.any,overlaps:pt.any,toBBoxString:pt.any,equals:pt.any,isValid:pt.any})]),
 preferCanvas:pt.bool,
 attributionControl:pt.bool,
 zoomControl:pt.bool,
 closePopupOnClick:pt.bool,
 boxZoom:pt.bool,
 doubleClickZoom:pt.oneOfType([pt.oneOf(["center"])]),
 dragging:pt.bool,
 zoomSnap:pt.number,
 zoomDelta:pt.number,
 trackResize:pt.bool,
 inertia:pt.bool,
 inertiaDeceleration:pt.number,
 inertiaMaxSpeed:pt.number,
 easeLinearity:pt.number,
 worldCopyJump:pt.bool,
 maxBoundsViscosity:pt.number,
 keyboardPanDelta:pt.number,
 scrollWheelZoom:pt.oneOfType([pt.oneOf(["center"])]),
 wheelDebounceTime:pt.number,
 wheelPxPerZoomLevel:pt.number,
 tapHold:pt.bool,
 tapTolerance:pt.number,
 touchZoom:pt.oneOfType([pt.oneOf(["center"])]),
 bounceAtZoomLimits:pt.bool,
 zoom:pt.number,
 minZoom:pt.number,
 maxZoom:pt.number,
 maxBounds:pt.shape({extend:pt.any,pad:pt.any,getCenter:pt.any,getSouthWest:pt.any,getNorthEast:pt.any,getNorthWest:pt.any,getSouthEast:pt.any,getWest:pt.any,getSouth:pt.any,getEast:pt.any,getNorth:pt.any,contains:pt.any,intersects:pt.any,overlaps:pt.any,toBBoxString:pt.any,equals:pt.any,isValid:pt.any}),
 zoomAnimation:pt.bool,
 zoomAnimationThreshold:pt.number,
 fadeAnimation:pt.bool,
 markerZoomAnimation:pt.bool,
 transform3DLimit:pt.number,
 boundsOptions:pt.shape({paddingTopLeft:pt.any,paddingBottomRight:pt.any,padding:pt.any,maxZoom:pt.number,animate:pt.bool,duration:pt.number,easeLinearity:pt.number,noMoveStart:pt.bool}),
 placeholder:pt.node,
 crs:pt.string,
 renderer:pt.shape({method:pt.oneOf(["'svg'", "'canvas'"]),options:pt.object}),
 invalidateSize:pt.oneOfType([pt.string,pt.number,pt.object]),
 viewport:pt.shape({center:pt.arrayOf(pt.number),zoom:pt.number,transition:pt.oneOf(["'setView'", "'flyTo'", "'panTo'", "'fitBounds'", "'flyToBounds'", "'panInsideBounds'"]),bounds:pt.arrayOf(pt.arrayOf(pt.number)),options:pt.shape({animate:pt.bool,duration:pt.number,easeLinearity:pt.number,noMoveStart:pt.bool,paddingTopLeft:pt.arrayOf(pt.number),paddingBottomRight:pt.arrayOf(pt.number),padding:pt.arrayOf(pt.number)})}),
 trackViewport:pt.bool,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_loads:pt.number,
 n_keydowns:pt.number,
 keydownData:pt.shape({key:pt.string,ctrlKey:pt.bool,metaKey:pt.bool,shiftKey:pt.bool,repeat:pt.bool})};
pk.Marker.propTypes = {position:pt.oneOfType([pt.shape({equals:pt.any,toString:pt.any,distanceTo:pt.any,wrap:pt.any,toBounds:pt.any,clone:pt.any,lat:pt.number,lng:pt.number,alt:pt.number})]),
 children:pt.node,
 opacity:pt.number,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 keyboard:pt.bool,
 title:pt.string,
 alt:pt.string,
 zIndexOffset:pt.number,
 riseOnHover:pt.bool,
 riseOffset:pt.number,
 shadowPane:pt.string,
 autoPanOnFocus:pt.bool,
 draggable:pt.bool,
 autoPan:pt.bool,
 autoPanPadding:pt.arrayOf(pt.number),
 autoPanSpeed:pt.number,
 icon:pt.shape({iconUrl:pt.string,crossOrigin:pt.oneOfType([pt.oneOf(["anonymous"]),pt.oneOf(["use-credentials"])]),iconRetinaUrl:pt.string,iconSize:pt.any,iconAnchor:pt.any,popupAnchor:pt.any,tooltipAnchor:pt.any,shadowUrl:pt.string,shadowRetinaUrl:pt.string,shadowSize:pt.any,shadowAnchor:pt.any,className:pt.string,pane:pt.string,attribution:pt.string}),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.MeasureControl.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 primaryLengthUnit:pt.string,
 secondaryLengthUnit:pt.string,
 primaryAreaUnit:pt.string,
 secondaryAreaUnit:pt.string,
 activeColor:pt.string,
 completedColor:pt.string,
 popupOptions:pt.shape({maxWidth:pt.number,minWidth:pt.number,maxHeight:pt.number,keepInView:pt.bool,closeButton:pt.bool,autoPan:pt.bool,autoPanPaddingTopLeft:pt.any,autoPanPaddingBottomRight:pt.any,autoPanPadding:pt.any,autoClose:pt.bool,closeOnClick:pt.bool,closeOnEscapeKey:pt.bool,offset:pt.any,className:pt.string,pane:pt.string,interactive:pt.bool,content:pt.oneOfType([pt.string,pt.any,pt.any])}),
 units:pt.shape({string:pt.shape({factor:pt.number,display:pt.string,decimals:pt.number})}),
 captureZIndex:pt.number,
 decPoint:pt.string,
 thousandsSep:pt.string,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.Overlay.propTypes = {name:pt.bool,
 checked:pt.bool,
 children:pt.node,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.Pane.propTypes = {name:pt.string,
 children:pt.node,
 className:pt.string,
 pane:pt.string,
 style:pt.any,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.Polygon.propTypes = {children:pt.node,
 stroke:pt.bool,
 color:pt.string,
 weight:pt.number,
 opacity:pt.number,
 lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),
 lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),
 dashArray:pt.string,
 dashOffset:pt.string,
 fill:pt.bool,
 fillColor:pt.string,
 fillOpacity:pt.number,
 fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 pathOptions:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 smoothFactor:pt.number,
 noClip:pt.bool,
 positions:pt.any,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.Polyline.propTypes = {children:pt.node,
 stroke:pt.bool,
 color:pt.string,
 weight:pt.number,
 opacity:pt.number,
 lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),
 lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),
 dashArray:pt.string,
 dashOffset:pt.string,
 fill:pt.bool,
 fillColor:pt.string,
 fillOpacity:pt.number,
 fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 pathOptions:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 smoothFactor:pt.number,
 noClip:pt.bool,
 positions:pt.any,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.PolylineDecorator.propTypes = {children:pt.node,
 positions:pt.oneOfType([pt.arrayOf(pt.arrayOf(pt.number)),pt.arrayOf(pt.arrayOf(pt.arrayOf(pt.number)))]),
 patterns:pt.arrayOf(pt.shape({offset:pt.string,endOffset:pt.string,repeat:pt.string,dash:pt.shape({pixelSize:pt.number,pathOptions:pt.object}),arrowHead:pt.shape({polygon:pt.bool,pixelSize:pt.number,headAngle:pt.number,pathOptions:pt.object}),marker:pt.shape({markerOptions:pt.object,rotate:pt.bool})})),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.Popup.propTypes = {position:pt.oneOfType([pt.shape({equals:pt.any,toString:pt.any,distanceTo:pt.any,wrap:pt.any,toBounds:pt.any,clone:pt.any,lat:pt.number,lng:pt.number,alt:pt.number})]),
 children:pt.node,
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 autoPan:pt.bool,
 autoPanPadding:pt.shape({clone:pt.any,add:pt.any,subtract:pt.any,divideBy:pt.any,multiplyBy:pt.any,scaleBy:pt.any,unscaleBy:pt.any,round:pt.any,floor:pt.any,ceil:pt.any,trunc:pt.any,distanceTo:pt.any,equals:pt.any,contains:pt.any,toString:pt.any,x:pt.number,y:pt.number}),
 content:pt.oneOfType([pt.string]),
 offset:pt.shape({clone:pt.any,add:pt.any,subtract:pt.any,divideBy:pt.any,multiplyBy:pt.any,scaleBy:pt.any,unscaleBy:pt.any,round:pt.any,floor:pt.any,ceil:pt.any,trunc:pt.any,distanceTo:pt.any,equals:pt.any,contains:pt.any,toString:pt.any,x:pt.number,y:pt.number}),
 maxWidth:pt.number,
 minWidth:pt.number,
 maxHeight:pt.number,
 autoPanPaddingTopLeft:pt.shape({clone:pt.any,add:pt.any,subtract:pt.any,divideBy:pt.any,multiplyBy:pt.any,scaleBy:pt.any,unscaleBy:pt.any,round:pt.any,floor:pt.any,ceil:pt.any,trunc:pt.any,distanceTo:pt.any,equals:pt.any,contains:pt.any,toString:pt.any,x:pt.number,y:pt.number}),
 autoPanPaddingBottomRight:pt.shape({clone:pt.any,add:pt.any,subtract:pt.any,divideBy:pt.any,multiplyBy:pt.any,scaleBy:pt.any,unscaleBy:pt.any,round:pt.any,floor:pt.any,ceil:pt.any,trunc:pt.any,distanceTo:pt.any,equals:pt.any,contains:pt.any,toString:pt.any,x:pt.number,y:pt.number}),
 keepInView:pt.bool,
 closeButton:pt.bool,
 autoClose:pt.bool,
 closeOnEscapeKey:pt.bool,
 closeOnClick:pt.bool,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.Rectangle.propTypes = {children:pt.node,
 stroke:pt.bool,
 color:pt.string,
 weight:pt.number,
 opacity:pt.number,
 lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),
 lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),
 dashArray:pt.string,
 dashOffset:pt.string,
 fill:pt.bool,
 fillColor:pt.string,
 fillOpacity:pt.number,
 fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 pathOptions:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 bounds:pt.oneOfType([pt.shape({extend:pt.any,pad:pt.any,getCenter:pt.any,getSouthWest:pt.any,getNorthEast:pt.any,getNorthWest:pt.any,getSouthEast:pt.any,getWest:pt.any,getSouth:pt.any,getEast:pt.any,getNorth:pt.any,contains:pt.any,intersects:pt.any,overlaps:pt.any,toBBoxString:pt.any,equals:pt.any,isValid:pt.any})]),
 smoothFactor:pt.number,
 noClip:pt.bool,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.SVGOverlay.propTypes = {children:pt.node,
 opacity:pt.number,
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 pathOptions:pt.shape({stroke:pt.bool,color:pt.string,weight:pt.number,opacity:pt.number,lineCap:pt.oneOf(["'butt'", "'round'", "'square'", "'inherit'"]),lineJoin:pt.oneOf(["'round'", "'inherit'", "'miter'", "'bevel'"]),dashArray:pt.string,dashOffset:pt.string,fill:pt.bool,fillColor:pt.string,fillOpacity:pt.number,fillRule:pt.oneOf(["'inherit'", "'nonzero'", "'evenodd'"]),className:pt.string,interactive:pt.bool,bubblingMouseEvents:pt.bool,attribution:pt.string,pane:pt.string}),
 alt:pt.string,
 crossOrigin:pt.oneOfType([pt.oneOf(["anonymous"]),pt.oneOf(["use-credentials"])]),
 errorOverlayUrl:pt.string,
 zIndex:pt.number,
 bounds:pt.oneOfType([pt.shape({extend:pt.any,pad:pt.any,getCenter:pt.any,getSouthWest:pt.any,getNorthEast:pt.any,getNorthWest:pt.any,getSouthEast:pt.any,getWest:pt.any,getSouth:pt.any,getEast:pt.any,getNorth:pt.any,contains:pt.any,intersects:pt.any,overlaps:pt.any,toBBoxString:pt.any,equals:pt.any,isValid:pt.any})]),
 attributes:pt.objectOf(pt.string),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.ScaleControl.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 metric:pt.bool,
 maxWidth:pt.number,
 imperial:pt.bool,
 updateWhenIdle:pt.bool,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
pk.TileLayer.propTypes = {opacity:pt.number,
 className:pt.string,
 attribution:pt.string,
 pane:pt.string,
 crossOrigin:pt.oneOfType([pt.oneOf(["anonymous"]),pt.oneOf(["use-credentials"])]),
 zIndex:pt.number,
 bounds:pt.shape({extend:pt.any,pad:pt.any,getCenter:pt.any,getSouthWest:pt.any,getNorthEast:pt.any,getNorthWest:pt.any,getSouthEast:pt.any,getWest:pt.any,getSouth:pt.any,getEast:pt.any,getNorth:pt.any,contains:pt.any,intersects:pt.any,overlaps:pt.any,toBBoxString:pt.any,equals:pt.any,isValid:pt.any}),
 minZoom:pt.number,
 maxZoom:pt.number,
 updateWhenIdle:pt.bool,
 subdomains:pt.oneOfType([pt.string,pt.arrayOf(pt.string)]),
 errorTileUrl:pt.string,
 zoomOffset:pt.number,
 tms:pt.bool,
 zoomReverse:pt.bool,
 detectRetina:pt.bool,
 referrerPolicy:pt.oneOfType([pt.oneOf(["no-referrer"]),pt.oneOf(["no-referrer-when-downgrade"]),pt.oneOf(["origin"]),pt.oneOf(["origin-when-cross-origin"]),pt.oneOf(["same-origin"]),pt.oneOf(["strict-origin"]),pt.oneOf(["strict-origin-when-cross-origin"]),pt.oneOf(["unsafe-url"])]),
 tileSize:pt.number,
 updateWhenZooming:pt.bool,
 updateInterval:pt.number,
 maxNativeZoom:pt.number,
 minNativeZoom:pt.number,
 noWrap:pt.bool,
 keepBuffer:pt.number,
 url:pt.string,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_loads:pt.number};
pk.Tooltip.propTypes = {position:pt.oneOfType([pt.shape({equals:pt.any,toString:pt.any,distanceTo:pt.any,wrap:pt.any,toBounds:pt.any,clone:pt.any,lat:pt.number,lng:pt.number,alt:pt.number})]),
 children:pt.node,
 opacity:pt.number,
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 content:pt.oneOfType([pt.string]),
 offset:pt.shape({clone:pt.any,add:pt.any,subtract:pt.any,divideBy:pt.any,multiplyBy:pt.any,scaleBy:pt.any,unscaleBy:pt.any,round:pt.any,floor:pt.any,ceil:pt.any,trunc:pt.any,distanceTo:pt.any,equals:pt.any,contains:pt.any,toString:pt.any,x:pt.number,y:pt.number}),
 direction:pt.oneOf(["'center'", "'right'", "'left'", "'top'", "'bottom'", "'auto'"]),
 permanent:pt.bool,
 sticky:pt.bool,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)})};
pk.VideoOverlay.propTypes = {children:pt.node,
 opacity:pt.number,
 className:pt.string,
 interactive:pt.bool,
 bubblingMouseEvents:pt.bool,
 attribution:pt.string,
 pane:pt.string,
 alt:pt.string,
 url:pt.string,
 crossOrigin:pt.oneOfType([pt.oneOf(["anonymous"]),pt.oneOf(["use-credentials"])]),
 errorOverlayUrl:pt.string,
 zIndex:pt.number,
 bounds:pt.oneOfType([pt.shape({extend:pt.any,pad:pt.any,getCenter:pt.any,getSouthWest:pt.any,getNorthEast:pt.any,getNorthWest:pt.any,getSouthEast:pt.any,getWest:pt.any,getSouth:pt.any,getEast:pt.any,getNorth:pt.any,contains:pt.any,intersects:pt.any,overlaps:pt.any,toBBoxString:pt.any,equals:pt.any,isValid:pt.any})]),
 autoplay:pt.bool,
 loop:pt.bool,
 keepAspectRatio:pt.bool,
 muted:pt.bool,
 playsInline:pt.bool,
 play:pt.bool,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_clicks:pt.number,
 clickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_dblclicks:pt.number,
 dblclickData:pt.shape({latlng:pt.arrayOf(pt.number),layerPoint:pt.arrayOf(pt.number),containerPoint:pt.arrayOf(pt.number)}),
 n_loads:pt.number};
pk.WMSTileLayer.propTypes = {opacity:pt.number,
 className:pt.string,
 attribution:pt.string,
 pane:pt.string,
 url:pt.string,
 format:pt.string,
 crossOrigin:pt.oneOfType([pt.oneOf(["anonymous"]),pt.oneOf(["use-credentials"])]),
 zIndex:pt.number,
 bounds:pt.shape({extend:pt.any,pad:pt.any,getCenter:pt.any,getSouthWest:pt.any,getNorthEast:pt.any,getNorthWest:pt.any,getSouthEast:pt.any,getWest:pt.any,getSouth:pt.any,getEast:pt.any,getNorth:pt.any,contains:pt.any,intersects:pt.any,overlaps:pt.any,toBBoxString:pt.any,equals:pt.any,isValid:pt.any}),
 minZoom:pt.number,
 maxZoom:pt.number,
 updateWhenIdle:pt.bool,
 subdomains:pt.oneOfType([pt.string,pt.arrayOf(pt.string)]),
 errorTileUrl:pt.string,
 zoomOffset:pt.number,
 tms:pt.bool,
 zoomReverse:pt.bool,
 detectRetina:pt.bool,
 referrerPolicy:pt.oneOfType([pt.oneOf(["no-referrer"]),pt.oneOf(["no-referrer-when-downgrade"]),pt.oneOf(["origin"]),pt.oneOf(["origin-when-cross-origin"]),pt.oneOf(["same-origin"]),pt.oneOf(["strict-origin"]),pt.oneOf(["strict-origin-when-cross-origin"]),pt.oneOf(["unsafe-url"])]),
 tileSize:pt.number,
 updateWhenZooming:pt.bool,
 updateInterval:pt.number,
 maxNativeZoom:pt.number,
 minNativeZoom:pt.number,
 noWrap:pt.bool,
 keepBuffer:pt.number,
 layers:pt.string,
 styles:pt.string,
 transparent:pt.bool,
 version:pt.string,
 uppercase:pt.bool,
 params:pt.shape({format:pt.string,layers:pt.string,request:pt.string,service:pt.string,styles:pt.string,version:pt.string,transparent:pt.bool,width:pt.number,height:pt.number}),
 crs:pt.string,
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object,
 eventHandlers:pt.object,
 disableDefaultEventHandlers:pt.bool,
 n_loads:pt.number};
pk.ZoomControl.propTypes = {position:pt.oneOf(["'topleft'", "'topright'", "'bottomleft'", "'bottomright'"]),
 id:pt.string,
 setProps:pt.any,
 loading_state:pt.object};
