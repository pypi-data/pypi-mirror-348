# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: proto3_field_presence.proto
# plugin: python-betterproto
# This file has been @generated

__all__ = (
    "TestEnum",
    "InnerTest",
    "Test",
)


from datetime import datetime
from typing import (
    Optional,
)

from pydantic.dataclasses import dataclass

import betterproto_fw


class TestEnum(betterproto_fw.Enum):
    """ """

    A = 0
    """
    
    """

    B = 1
    """
    
    """

    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        from pydantic_core import core_schema

        return core_schema.int_schema(ge=0)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class InnerTest(betterproto_fw.Message):
    """ """

    test: str = betterproto_fw.string_field(1)
    """
    
    """


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Test(betterproto_fw.Message):
    """ """

    test1: Optional[int] = betterproto_fw.uint32_field(1, optional=True)
    """
    
    """

    test2: Optional[bool] = betterproto_fw.bool_field(2, optional=True)
    """
    
    """

    test3: Optional[str] = betterproto_fw.string_field(3, optional=True)
    """
    
    """

    test4: Optional[bytes] = betterproto_fw.bytes_field(4, optional=True)
    """
    
    """

    test5: Optional["InnerTest"] = betterproto_fw.message_field(5, optional=True)
    """
    
    """

    test6: Optional["TestEnum"] = betterproto_fw.enum_field(6, optional=True)
    """
    
    """

    test7: Optional[int] = betterproto_fw.uint64_field(7, optional=True)
    """
    
    """

    test8: Optional[float] = betterproto_fw.float_field(8, optional=True)
    """
    
    """

    test9: Optional[datetime] = betterproto_fw.message_field(9, optional=True)
    """
    
    """
