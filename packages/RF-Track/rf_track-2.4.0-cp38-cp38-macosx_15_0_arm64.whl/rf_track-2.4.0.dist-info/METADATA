Metadata-Version: 2.1
Name: RF-Track
Version: 2.4.0
Summary: The CERN tracking code RF-Track
Home-page: https://gitlab.cern.ch/rf-track
Author: Andrea Latina
Author-email: Andrea Latina <andrea.latina@cern.ch>
License: Proprietary
Project-URL: Homepage, https://gitlab.cern.ch/rf-track
Project-URL: Documentation, https://gitlab.cern.ch/rf-track/rf-track-reference-manual/-/raw/master/RF_Track_reference_manual.pdf?ref_type=heads
Project-URL: Tracker, https://gitlab.cern.ch/groups/rf-track/-/issues
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: C++
Classifier: License :: Other/Proprietary License
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE.md

RF-Track is a tracking code developed at CERN for the design and optimisation of particle accelerators, offering outstanding flexibility and rapid simulation speed.

RF-Track can simulate beams of particles of any energy, mass and charge, even mixed, solving fully relativistic equations of motion.  It can simulate the effects of space-charge forces in both bunched and continuous-wave beams, synchrotron radiation emission, wakefield and beam-loading effects, multiple Coulomb scattering, inverse Compton scattering, and the list is still growing. It can transport beams through both conventional and special elements: 1D, 2D and 3D static or oscillating radio-frequency electromagnetic field maps (standing wave and traveling wave), flux concentrators and electron coolers. It allows element overlap and direct and indirect space charge calculations using fast parallel algorithms.

RF-Track is written in optimised and parallel C++ and comes with two distinct and independent user interfaces: one in Octave and one in Python. General knowledge of Octave or Python is recommended to get the most out of RF-Track.
