# Generated by Django 3.2 on 2024-03-12 15:28

from django.db import migrations, models
import django.db.models.deletion
import martor.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='AmazonSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.CharField(blank=True, default=None, help_text='\n                                    亚马逊的推广id，用于生成推广链接，可以通过https://affiliate-program.amazon.com/home 注册。\n                                    \n                                    ', max_length=32, null=True, verbose_name='亚马逊联盟推广id')),
                ('ads_sidebar', models.TextField(blank=True, default=None, help_text='\n                                    广告1: 右侧边栏\n                                    \n                                    ', null=True, verbose_name='ads_sidebar')),
                ('ads_content1', models.TextField(blank=True, default=None, help_text='\n                                    广告2: 主要内容之后\n                                    \n                                    ', null=True, verbose_name='ads_content1')),
                ('ads_list1', models.TextField(blank=True, default=None, help_text='\n                                    广告3:  列表广告\n                                    \n                                    ', null=True, verbose_name='ads_list1')),
            ],
            options={
                'verbose_name': 'Amazon Settings',
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('url', models.URLField(blank=True, default='', max_length=255, null=True, verbose_name='URL')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
        ),
        migrations.CreateModel(
            name='PostSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update_limit', models.IntegerField(default=10, verbose_name='最后更新数目')),
                ('related_post_limit', models.IntegerField(default=10, verbose_name='相关推荐数目')),
            ],
            options={
                'verbose_name': 'Post Settings',
            },
        ),
        migrations.CreateModel(
            name='Prompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('prompt_text', models.TextField(verbose_name='提示文本')),
                ('templ', models.TextField(default='\n            {{ post.data | safe }} \n            ---\n            {{ prompt_text }} \n\n        ', help_text='\n模板文件可以使用 Jinja2 语法编写。\n\n以下是一个示例模板：\n\n```\n资料\n\n{{ post.data | safe }} \n---\n提示词\n{{ prompt.prompt_text }}\n```\n\n可以使用以下变量：\n\npost包含Post字段\nprompt包含当前提示词内容\n\n        ', verbose_name='模板文件')),
            ],
        ),
        migrations.CreateModel(
            name='PromptTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PromptTaskPrompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('prompt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tbase_post.prompt')),
                ('prompt_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tbase_post.prompttask')),
            ],
        ),
        migrations.AddField(
            model_name='prompttask',
            name='prompts',
            field=models.ManyToManyField(through='tbase_post.PromptTaskPrompt', to='tbase_post.Prompt'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('content', martor.models.MartorField(verbose_name='内容')),
                ('publish_status', models.CharField(choices=[('published', '发布'), ('draft', '草稿'), ('trash', '垃圾桶')], default='published', max_length=10)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('article_img', models.CharField(blank=True, help_text='\n                           可以将图片上传到https://box.maomihezi.com/\n\n                            不要填写?x-oss-process=style/mini_auto，用于后期自动处理图片\n                           ', max_length=255, verbose_name='图片')),
                ('product_name', models.CharField(blank=True, help_text='\n                           产品名 便于\n                           ', max_length=255, verbose_name='推广产品名字')),
                ('product_id', models.CharField(blank=True, help_text='填写亚马逊的产品id，用于产生产品链接,\n                           比如：https://www.amazon.com/Audio-Wireless-Bluetooth-Earbuds-Charging/dp/B07R7DT3JV/\n                           id则为B07R7DT3JV\n                           \n                           ', max_length=255, verbose_name='推广产品id')),
                ('youtube_id', models.CharField(blank=True, help_text='youtube视频id\n                           \n                           ', max_length=64, verbose_name='Youtube id')),
                ('meta_keywords', models.CharField(blank=True, help_text='\n                            关键词,用于搜索引擎优化使用,关键词使用英文逗号分割\n                           ', max_length=128, verbose_name='meta keywords')),
                ('meta_description', models.CharField(blank=True, help_text='\n                            用于搜索引擎优化使用\n                           ', max_length=255, verbose_name='meta description')),
                ('data', models.TextField(blank=True, default='', verbose_name='背景资料')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='标签')),
            ],
            options={
                'ordering': ['-updated_on'],
            },
        ),
    ]
