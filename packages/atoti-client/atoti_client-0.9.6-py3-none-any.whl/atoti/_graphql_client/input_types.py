# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/schema.gql

from typing import List, Optional

from pydantic import Field

from .._constant import Constant
from .base_model import BaseModel
from .enums import (
    CubeRestrictionIsInConditionOperator,
    CubeRestrictionRelationalConditionOperator,
    DataType,
    FileSystemFileType,
    QuantileInterpolation,
    QuantileMode,
    RelationshipOptionality,
)


class AggregationMeasureDefinition(BaseModel):
    quantile: Optional["QuantileAggregationMeasureDefinition"] = None
    sum: Optional["SumAggregationMeasureDefinition"] = None


class CreateCubeInput(BaseModel):
    application_name: Optional[str] = Field(
        serialization_alias="applicationName", default=None
    )
    auto_create: "CubeAutoCreateInput" = Field(
        serialization_alias="autoCreate",
        default_factory=lambda: globals()["CubeAutoCreateInput"].model_validate(
            {"hierarchies": False, "measures": False}
        ),
    )
    catalog_names: List[str] = Field(serialization_alias="catalogNames")
    cube_name: Optional[str] = Field(serialization_alias="cubeName", default=None)
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    fact_table_name: str = Field(serialization_alias="factTableName")


class CreateCubeRestrictionInput(BaseModel):
    condition: List[List["CubeRestrictionLeafConditionInput"]]
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    role: str


class CreateHierarchyInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    definition: "HierarchyDefinition"
    hierarchy_identifier: "HierarchyIdentifier" = Field(
        serialization_alias="hierarchyIdentifier"
    )


class CreateJoinInput(BaseModel):
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    join_name: str = Field(serialization_alias="joinName")
    mapping_items: Optional[List["JoinMappingItemInput"]] = Field(
        serialization_alias="mappingItems", default=None
    )
    source_table_name: str = Field(serialization_alias="sourceTableName")
    target_optionality: RelationshipOptionality = Field(
        serialization_alias="targetOptionality",
        default=RelationshipOptionality.OPTIONAL,
    )
    target_table_name: str = Field(serialization_alias="targetTableName")


class CreateMeasureInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    definition: "MeasureDefinition"
    measure_name: str = Field(serialization_alias="measureName")


class CreateTableColumnInput(BaseModel):
    column_name: str = Field(serialization_alias="columnName")
    data_type: Optional[DataType] = Field(serialization_alias="dataType", default=None)
    default_value: Optional[Constant] = Field(
        serialization_alias="defaultValue", default=None
    )


class CreateTableInput(BaseModel):
    columns: List["CreateTableColumnInput"] = Field(default_factory=lambda: [])
    data_load: Optional["DataLoadInput"] = Field(
        serialization_alias="dataLoad", default=None
    )
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    is_parameter_table: bool = Field(
        serialization_alias="isParameterTable", default=False
    )
    partitioning: Optional[str] = None
    primary_index: List[str] = Field(
        serialization_alias="primaryIndex", default_factory=lambda: []
    )
    table_name: str = Field(serialization_alias="tableName")


class CubeAutoCreateInput(BaseModel):
    hierarchies: bool = False
    measures: bool = False


class CubeRestrictionIsInConditionInput(BaseModel):
    elements: List[Constant]
    operator: CubeRestrictionIsInConditionOperator
    subject: "LevelIdentifier"


class CubeRestrictionLeafConditionInput(BaseModel):
    is_in: Optional["CubeRestrictionIsInConditionInput"] = Field(
        serialization_alias="isIn", default=None
    )
    relational: Optional["CubeRestrictionRelationalConditionInput"] = None


class CubeRestrictionRelationalConditionInput(BaseModel):
    operator: CubeRestrictionRelationalConditionOperator
    subject: "LevelIdentifier"
    target: Constant


class DataLoadInput(BaseModel):
    data_source: Optional["NamedDataSourceLoadInput"] = Field(
        serialization_alias="dataSource", default=None
    )


class DataSourceLoadInput(BaseModel):
    file_system: Optional["FileSystemDataSourceLoadInput"] = Field(
        serialization_alias="fileSystem", default=None
    )
    jdbc: Optional["JdbcDataSourceLoadInput"] = None


class DeleteCubeRestrictionInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    role: str


class DeleteHierarchyInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    hierarchy_identifier: "HierarchyIdentifier" = Field(
        serialization_alias="hierarchyIdentifier"
    )


class DeleteJoinInput(BaseModel):
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    join_name: str = Field(serialization_alias="joinName")
    source_table_name: str = Field(serialization_alias="sourceTableName")


class DeleteTableInput(BaseModel):
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    table_name: str = Field(serialization_alias="tableName")


class FileSystemDataSourceLoadInput(BaseModel):
    glob: str
    type: FileSystemFileType


class HierarchyDefinition(BaseModel):
    selection: Optional["SelectionHierarchyDefinition"] = None


class HierarchyIdentifier(BaseModel):
    dimension_name: str = Field(serialization_alias="dimensionName")
    hierarchy_name: str = Field(serialization_alias="hierarchyName")


class JdbcDataSourceLoadInput(BaseModel):
    parameters: List["ParameterInput"] = Field(default_factory=lambda: [])
    query: str


class JoinMappingItemInput(BaseModel):
    source_column_name: str = Field(serialization_alias="sourceColumnName")
    target_column_name: str = Field(serialization_alias="targetColumnName")


class LevelIdentifier(BaseModel):
    dimension_name: str = Field(serialization_alias="dimensionName")
    hierarchy_name: str = Field(serialization_alias="hierarchyName")
    level_name: str = Field(serialization_alias="levelName")


class MeasureDefinition(BaseModel):
    aggregation: Optional["ScopedAggregationMeasureDefinition"] = None
    constant: Optional[Constant] = None
    multiplication: Optional["MultiplicationMeasureDefinition"] = None
    selection_field_identifier: Optional["SelectionFieldIdentifier"] = Field(
        serialization_alias="selectionFieldIdentifier", default=None
    )


class MultiplicationMeasureDefinition(BaseModel):
    factors: List["MeasureDefinition"]


class NamedDataSourceLoadInput(BaseModel):
    data_source_load: "DataSourceLoadInput" = Field(
        serialization_alias="dataSourceLoad"
    )
    data_source_name: str = Field(serialization_alias="dataSourceName")


class ParameterInput(BaseModel):
    name: Optional[str] = None
    value: Constant


class QuantileAggregationMeasureDefinition(BaseModel):
    interpolation: QuantileInterpolation
    mode: QuantileMode
    quantile: "MeasureDefinition"
    value: "MeasureDefinition"


class ScopedAggregationMeasureDefinition(BaseModel):
    definition: "AggregationMeasureDefinition"


class SelectionFieldIdentifier(BaseModel):
    column_name: str = Field(serialization_alias="columnName")
    join_names: List[str] = Field(serialization_alias="joinNames")


class SelectionHierarchyDefinition(BaseModel):
    levels: List["SelectionHierarchyLevelDefinition"]


class SelectionHierarchyLevelDefinition(BaseModel):
    level_name: str = Field(serialization_alias="levelName")
    selection_field_identifier: "SelectionFieldIdentifier" = Field(
        serialization_alias="selectionFieldIdentifier"
    )


class SumAggregationMeasureDefinition(BaseModel):
    value: "MeasureDefinition"


class UnloadMembersFromDataCubeInput(BaseModel):
    branch_name: str = Field(serialization_alias="branchName")
    data_cube_id: str = Field(serialization_alias="dataCubeId")
    level_identifier: "LevelIdentifier" = Field(serialization_alias="levelIdentifier")
    members: List[Constant]
    query_cube_name: str = Field(serialization_alias="queryCubeName")


class UpdateAggregateCacheInput(BaseModel):
    capacity: Optional[int] = None
    measure_names: Optional[List[str]] = Field(
        serialization_alias="measureNames", default=None
    )


class UpdateColumnInput(BaseModel):
    column_name: str = Field(serialization_alias="columnName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    default_value: Optional[Constant] = Field(
        serialization_alias="defaultValue", default=None
    )
    table_name: str = Field(serialization_alias="tableName")


class UpdateCubeInput(BaseModel):
    aggregate_cache: Optional["UpdateAggregateCacheInput"] = Field(
        serialization_alias="aggregateCache", default=None
    )
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    updateable_cells: Optional["UpdateUpdateableCellsInput"] = Field(
        serialization_alias="updateableCells", default=None
    )


class UpdateDataModelInput(BaseModel):
    database: Optional["UpdateDatabaseInput"] = None
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )


class UpdateDatabaseInput(BaseModel):
    owners: Optional[List[str]] = None
    readers: Optional[List[str]] = None


class UpdateHierarchyInput(BaseModel):
    are_members_indexed_by_name: Optional[bool] = Field(
        serialization_alias="areMembersIndexedByName", default=None
    )
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    hierarchy_identifier: "HierarchyIdentifier" = Field(
        serialization_alias="hierarchyIdentifier"
    )
    is_visible: Optional[bool] = Field(serialization_alias="isVisible", default=None)


class UpdateUpdateableCellsInput(BaseModel):
    hierarchy_identifiers: Optional[List["HierarchyIdentifier"]] = Field(
        serialization_alias="hierarchyIdentifiers", default=None
    )
    level_identifiers: Optional[List["LevelIdentifier"]] = Field(
        serialization_alias="levelIdentifiers", default=None
    )
    roles: Optional[List[str]] = None


AggregationMeasureDefinition.model_rebuild()
CreateCubeInput.model_rebuild()
CreateCubeRestrictionInput.model_rebuild()
CreateHierarchyInput.model_rebuild()
CreateJoinInput.model_rebuild()
CreateMeasureInput.model_rebuild()
CreateTableInput.model_rebuild()
CubeRestrictionIsInConditionInput.model_rebuild()
CubeRestrictionLeafConditionInput.model_rebuild()
CubeRestrictionRelationalConditionInput.model_rebuild()
DataLoadInput.model_rebuild()
DataSourceLoadInput.model_rebuild()
DeleteHierarchyInput.model_rebuild()
HierarchyDefinition.model_rebuild()
JdbcDataSourceLoadInput.model_rebuild()
MeasureDefinition.model_rebuild()
MultiplicationMeasureDefinition.model_rebuild()
NamedDataSourceLoadInput.model_rebuild()
QuantileAggregationMeasureDefinition.model_rebuild()
ScopedAggregationMeasureDefinition.model_rebuild()
SelectionHierarchyDefinition.model_rebuild()
SelectionHierarchyLevelDefinition.model_rebuild()
SumAggregationMeasureDefinition.model_rebuild()
UnloadMembersFromDataCubeInput.model_rebuild()
UpdateCubeInput.model_rebuild()
UpdateDataModelInput.model_rebuild()
UpdateHierarchyInput.model_rebuild()
UpdateUpdateableCellsInput.model_rebuild()
