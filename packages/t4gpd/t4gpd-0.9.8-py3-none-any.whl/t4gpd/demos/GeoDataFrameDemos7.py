'''
Created on 26 oct. 2022

@author: tleduc

Copyright 2020-2022 Thomas Leduc

This file is part of t4gpd.

t4gpd is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

t4gpd is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with t4gpd.  If not, see <https://www.gnu.org/licenses/>.
'''
from io import StringIO

from geopandas import clip, GeoDataFrame
from shapely.geometry import LineString
from t4gpd.commons.GeoDataFrameLib import GeoDataFrameLib
from t4gpd.demos.AbstractGeoDataFrameDemos import AbstractGeoDataFrameDemos

import matplotlib.pyplot as plt


class GeoDataFrameDemos7(AbstractGeoDataFrameDemos):
    '''
    classdocs
    '''

    @staticmethod
    def rezeDistrictInNantesRoi():
        _sio = StringIO("""geometry
POLYGON ((355868 6687013, 355868 6686813, 355668 6686813, 355668 6687013, 355868 6687013))
""")
        return GeoDataFrameLib.read_csv(_sio)

    @staticmethod
    def rezeDistrictInNantesBridge():
        _sio = StringIO("""HAUTEUR;geometry
8;POLYGON ((355712.97579242627 6686959.8406816, 355748.69728223607 6686970.903219788, 355750.90193257853 6686946.509830516, 355719.1382547563 6686936.837735747, 355712.97579242627 6686959.8406816))
8;POLYGON ((355750.90193257853 6686946.509830516, 355764.4 6686946.5, 355776.1 6686950, 355781.7 6686951.4, 355773.7358095187 6686978.194566151, 355748.69728223607 6686970.903219788, 355750.90193257853 6686946.509830516))
6;POLYGON ((355781.7 6686951.4, 355792 6686955, 355785.6688080147 6686981.463880807, 355773.7358095187 6686978.194566151, 355781.7 6686951.4))
4;POLYGON ((355792 6686955, 355806.9 6686959.1, 355807.8 6686957.1, 355814.8 6686959.2, 355814.3 6686961.5, 355826.3 6686965, 355819.08461315226 6686991.741988108, 355785.6688080147 6686981.463880807, 355792 6686955))
8;POLYGON ((355712.97579242627 6686959.8406816, 355697.795658177 6686955.064520338, 355704.0330738795 6686932.68320517, 355719.1382547563 6686936.837735747, 355712.97579242627 6686959.8406816))
6;POLYGON ((355697.795658177 6686955.064520338, 355677.06542363635 6686948.276744426, 355683.8531995479 6686925.161615646, 355704.0330738795 6686932.68320517, 355697.795658177 6686955.064520338))
4;POLYGON ((355677.06542363635 6686948.276744426, 355654.3172016625 6686940.755154903, 355660.921524171 6686918.006932929, 355683.8531995479 6686925.161615646, 355677.06542363635 6686948.276744426))
""")
        return GeoDataFrameLib.read_csv(_sio)
        
    @staticmethod
    def rezeDistrictInNantesBuildings():
        '''
        # SOURCE:
        # https://geoservices.ign.fr/bdtopo

        roi = GeoDataFrameDemos7.rezeDistrictInNantesRoi()
        buildings = read_file('/home/tleduc/data/bdtopo/\
BDTOPO_3-0_TOUSTHEMES_SHP_LAMB93_D044_2021-12-15/BDTOPO/1_DONNEES_LIVRAISON_2021-12-00166/\
BDT_3-0_SHP_LAMB93_D044-ED2021-12-15/BATI/BATIMENT.shp', bbox=roi)

        buildings = clip(buildings, roi)
        buildings = buildings[ buildings.area > 0 ]
        buildings.to_csv('/tmp/reze.csv', sep=';', index=False)
        '''
        _sio = StringIO("""ID;NATURE;USAGE1;USAGE2;LEGER;ETAT;DATE_CREAT;DATE_MAJ;DATE_APP;DATE_CONF;SOURCE;ID_SOURCE;PREC_PLANI;PREC_ALTI;NB_LOGTS;NB_ETAGES;MAT_MURS;MAT_TOITS;HAUTEUR;Z_MIN_SOL;Z_MIN_TOIT;Z_MAX_TOIT;Z_MAX_SOL;ORIGIN_BAT;APP_FF;geometry
BATIMENT0000000307088780;Indifférenciée;Commercial et services;;Non;En service;2012-07-13 17:40:53;2019-07-01 11:21:50;;;;;3.0;1.0;0.0;1.0;;;5.3;7.8;13.2;17.2;8.3;Cadastre;A 1.0;POLYGON Z ((355734.7 6686909.1 13.2, 355736.1 6686917.6 13.2, 355731.6 6686918.4 13.2, 355734.9 6686937.1 13.2, 355743 6686935.8 13.2, 355738.1 6686908.6 13.2, 355734.7 6686909.1 13.2))
BATIMENT0000000307089332;Indifférenciée;Indifférencié;;Non;En service;2012-07-13 17:40:53;2018-09-18 13:45:01;;;;;5.0;1.0;;;;;3.9;7.9;11.8;12.2;8.5;Cadastre;;POLYGON Z ((355743.6 6686882.8 11.8, 355742.4 6686879.7 11.8, 355734.8 6686882.8 11.8, 355736 6686885.8 11.8, 355743.6 6686882.8 11.8))
BATIMENT0000000307089330;Indifférenciée;Indifférencié;;Oui;En service;2012-07-13 17:40:53;2018-09-18 13:45:01;;;;;5.0;1.0;;;;;2.8;8.0;10.8;11.3;8.3;Cadastre;;POLYGON Z ((355758.1 6686889.3 10.8, 355768.3 6686885.1 10.8, 355766.8 6686881.6 10.8, 355766.3 6686881.9 10.8, 355760.4 6686884.2 10.8, 355748.5 6686889 10.8, 355749.9 6686892.6 10.8, 355758.1 6686889.3 10.8))
BATIMENT0000000307089255;Indifférenciée;Commercial et services;;Oui;En service;2012-07-13 17:40:53;2019-07-01 11:21:50;;;;;3.0;1.0;;;;;10.1;7.1;17.2;30.5;7.6;Cadastre;;POLYGON Z ((355757.7 6687003.2 17.2, 355758.1 6687003.3 17.2, 355759.9 6686997.3 17.2, 355757.3 6686996.7 17.2, 355757.7 6687003.2 17.2))
BATIMENT0000000307089256;Indifférenciée;Commercial et services;;Non;En service;2012-07-13 17:40:53;2019-07-01 11:21:50;2010-01-01;;;;3.0;1.0;0.0;1.0;;;12.2;7.0;19.3;38.2;8.3;Cadastre;C 0.1;POLYGON Z ((355792.5 6687011.4 19.3, 355794 6687005.3 19.3, 355759.9 6686997.3 19.3, 355758.1 6687003.3 19.3, 355757.7 6687003.2 19.3, 355758.37234927237 6687013 19.3, 355795.6625263158 6687013 19.3, 355795.6 6687012.1 19.3, 355792.5 6687011.4 19.3))
BATIMENT0000000307089331;Indifférenciée;Indifférencié;;Non;En service;2012-07-13 17:40:53;2018-09-18 13:45:01;;;;;5.0;1.0;;;;;2.4;7.4;9.8;10.0;8.0;Cadastre;;POLYGON Z ((355781.9 6686834.5 9.8, 355780 6686832.2 9.8, 355773.5 6686837.3 9.8, 355775.5 6686839.6 9.8, 355781.9 6686834.5 9.8))
BATIMENT0000002011309000;Indifférenciée;Indifférencié;;Non;En service;2018-06-05 09:28:58;;;2017-07-01;;;2.5;1.5;;;;;32.2;7.4;;;;Imagerie aérienne;;POLYGON Z ((355791.1 6686922.4 39.6, 355777.4 6686918.5 39.6, 355776.6 6686921.2 39.6, 355773.1 6686920.1 39.6, 355764.4 6686946.5 39.6, 355776.1 6686950 39.6, 355781.7 6686951.4 33.7, 355785.5 6686940.9 39.6, 355791.1 6686922.4 39.6))
BATIMENT0000000307090538;Indifférenciée;Commercial et services;;Oui;En service;2012-07-13 17:45:35;2019-07-01 11:21:50;;;;;3.0;1.0;;;;;7.4;6.8;14.2;16.4;7.3;Cadastre;;POLYGON Z ((355794 6687005.3 14.2, 355792.5 6687011.4 14.2, 355795.6 6687012.1 14.2, 355795.2 6687005.6 14.2, 355794 6687005.3 14.2))
BATIMENT0000002011308896;Indifférenciée;Résidentiel;Annexe;Non;En service;2018-06-05 09:28:58;2019-03-15 08:35:34;2016-01-01;2017-07-01;;;2.5;1.5;119.0;11.0;00;00;26.5;7.3;;;;Imagerie aérienne;C 0.7;POLYGON Z ((355828.3 6686909.3 28.5, 355825.6 6686910.8 28.5, 355824.5 6686907.7 28.5, 355826.7 6686906.8 28.5, 355821.5 6686896 28.5, 355814.3 6686899.4 28.5, 355814.9 6686900.8 28.5, 355807.6 6686904.2 28.8, 355807.1 6686903 28.8, 355802 6686905.4 28.8, 355805.6 6686913.4 29, 355809.7 6686911.2 29.1, 355818.1 6686928.4 29.1, 355824 6686925.5 29.1, 355824.8 6686927.2 29.1, 355819.7 6686945.8 33.8, 355815.8 6686944.7 33.8, 355816.9 6686941.3 33.8, 355798.1 6686935.8 33.8, 355792 6686955 33.8, 355806.9 6686959.1 33.8, 355807.8 6686957.1 33.8, 355814.8 6686959.2 33.8, 355814.3 6686961.5 33.8, 355826.3 6686965 33.8, 355828.1 6686958.6 33.8, 355829.4 6686954.9 33.8, 355832.1 6686945.8 33.8, 355836 6686947.2 28.3, 355842.3 6686925.4 28.3, 355834.9 6686923.3 28.5, 355828.3 6686909.3 28.5))
BATIMENT0000002011309129;Indifférenciée;Résidentiel;Annexe;Non;En service;2018-06-05 09:28:58;2019-03-15 08:35:34;2016-01-01;2017-07-01;;;2.5;1.5;46.0;9.0;00;00;26.9;7.1;;;;Imagerie aérienne;C 0.2;POLYGON Z ((355844.2 6686887.7 34, 355853.2 6686906.2 34, 355854.5 6686909 31.1, 355856.7 6686908.2 34, 355868 6686902.55 34, 355868 6686893.927272727 33.90454545454079, 355860.5 6686879.2 33.7, 355859.8 6686877.5 30.4, 355856.7 6686878.8 33.9, 355845.6 6686884 33.9, 355843.1 6686885.2 31.3, 355844.2 6686887.7 34))
BATIMENT0000000307089009;Indifférenciée;Commercial et services;;Non;En service;2012-07-13 17:40:53;2019-03-15 08:35:34;;;;;3.0;1.0;0.0;1.0;;;13.6;7.0;20.7;23.8;10.4;Cadastre;A 1.0;POLYGON Z ((355849.7 6686971.8 20.7, 355868 6686977.206818182 20.7, 355868 6686964.980182232 20.7, 355853.1 6686960.5 20.7, 355849.7 6686971.8 20.7))
BATIMENT0000002011309251;Indifférenciée;Annexe;Commercial et services;Non;En service;2018-06-05 09:28:58;2019-03-15 08:35:34;2016-01-01;2017-07-01;;;2.5;1.5;0.0;2.0;00;00;6.8;7.9;;;;Imagerie aérienne;C 0.1;POLYGON Z ((355860.5 6686879.2 14.7, 355868 6686893.927272727 14.7, 355868 6686873.333224756 14.7, 355859.8 6686877.5 14.7, 355860.5 6686879.2 14.7))
""")
        return GeoDataFrameLib.read_csv(_sio)

    @staticmethod
    def rezeDistrictInNantesTrees():
        _sio = StringIO("""genre;hauteurfut;hauteur;diametre;mi_prinx;geometry
;;;;8888881;POINT (355758.5400348857 6686860.0528141055)
;;;;8888882;POINT (355751.28463437705 6686836.019299921)
;;;;8888883;POINT (355749.3196300726 6686828.008128526)
;;;;8888884;POINT (355747.0523174137 6686819.8458029535)
;;;;8888885;POINT (355745.08731310925 6686811.985785736)
;;;;8888886;POINT (355750.0803111422 6686876.762442338)
;;;;8888887;POINT (355742.1261465518 6686803.919040301)
;;;;8888888;POINT (355740.66090570623 6686796.174195831)
;;;;8888889;POINT (355838.7168542357 6686920.918111843)
;;;;8888890;POINT (355837.41575946676 6686917.828011767)
;;;;8888891;POINT (355835.87070942874 6686915.144503807)
;;;;8888892;POINT (355837.9849884282 6686907.581890462)
;;;;8888893;POINT (355839.28608319705 6686910.4280352695)
;;;;8888894;POINT (355832.0487435451 6686896.6039033495)
;;;;8888895;POINT (355851.1337614828 6686926.955988219)
;;;;8888896;POINT (355851.82813991234 6686949.7116023265)
;;;;8888897;POINT (355842.6382685407 6686967.497308205)
;;;;8888898;POINT (355837.854715977 6686965.769914223)
Liquidambar;< 5,5 m;0-5 m;5.0;98765;POINT (355744.3302317513 6687002.434740052)
;;;;8888899;POINT (355825.07628236024 6686895.401948402)
;;;;8888900;POINT (355833.887650172 6686900.353097933)
;;;;8888901;POINT (355845.1326338556 6686915.206546531)
;;;;8888902;POINT (355848.99285213504 6686919.989860485)
""")
        trees = GeoDataFrameLib.read_csv(_sio)

        # ADD ATTRIBUTES TO TREES
        trees['h_arbre'] = 9.0
        trees['h_houppier'] = 6.5
        trees['r_houppier'] = 3
        trees['up_rad'] = 2.5
        trees['down_rad'] = 3.0

        return trees

    @staticmethod
    def rezeDistrictInNantesPath4():
        waypoints = GeoDataFrameDemos7.rezeDistrictInNantesWaypoints4()
        return GeoDataFrame([{'geometry': LineString(waypoints.geometry)}], crs=waypoints.crs)

    @staticmethod
    def rezeDistrictInNantesPath5():
        waypoints = GeoDataFrameDemos7.rezeDistrictInNantesWaypoints5()
        return GeoDataFrame([{'geometry': LineString(waypoints.geometry)}], crs=waypoints.crs)

    @staticmethod
    def rezeDistrictInNantesWaypoints4():
        _sio = StringIO("""id;geometry
401;POINT (355742.89623195573 6686987.678191775)
402;POINT (355747.1304494464 6686969.845621959)
403;POINT (355747.0908837532 6686938.870004576)
404;POINT (355774.65721006575 6686904.653607016)
405;POINT (355802.65504047973 6686900.404970987)
406;POINT (355820.8378645904 6686892.081746703)
407;POINT (355827.72841766576 6686874.825794985)
408;POINT (355826.36885026767 6686873.750510634)
409;POINT (355827.6838057041 6686872.474735493)
410;POINT (355829.2721136495 6686873.077197127)
411;POINT (355828.91269749915 6686876.49501894)
412;POINT (355845.1481801469 6686878.321993066)
413;POINT (355862.9750072931 6686869.546399772)
""")
        return GeoDataFrameLib.read_csv(_sio)

    @staticmethod
    def rezeDistrictInNantesWaypoints5():
        _sio = StringIO("""id;geometry
501;POINT (355846.8708313025 6686907.576581205)
502;POINT (355843.9348301106 6686900.456778315)
503;POINT (355831.60362510453 6686905.66818043)
504;POINT (355827.4198234061 6686893.483775484)
505;POINT (355835.42042665405 6686884.308771759)
506;POINT (355833.170690736 6686869.096169278)
507;POINT (355819.38740804174 6686872.10259)
508;POINT (355820.21995531855 6686877.699157805)
509;POINT (355827.7283063064 6686874.810995247)
510;POINT (355826.3816672795 6686873.7521874625)
511;POINT (355827.6902430627 6686872.464948846)
512;POINT (355829.27452565485 6686873.06902782)
513;POINT (355828.914291318 6686876.493021447)
514;POINT (355820.83899238444 6686892.080174104)
515;POINT (355802.66182414786 6686900.403713609)
516;POINT (355778.22241943295 6686868.633116537)
517;POINT (355758.45210415724 6686875.718731212)
""")
        return GeoDataFrameLib.read_csv(_sio)

    @staticmethod
    def rezeDistrictInNantesSidewalks():
        '''
        roi = GeoDataFrameDemos7.rezeDistrictInNantesRoi()
        sidewalks = read_file('/home/tleduc/data/nantes_metropole/VOIE_LIM_CHAUSSEE_L.shp', bbox=roi)

        sidewalks = clip(sidewalks, roi)
        sidewalks = sidewalks[ sidewalks.length > 0 ]
        sidewalks.to_csv('/tmp/reze-sidewalks.csv', sep=';', index=False)
        '''
        _sio = StringIO("""ECHELLE;PROVENAN;VISIBLE;geometry
O;ORTHO2008;O;MULTILINESTRING ((355757.0009500585 6686959.703214525, 355745.6313797465 6686956.298774808, 355741.3641459285 6686955.03463048, 355691.11045640206 6686939.107657436, 355668 6686931.726889969))
O;ORTHO2008;O;MULTILINESTRING ((355668 6686934.019355485, 355688.6314123048 6686940.227118193, 355688.8059628551 6686939.576170597, 355723.04914151895 6686950.347977315, 355741.3451096581 6686956.373797039, 355747.45602717774 6686958.252399276, 355756.6334977318 6686961.205112236))
O;TOPO;O;MULTILINESTRING ((355868 6687002.2500523655, 355755.0766670843 6686968.7922484735, 355730.4934344609 6686961.318951133, 355692.5392300708 6686948.868754034, 355668 6686941.691626902))
O;TOPO;O;MULTILINESTRING ((355668 6686924.270962025, 355690.5455404618 6686931.118182604, 355732.13233430474 6686944.20817853, 355742.2490589436 6686947.153210551, 355749.5411629574 6686949.281961447, 355756.393126221 6686951.354355953, 355757.3045269726 6686951.60671088, 355774.06272859086 6686956.54591761, 355789.0475993385 6686960.920054138, 355802.51041038753 6686964.906932809, 355815.5525750412 6686968.777339917, 355844.11115007073 6686977.257359257, 355846.9358525829 6686978.083632192, 355854.53877253697 6686980.339745088, 355857.6240035955 6686981.253821044, 355866.4387395749 6686983.839773028, 355868 6686984.3037061))
O;TOPO;O;MULTILINESTRING ((355757.0009500585 6686959.703214525, 355772.0542140367 6686963.886932178, 355786.9177921705 6686968.092186177, 355793.54797078425 6686969.926571467, 355813.459797198 6686975.589435022, 355819.69012995757 6686977.407104833, 355834.12413130474 6686981.625864149, 355849.88108613086 6686986.323442959, 355864.1047645019 6686990.483966367, 355868 6686991.638723001), (355868 6686994.660943855, 355864.75056155486 6686993.696308653, 355854.88371931 6686990.759226161, 355849.0334115085 6686988.978419143, 355841.09010808315 6686986.645148792, 355833.1365677061 6686984.281984275, 355818.9517148667 6686979.981246504, 355812.61065293517 6686978.064555997, 355810.14639965055 6686977.325268926, 355786.3337800804 6686969.995559645, 355771.4684874485 6686965.580474646, 355756.6334977318 6686961.205112236))
;;;MULTILINESTRING ((355734.7 6686909.1, 355733.15920946427 6686903.976347165, 355790.5302715514 6686880.89851392, 355796.9625545529 6686876.886080423, 355805.50446484314 6686871.843265914, 355813.8476510468 6686868.1527800085, 355843.0142689503 6686856.602466936, 355855.2915187064 6686851.743260592, 355869.9647851562 6686845.645471344, 355874.3369311719 6686844.124724904, 355878.51898388256 6686843.364351683, 355882.0357100256 6686843.079211726, 355888.22682047775 6686843.47477448, 355893.5833670388 6686844.81391112, 355897.3329496315 6686846.286961424))
;;;MULTILINESTRING ((355887.78458935954 6686852.0087384395, 355838.7179035336 6686876.342501636, 355837.2840616132 6686868.134992712, 355814.5403621856 6686872.881503897, 355816.91361777805 6686884.253353611, 355803.392604826 6686890.881390856, 355796.4939466351 6686877.637014379, 355805.60190165025 6686872.2417677445, 355807.642240076 6686871.262157899, 355813.2323332267 6686868.804315334, 355819.93145290064 6686866.106683251, 355843.1648395477 6686857.059854525, 355846.99930386135 6686855.526068799, 355868.7644536798 6686846.615504108, 355873.5849231027 6686844.972162259, 355876.0316765219 6686844.387862935, 355879.062729265 6686843.913119734, 355882.1668194237 6686843.620970072, 355885.5265405366 6686843.876601026, 355887.78572848917 6686851.99057807))
;;;MULTILINESTRING ((355843.1648395477 6686857.059854525, 355848.64134872716 6686871.421142849, 355848.64134872716 6686871.421142849, 355848.64134872716 6686871.421142849, 355848.64134872716 6686871.421142849))
;;;MULTILINESTRING ((355846.99930386135 6686855.526068799, 355852.66460640036 6686869.425878692))
;;;MULTILINESTRING ((355861.0253476354 6686865.279515556, 355856.5218945128 6686856.180072603, 355862.3833871166 6686853.023884278, 355864.8256757015 6686857.795740436, 355862.94699217466 6686858.847803211, 355865.097853963 6686863.259827392))
;;;MULTILINESTRING ((355874.43058561336 6686858.631422638, 355870.875036658 6686851.10762708, 355876.5862345797 6686848.139307108, 355879.06609683513 6686852.911163266, 355877.45042900206 6686853.812931359, 355878.6751044294 6686856.526427894))
;;;MULTILINESTRING ((355743.41299559234 6686911.021551377, 355739.1424223901 6686904.10612527, 355743.2065730025 6686902.497918433, 355745.49367439764 6686910.342462468, 355743.41299559234 6686911.021551377))
;;;MULTILINESTRING ((355749.1067487509 6686909.163232537, 355745.99502684193 6686901.394511852, 355751.7249767221 6686899.127139047, 355754.7095119314 6686907.334610873, 355749.1067487509 6686909.163232537))
;;;MULTILINESTRING ((355761.4786517103 6686905.125308919, 355757.9764785441 6686896.653385258, 355763.45870394725 6686894.484038397, 355767.05284171784 6686903.306012925, 355761.4786517103 6686905.125308919))
;;;MULTILINESTRING ((355771.8253881194 6686901.748356201, 355770.2914010001 6686897.98858385, 355772.376155578 6686896.131257043, 355768.9534152128 6686892.30975081, 355774.76066412375 6686890.011790352, 355778.26776396175 6686899.645702982, 355771.8253881194 6686901.748356201))
;;;MULTILINESTRING ((355784.2130971799 6686897.70527381, 355783.82335344225 6686892.606126576, 355781.3595525774 6686892.7956497185, 355779.3127026282 6686887.754334103, 355788.75503066374 6686884.474142242, 355791.02399683127 6686895.482342329, 355784.2130971799 6686897.70527381))
;;;MULTILINESTRING ((355829.52464697615 6686892.549154528, 355834.97791150707 6686889.867221152, 355840.4946030306 6686901.590066717, 355835.0053820256 6686904.301436583, 355829.52464697615 6686892.549154528))
;;;MULTILINESTRING ((355836.1617053212 6686906.807363226, 355841.74411613436 6686904.245253995, 355847.0536009964 6686915.527790058, 355841.42905289726 6686918.114261082, 355836.1617053212 6686906.807363226))
;;;MULTILINESTRING ((355734.7 6686909.1, 355725.54711016343 6686910.882541261, 355729.67572369345 6686938.19490769, 355741.1088073151 6686937.242150722, 355742.43804000015 6686972.92726733, 355743.2290228867 6686982.331174982, 355746.15974206914 6687002.11742034, 355748.5231137845 6687031.2636623075, 355748.55694555875 6687033.801045377))
;;;MULTILINESTRING ((355754.70269215526 6687041.78657603, 355754.59541066026 6687038.782694169, 355756.84832205606 6687038.568131179, 355755.8827886007 6687020.222995527, 355753.30803271977 6687020.222995527, 355752.44978075946 6687008.100186588, 355753.59268137603 6687005.705492405, 355756.3237593441 6687003.9985686755, 355756.0677207846 6686997.085527569, 355757.3 6686996.7))
;;;MULTILINESTRING ((355912.3543551931 6687030.202019067, 355900.8438216988 6687026.478022936, 355879.00766256993 6687018.691485572, 355871.3903977575 6687016.321669852, 355841.0906110594 6687013.274763928, 355821.4549950985 6687011.243493311, 355814.6840930431 6687008.535132489, 355813.4991851834 6687005.996044219, 355813.4991851834 6687003.964773602, 355794.54065942805 6686998.548051957, 355759.71558825846 6686990.3079307135, 355753.30383923976 6686989.239305877, 355750.31168969773 6686986.567743786, 355749.45678982855 6686983.682456727, 355749.2430648613 6686977.270707709, 355748.69728223607 6686970.903219788, 355750.90193257853 6686946.509830516, 355754.3879056871 6686939.042112259, 355753.24911309086 6686938.56262064, 355756.725427332 6686931.609992158, 355760.2616780256 6686932.868657659, 355759.4225676915 6686935.745607375, 355762.47932676564 6686936.824463519, 355763.9777380765 6686933.40808573, 355768.2623173218 6686934.779864678))
;;;MULTILINESTRING ((355742.4 6686879.7, 355763.9879653177 6686871.844508336, 355763.61438437784 6686869.7898131665, 355770.3388412944 6686866.987956118, 355772.6737221682 6686866.147399004, 355776.96990297595 6686865.867213299, 355780.70571237407 6686868.108698937, 355782.0132456634 6686869.603022696, 355789.9518406343 6686866.427584709, 355786.32046643057 6686860.220950268, 355793.71770544536 6686854.249685039, 355797.9956268033 6686859.151469928, 355808.69043019816 6686850.506503851, 355805.21461909486 6686846.4068292165, 355806.81883960404 6686845.872089046, 355808.7795535598 6686848.367543172, 355811.36413104687 6686851.4868608285, 355813.235721641 6686851.932477637, 355817.51364299894 6686851.308614106, 355819.4743569546 6686851.932477637, 355828.51134593645 6686845.355712263, 355830.0490831335 6686847.259577364, 355858.0959554144 6686825.260556274, 355854.388837081 6686819.815726222, 355862.61400588334 6686812.401489555, 355865.6260395293 6686811.358862523, 355867.01620890433 6686812.517337003, 355879.64358072774 6686827.69335268, 355885.8682727926 6686835.345838612, 355880.9340220974 6686835.732838666, 355871.6460207887 6686837.377588898, 355850.07076774875 6686845.794840083, 355815.33751285484 6686859.53334202, 355805.01950285846 6686863.936528391, 355800.5325572792 6686864.921467665, 355790.84732108994 6686866.453595423, 355780.9432095066 6686870.557509063, 355737.07247700007 6686887.8737293, 355736 6686885.8))
;;;MULTILINESTRING ((355888.22682047775 6686843.47477448, 355890.68888999755 6686849.337759097, 355892.78330155544 6686853.933828905, 355894.41228832264 6686854.981034684, 355899.41560482205 6686860.915200764, 355903.69910782255 6686866.825090046, 355909.97605663224 6686874.528618131, 355917.2516109344 6686881.94683036, 355921.6740066867 6686885.085304765, 355920.5327432668 6686887.08251575, 355924.38450730906 6686890.220990155, 355929.8055085538 6686893.35946456, 355934.5132201611 6686897.496544457, 355939.0782738409 6686902.3469139915, 355969.0891290127 6686939.217589706, 355971.6598785456 6686937.38134004, 355975.6996278116 6686942.400422461))
""")
        roi = GeoDataFrameDemos7.rezeDistrictInNantesRoi()
        sidewalks = GeoDataFrameLib.read_csv(_sio)
        sidewalks = clip(sidewalks, roi)
        sidewalks = sidewalks[ sidewalks.length > 0 ]
        return sidewalks

    @staticmethod
    def plot(oFile=None):
        roi = GeoDataFrameDemos7.rezeDistrictInNantesRoi()
        bridge = GeoDataFrameDemos7.rezeDistrictInNantesBridge()
        buildings = GeoDataFrameDemos7.rezeDistrictInNantesBuildings()
        # roads = GeoDataFrameDemos7.rezeDistrictInNantesRoads()
        sidewalks = GeoDataFrameDemos7.rezeDistrictInNantesSidewalks()
        # crosswalks = GeoDataFrameDemos7.rezeDistrictInNantesCrosswalks()
        # crosswalk_surf = GeoDataFrameDemos7.rezeDistrictInNantesCrosswalkSurface()
        trees = GeoDataFrameDemos7.rezeDistrictInNantesTrees()
        path4 = GeoDataFrameDemos7.rezeDistrictInNantesPath4()
        path5 = GeoDataFrameDemos7.rezeDistrictInNantesPath5()
        # corridor = GeoDataFrameDemos7.rezeDistrictInNantesCorridor()
        waypoints4 = GeoDataFrameDemos7.rezeDistrictInNantesWaypoints4()
        waypoints5 = GeoDataFrameDemos7.rezeDistrictInNantesWaypoints5()
        # streetlight = GeoDataFrameDemos7.rezeDistrictInNantesStreetLight()
        # streetsanitation = GeoDataFrameDemos7.rezeDistrictInNantesStreetSanitation()

        # MAPPING
        # minx, miny, maxx, maxy = corridor.buffer(10).total_bounds

        fig, basemap = plt.subplots(figsize=(0.7 * 8.26, 1 * 8.26))
        roi.boundary.plot(ax=basemap, color='blue')
        bridge.plot(ax=basemap, color='grey')
        buildings.plot(ax=basemap, color='lightgrey')
        # roads.plot(ax=basemap, color='black', linewidth=0.3)
        sidewalks.plot(ax=basemap, color='black', linewidth=0.3)
        # crosswalks.plot(ax=basemap, color='orange', linewidth=0.3)
        # crosswalk_surf.plot(ax=basemap, color='yellow', alpha=0.3)
        trees.plot(ax=basemap, color='green', marker='^', markersize=2)
        path4.plot(ax=basemap, color='green', linewidth=0.3)
        waypoints4.plot(ax=basemap, color='green', marker='^', markersize=2)
        path5.plot(ax=basemap, color='blue', linewidth=0.3)
        waypoints5.plot(ax=basemap, color='blue', marker='^', markersize=2)
        # corridor.boundary.plot(ax=basemap, color='red')
        trees.apply(lambda x: basemap.annotate(
            text=x.mi_prinx, xy=x.geometry.coords[0],
            color='black', size=7, ha='center'), axis=1)
        # streetlight.plot(ax=basemap, color='brown', linewidth=0.3)
        # streetsanitation.plot(ax=basemap, color='cyan', linewidth=0.3)
        basemap.axis('off')
        # basemap.axis([minx, maxx, miny, maxy])
        if oFile is None:
            plt.show()
        else:
            plt.savefig(oFile, bbox_inches='tight')
        plt.close(fig)

# GeoDataFrameDemos7.plot()
# GeoDataFrameDemos7.rezeDistrictInNantesTrees().to_file('/tmp/reze-trees.shp')
