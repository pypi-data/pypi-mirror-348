[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dbridge"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [{ name = "e3oroush", email = "ebrahim.soroush@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pydantic==2.10.4",
  "pydantic-settings==2.7.0",
  "fastapi==0.115.6",
  "uvicorn==0.34.0",
  "numpy==2.2.1",
  "pandas==2.2.3",
  "duckdb==1.1.3",
  "pyyaml==6.0.2",
  "sqlparse==0.5.3",
]

[project.optional-dependencies]
mysql = ["pymysql"]
postgres = ["psycopg2"]
snowflake = ["snowflake-connector-python"]

[project.urls]
Documentation = "https://github.com/e3oroush/dbridge#readme"
Issues = "https://github.com/e3oroush/dbridge/issues"
Source = "https://github.com/e3oroush/dbridge"

[tool.hatch.version]
path = "src/dbridge/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/dbridge tests}"

[tool.hatch.envs.dev]
dependencies = [
  "ruff",
  "black",
  "isort",
  "pyright",
  "pytest",
  "ipython",
  "mysql-connector-python",
]

[tool.hatch.envs.test]
dependencies = ["coverage[toml]", "pytest", "pytest-cov", "pytest-mock"]
[tool.hatch.envs.test.scripts]
run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov=tests"
run = "run-coverage --no-cov"

[tool.coverage.run]
source_pkgs = ["dbridge", "tests"]
branch = true
parallel = true
omit = ["src/dbridge/__about__.py"]

[tool.coverage.paths]
dbridge = ["src/dbridge", "*/dbridge/src/dbridge"]
tests = ["tests", "*/dbridge/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
[tool.hatch.envs.default.scripts]
start_server = "python -m dbridge.server.app"
extract_table = "python -m dbridge.scripts.extract_table"
