[project]
name = "pbip-tools"
description = "Smudge and Clean filters for Power BI-generated JSON files."
version = "0.3.0"

authors = [
    {name = "Moshe Rubin", email = "mosherubin137@gmail.com"}
]

license = { file = "LICENSE" }
readme = "readme.md"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: File Formats :: JSON :: JSON Schema",
    "Topic :: File Formats :: JSON",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Version Control",
]
requires-python = ">=3.10"

[project.scripts]
json-clean = "pbip_tools.clean.clean_JSON:main"
json-smudge = "pbip_tools.smudge.smudge_JSON:main"
pbip-tools = "pbip_tools.cli:main"

[project.urls]
Homepage = "https://github.com/moshemoshe137/pbip-tools"
Repository = "https://github.com/moshemoshe137/pbip-tools"
Issues = "https://github.com/moshemoshe137/pbip-tools/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
# When in doubt, borrowed from pandas
# https://github.com/pandas-dev/pandas/blob/417d1c94fe3810f695e94360a/pyproject.toml#L66
# Import discovery
ignore_missing_imports = true
# Untyped definitions and calls
check_untyped_defs = true
# disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
disallow_any_generics = true
# None and Optional handling
no_implicit_optional = true
# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
# Miscellaneous strictness flags
strict_equality = true
# Configuring error messages
pretty = true
show_error_codes = true

[tool.pytest.ini_options]
addopts = "--doctest-modules --random-order-seed=0 --cov-report=xml --cov-report=term --cov-append"
minversion = "8.0"
required_plugins = "pytest-random-order pytest-cov"
xfail_strict = true


# Ruff config
[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
    "COM812", # Conflicts with `ruff format` and raises a warning.
    "ERA",    # Allow commented-out code.
    "FBT003", # Allow Boolean positional value in function call.
    "INP",    # Avoid error: "File _____ is part of an implicit namespace package. Add
              # an `__init__.py`."
    "ISC001", # Conflicts with `ruff format` and raises a warning.
    "PD010",  # This rule is just outright wrong.
    "PTH207", # Since `Path.glob` != `glob.glob` (the latter can take absolute paths).
    "T20",    # Allow `print` statements.
    "UP040",  # until `mypy` supports the `type` keyword.
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"] # Use of `assert` detected

[tool.ruff.lint.pydocstyle]
convention = "numpy"
