Metadata-Version: 2.4
Name: dagmodelling
Version: 0.9.0
Summary: The DAGFlow package is a python implementation of the dataflow programming with the lazy graph evaluation.
Author-email: DAGFlow Team <dagflow@jinr.ru>
Maintainer-email: DAGFlow Team <dagflow@jinr.ru>
License-Expression: MIT
Project-URL: homepage, https://github.com/dagflow-team/dagflow
Project-URL: repository, https://github.com/dagflow-team/dagflow
Project-URL: documentation, https://github.com/dagflow-team/dagflow/wiki
Project-URL: Bug Tracker, https://github.com/dagflow-team/dagflow/issues
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: contextlib2
Requires-Dist: h5py
Requires-Dist: latexdatax
Requires-Dist: matplotlib
Requires-Dist: numba
Requires-Dist: numpy
Requires-Dist: ordered-set
Requires-Dist: pandas
Requires-Dist: pygraphviz
Requires-Dist: pyyaml
Requires-Dist: schema
Requires-Dist: scipy
Requires-Dist: tabulate
Requires-Dist: uproot
Requires-Dist: plotille
Requires-Dist: nestedmapping
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: coverage; extra == "dev"
Dynamic: license-file

# Summary

[![python](https://img.shields.io/badge/python-3.10-purple.svg)](https://www.python.org/)
[![pipeline](https://git.jinr.ru/dag-computing/dag-flow/badges/master/pipeline.svg)](https://git.jinr.ru/dag-computing/dag-flow/commits/master)
[![coverage report](https://git.jinr.ru/dag-computing/dag-flow/badges/master/coverage.svg)](https://git.jinr.ru/dag-computing/dag-flow/-/commits/master)
<!--- Uncomment here after adding docs!
[![pages](https://img.shields.io/badge/pages-link-white.svg)](http://dag-computing.pages.jinr.ru/dag-flow)
-->

DAGFlow is python implementation of dataflow programming with lazy graph evaluation.

Main goals:
*  Lazy evaluated directed acyclic graph
*  Concise connection syntax
*  Plotting with graphviz
*  Flexibility. The goal of DAGFlow is not to be efficient, but rather flexible.

The framework is intented to be used for the statistical analysis of the data of JUNO and Daya Bay neutrino oscillation experiments.
The modules, located in the [project](https://git.jinr.ru/dag-computing) include:
- Supplementary python modules:
    * [dagflow-reactornueosc](https://git.jinr.ru/dag-computing/dagflow-reactorenueosc) — nodes related to reactor neutrino oscillations
    * [dagflow-detector](https://git.jinr.ru/dag-computing/dagflow-detector) — nodes for the detector responce modelling
    * [dagflow-statistics](https://git.jinr.ru/dag-computing/dagflow-statistics) — statistical analysis and MC
- [Daya Bay model](https://git.jinr.ru/dag-computing/dayabay-model) — test implementation of the Daya Bay oscillation analysis

