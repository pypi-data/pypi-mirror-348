"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class waist_control_command_lcmt(object):
    __slots__ = ["tau_ff", "q_des", "qd_des"]

    def __init__(self):
        self.tau_ff = [ 0.0 for dim0 in range(2) ]
        self.q_des = [ 0.0 for dim0 in range(2) ]
        self.qd_des = [ 0.0 for dim0 in range(2) ]

    def encode(self):
        buf = BytesIO()
        buf.write(waist_control_command_lcmt._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack('>2f', *self.tau_ff[:2]))
        buf.write(struct.pack('>2f', *self.q_des[:2]))
        buf.write(struct.pack('>2f', *self.qd_des[:2]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != waist_control_command_lcmt._get_packed_fingerprint():
            raise ValueError("Decode error")
        return waist_control_command_lcmt._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = waist_control_command_lcmt()
        self.tau_ff = struct.unpack('>2f', buf.read(8))
        self.q_des = struct.unpack('>2f', buf.read(8))
        self.qd_des = struct.unpack('>2f', buf.read(8))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if waist_control_command_lcmt in parents: return 0
        tmphash = (0x9789608fd8fcd0dc) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if waist_control_command_lcmt._packed_fingerprint is None:
            waist_control_command_lcmt._packed_fingerprint = struct.pack(">Q", waist_control_command_lcmt._get_hash_recursive([]))
        return waist_control_command_lcmt._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

