/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package lcmtypes;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class vision_data_struct implements lcm.lcm.LCMEncodable
{
    public int current_status;
    public int current_err_code;
 
    public vision_data_struct()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x3e8bf38507028158L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(lcmtypes.vision_data_struct.class))
            return 0L;
 
        classes.add(lcmtypes.vision_data_struct.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeInt(this.current_status); 
 
        outs.writeInt(this.current_err_code); 
 
    }
 
    public vision_data_struct(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public vision_data_struct(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static lcmtypes.vision_data_struct _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        lcmtypes.vision_data_struct o = new lcmtypes.vision_data_struct();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.current_status = ins.readInt();
 
        this.current_err_code = ins.readInt();
 
    }
 
    public lcmtypes.vision_data_struct copy()
    {
        lcmtypes.vision_data_struct outobj = new lcmtypes.vision_data_struct();
        outobj.current_status = this.current_status;
 
        outobj.current_err_code = this.current_err_code;
 
        return outobj;
    }
 
}

