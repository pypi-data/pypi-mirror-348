/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package lcmtypes;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class control_parameter_request_lcmt implements lcm.lcm.LCMEncodable
{
    public byte name[];
    public long requestNumber;
    public byte value[];
    public byte parameterKind;
    public byte requestKind;
 
    public control_parameter_request_lcmt()
    {
        name = new byte[112];
        value = new byte[112];
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0x94074e7185765219L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(lcmtypes.control_parameter_request_lcmt.class))
            return 0L;
 
        classes.add(lcmtypes.control_parameter_request_lcmt.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.write(this.name, 0, 112);
 
        outs.writeLong(this.requestNumber); 
 
        outs.write(this.value, 0, 112);
 
        outs.writeByte(this.parameterKind); 
 
        outs.writeByte(this.requestKind); 
 
    }
 
    public control_parameter_request_lcmt(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public control_parameter_request_lcmt(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static lcmtypes.control_parameter_request_lcmt _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        lcmtypes.control_parameter_request_lcmt o = new lcmtypes.control_parameter_request_lcmt();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.name = new byte[(int) 112];
        ins.readFully(this.name, 0, 112); 
        this.requestNumber = ins.readLong();
 
        this.value = new byte[(int) 112];
        ins.readFully(this.value, 0, 112); 
        this.parameterKind = ins.readByte();
 
        this.requestKind = ins.readByte();
 
    }
 
    public lcmtypes.control_parameter_request_lcmt copy()
    {
        lcmtypes.control_parameter_request_lcmt outobj = new lcmtypes.control_parameter_request_lcmt();
        outobj.name = new byte[(int) 112];
        System.arraycopy(this.name, 0, outobj.name, 0, 112); 
        outobj.requestNumber = this.requestNumber;
 
        outobj.value = new byte[(int) 112];
        System.arraycopy(this.value, 0, outobj.value, 0, 112); 
        outobj.parameterKind = this.parameterKind;
 
        outobj.requestKind = this.requestKind;
 
        return outobj;
    }
 
}

