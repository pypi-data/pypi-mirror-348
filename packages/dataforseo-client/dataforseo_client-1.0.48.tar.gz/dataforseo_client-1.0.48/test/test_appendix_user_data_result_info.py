# coding: utf-8

"""
    DataForSEO API documentation

    DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dataforseo_client.models.appendix_user_data_result_info import AppendixUserDataResultInfo

class TestAppendixUserDataResultInfo(unittest.TestCase):
    """AppendixUserDataResultInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppendixUserDataResultInfo:
        """Test AppendixUserDataResultInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppendixUserDataResultInfo`
        """
        model = AppendixUserDataResultInfo()
        if include_optional:
            return AppendixUserDataResultInfo(
                login = '',
                timezone = '',
                rates = dataforseo_client.models.appendix_rates_data.AppendixRatesData(
                    limits = dataforseo_client.models.appendix_limits_rates_data.AppendixLimitsRatesData(
                        day = dataforseo_client.models.appendix_day_limits_rates_data.AppendixDayLimitsRatesData(
                            serp = dataforseo_client.models.appendix_serps_rates_data_info.AppendixSerpsRatesDataInfo(
                                task_post = 1.337, 
                                task_get = dataforseo_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                                    regular = 1.337, 
                                    advanced = 1.337, 
                                    html = 1.337, ), 
                                tasks_ready = 1.337, 
                                locations = 1.337, 
                                languages = 1.337, 
                                live = dataforseo_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                                    regular = 1.337, 
                                    advanced = 1.337, 
                                    html = 1.337, ), 
                                errors = 1.337, 
                                tasks_fixed = 1.337, 
                                jobs = dataforseo_client.models.appendix_jobs_serp_limits_rates_data_info.AppendixJobsSerpLimitsRatesDataInfo(
                                    task_post = 1.337, ), 
                                screenshot = 1.337, ), 
                            total = 1.337, 
                            total_serp = 1.337, 
                            keywords_data = dataforseo_client.models.appendix_keywords_datas_rates_data_info.AppendixKeywordsDatasRatesDataInfo(
                                keywords_for_keywords = dataforseo_client.models.appendix_info.AppendixInfo(
                                    task_post = 1.337, 
                                    tasks_ready = 1.337, ), 
                                keywords_for_site = dataforseo_client.models.appendix_info.AppendixInfo(
                                    task_post = 1.337, 
                                    tasks_ready = 1.337, ), 
                                search_volume = , 
                                ad_traffic_by_keywords = , 
                                languages = 1.337, 
                                locations = 1.337, 
                                tasks_ready = 1.337, 
                                explore = , 
                                categories = 1.337, 
                                errors = 1.337, 
                                bing = dataforseo_client.models.appendix_bing_keywords_data_limits_rates_data_info.AppendixBingKeywordsDataLimitsRatesDataInfo(
                                    keyword_performance = , 
                                    audience_estimation = , 
                                    keyword_suggestions_for_url = , ), 
                                keyword_performance = , 
                                locations_and_languages = 1.337, 
                                google_ads = dataforseo_client.models.appendix_google_ads_keywords_data_limits_rates_data_info.AppendixGoogleAdsKeywordsDataLimitsRatesDataInfo(
                                    status = 1.337, ), 
                                dataforseo_trends = dataforseo_client.models.appendix_dataforseo_trends_keywords_data_limits_rates_data_info.AppendixDataforseoTrendsKeywordsDataLimitsRatesDataInfo(
                                    subregion_interests = , 
                                    demography = , 
                                    merged_data = , ), 
                                clickstream_data = dataforseo_client.models.appendix_clickstream_data_keywords_data_limits_rates_data_info.AppendixClickstreamDataKeywordsDataLimitsRatesDataInfo(
                                    dataforseo_search_volume = , 
                                    locations_and_languages = 1.337, 
                                    bulk_search_volume = , 
                                    global_search_volume = , ), 
                                audience_estimation = , 
                                keyword_suggestions_for_url = , ), 
                            total_keywords_data = 1.337, 
                            appendix = dataforseo_client.models.appendix_appendix_days_rates_data_info.AppendixAppendixDaysRatesDataInfo(
                                user_data = 1.337, 
                                errors = 1.337, ), 
                            total_appendix = 1.337, 
                            dataforseo_labs = dataforseo_client.models.appendix_dataforseo_labs_limits_rates_data_info.AppendixDataforseoLabsLimitsRatesDataInfo(
                                locations_and_languages = 1.337, 
                                categories = 1.337, 
                                errors = 1.337, 
                                product_competitors = , 
                                product_keyword_intersections = , 
                                product_rank_overview = , 
                                ranked_keywords = , 
                                serp_competitors = , 
                                subdomains = , 
                                relevant_pages = , 
                                competitors_domain = , 
                                related_keywords = , 
                                domain_rank_overview = , 
                                domain_intersection = , 
                                page_intersection = , 
                                bulk_traffic_estimation = , 
                                bulk_keyword_difficulty = , 
                                keyword_suggestions = , 
                                keyword_ideas = , 
                                categories_for_domain = , 
                                domain_metrics_by_categories = , 
                                top_searches = , 
                                domain_whois_overview = , 
                                historical_rank_overview = , 
                                keywords_for_categories = , 
                                historical_serps = , 
                                app_competitors = , 
                                keywords_for_app = , 
                                app_intersection = , 
                                bulk_app_metrics = , 
                                search_intent = , 
                                historical_bulk_traffic_estimation = , 
                                categories_for_keywords = , 
                                keyword_overview = , 
                                historical_keyword_data = , ), 
                            total_dataforseo_labs = 1.337, 
                            domain_analytics = dataforseo_client.models.appendix_domain_analytics_limits_rates_data_info.AppendixDomainAnalyticsLimitsRatesDataInfo(
                                tasks_ready = 1.337, 
                                errors = 1.337, 
                                whois = dataforseo_client.models.appendix_whois_domain_analytics_limits_rates_data_info.AppendixWhoisDomainAnalyticsLimitsRatesDataInfo(
                                    overview = , ), 
                                technologies = dataforseo_client.models.appendix_technologies_domain_analytics_limits_rates_data_info.AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo(
                                    domain_technologies = , 
                                    domains_by_technology = , 
                                    languages = 1.337, 
                                    locations = 1.337, 
                                    aggregation_technologies = , 
                                    technologies_summary = , 
                                    domains_by_html_terms = , 
                                    technology_stats = , ), ), 
                            total_domain_analytics = 1.337, 
                            merchant = dataforseo_client.models.appendix_merchant_limits_rates_data_info.AppendixMerchantLimitsRatesDataInfo(
                                google = dataforseo_client.models.appendix_merchant_google_info.AppendixMerchantGoogleInfo(
                                    products = dataforseo_client.models.appendix_serps_rates_data_info.AppendixSerpsRatesDataInfo(
                                        task_post = 1.337, 
                                        tasks_ready = 1.337, 
                                        locations = 1.337, 
                                        languages = 1.337, 
                                        errors = 1.337, 
                                        tasks_fixed = 1.337, 
                                        screenshot = 1.337, ), 
                                    sellers = dataforseo_client.models.appendix_sellers_google_merchant_limits_rates_data_info.AppendixSellersGoogleMerchantLimitsRatesDataInfo(
                                        task_post = 1.337, 
                                        tasks_ready = 1.337, 
                                        ad_url = 1.337, ), 
                                    product_spec = , 
                                    product_info = , ), 
                                amazon = dataforseo_client.models.appendix_merchant_amazon_info.AppendixMerchantAmazonInfo(
                                    asin = , ), 
                                locations = 1.337, 
                                languages = 1.337, 
                                errors = 1.337, 
                                reviews = , 
                                tasks_ready = 1.337, ), 
                            total_merchant = 1.337, 
                            on_page = dataforseo_client.models.appendix_on_page_limits_rates_data_info.AppendixOnPageLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, 
                                summary = 1.337, 
                                resources = 1.337, 
                                pages = 1.337, 
                                non_indexable = 1.337, 
                                duplicate_tags = 1.337, 
                                links = 1.337, 
                                waterfall = 1.337, 
                                errors = 1.337, 
                                pages_by_resource = 1.337, 
                                duplicate_content = 1.337, 
                                raw_html = 1.337, 
                                instant_pages = 1.337, 
                                redirect_chains = 1.337, 
                                lighthouse = , 
                                keyword_density = 1.337, 
                                page_screenshot = 1.337, 
                                content_parsing = 1.337, 
                                content_parsing_live = 1.337, ), 
                            total_on_page = 1.337, 
                            business_data = dataforseo_client.models.appendix_business_data_limits_rates_data_info.AppendixBusinessDataLimitsRatesDataInfo(
                                locations = 1.337, 
                                languages = 1.337, 
                                errors = 1.337, 
                                yelp = dataforseo_client.models.appendix_business_data_day_limits_rates_data_info.AppendixBusinessDataDayLimitsRatesDataInfo(
                                    search = , ), 
                                social_media = dataforseo_client.models.appendix_social_media_business_data_limits_rates_data_info.AppendixSocialMediaBusinessDataLimitsRatesDataInfo(
                                    facebook = , 
                                    pinterest = , 
                                    reddit = , ), 
                                tripadvisor = dataforseo_client.models.appendix_business_data_day_limits_rates_data_info.AppendixBusinessDataDayLimitsRatesDataInfo(), 
                                trustpilot = , 
                                business_listings = dataforseo_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                                    categories_aggregation = , 
                                    categories = 1.337, 
                                    locations = 1.337, ), 
                                tasks_ready = 1.337, ), 
                            total_business_data = 1.337, 
                            backlinks = dataforseo_client.models.appendix_backlinks_limits_rates_data_info.AppendixBacklinksLimitsRatesDataInfo(
                                summary = , 
                                history = , 
                                content_duplicates = , 
                                domain_pages = , 
                                anchors = , 
                                referring_domains = , 
                                referring_networks = , 
                                bulk_ranks = , 
                                bulk_backlinks = , 
                                bulk_new_lost_backlinks = , 
                                bulk_new_lost_referring_domains = , 
                                bulk_referring_domains = , 
                                errors = 1.337, 
                                domain_pages_summary = , 
                                timeseries_summary = , 
                                timeseries_new_lost_summary = , 
                                competitors = , 
                                bulk_spam_score = , 
                                bulk_pages_summary = , ), 
                            total_backlinks = 1.337, 
                            app_data = dataforseo_client.models.appendix_app_data_limits_rates_data_info.AppendixAppDataLimitsRatesDataInfo(
                                app_info = , 
                                app_list = , 
                                app_reviews = , 
                                app_searches = , 
                                errors = 1.337, 
                                languages = 1.337, 
                                locations = 1.337, 
                                categories = 1.337, 
                                app_listings = dataforseo_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                                    categories = 1.337, 
                                    locations = 1.337, ), 
                                tasks_ready = 1.337, ), 
                            total_app_data = 1.337, 
                            content_analysis = dataforseo_client.models.appendix_content_analysis_limits_rates_data_info.AppendixContentAnalysisLimitsRatesDataInfo(
                                sentiment_analysis = , 
                                rating_distribution = , 
                                phrase_trends = , 
                                category_trends = , 
                                locations = 1.337, 
                                languages = 1.337, 
                                categories = 1.337, 
                                errors = 1.337, ), 
                            total_content_analysis = 1.337, 
                            content_generation = dataforseo_client.models.appendix_content_generation_limits_rates_data_info.AppendixContentGenerationLimitsRatesDataInfo(
                                generate = , 
                                generate_meta_tags = , 
                                generate_text = , 
                                paraphrase = , 
                                check_grammar = dataforseo_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                                    languages = 1.337, ), 
                                text_summary = dataforseo_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                                    languages = 1.337, ), 
                                generate_sub_topics = , ), 
                            total_content_generation = 1.337, 
                            total_reviews = 1.337, 
                            total_social = 1.337, 
                            total_traffic_analytics = 1.337, ), 
                        minute = dataforseo_client.models.appendix_data_info.AppendixDataInfo(
                            total = 1.337, 
                            total_serp = 1.337, 
                            total_keywords_data = 1.337, 
                            total_appendix = 1.337, 
                            total_dataforseo_labs = 1.337, 
                            total_domain_analytics = 1.337, 
                            total_merchant = 1.337, 
                            total_on_page = 1.337, 
                            total_business_data = 1.337, 
                            total_backlinks = 1.337, 
                            total_app_data = 1.337, 
                            total_content_analysis = 1.337, 
                            total_content_generation = 1.337, 
                            total_reviews = 1.337, 
                            total_social = 1.337, 
                            social = , 
                            total_traffic_analytics = 1.337, 
                            traffic_analytics = , ), ), 
                    statistics = dataforseo_client.models.appendix_statistics_rates_data.AppendixStatisticsRatesData(), ),
                money = dataforseo_client.models.appendix_money_data.AppendixMoneyData(
                    total = 1.337, 
                    balance = 1.337, 
                    limits = dataforseo_client.models.appendix_limits_money_data.AppendixLimitsMoneyData(
                        day = dataforseo_client.models.appendix_data_info.AppendixDataInfo(
                            serp = dataforseo_client.models.appendix_serp_data_info.AppendixSerpDataInfo(
                                task_post = 1.337, 
                                task_get = dataforseo_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                                    regular = 1.337, 
                                    advanced = 1.337, 
                                    html = 1.337, ), 
                                tasks_ready = 1.337, 
                                locations = 1.337, 
                                languages = 1.337, 
                                live = dataforseo_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                                    regular = 1.337, 
                                    advanced = 1.337, 
                                    html = 1.337, ), 
                                errors = 1.337, 
                                tasks_fixed = 1.337, 
                                jobs = dataforseo_client.models.appendix_jobs_serp_limits_rates_data_info.AppendixJobsSerpLimitsRatesDataInfo(
                                    task_post = 1.337, ), 
                                screenshot = 1.337, 
                                tasks_ready_queue = 1.337, ), 
                            total = 1.337, 
                            total_serp = 1.337, 
                            keywords_data = dataforseo_client.models.appendix_keywords_data_data_info.AppendixKeywordsDataDataInfo(
                                keywords_for_keywords = dataforseo_client.models.appendix_info.AppendixInfo(
                                    task_post = 1.337, 
                                    tasks_ready = 1.337, ), 
                                keywords_for_site = dataforseo_client.models.appendix_info.AppendixInfo(
                                    task_post = 1.337, 
                                    tasks_ready = 1.337, ), 
                                search_volume = , 
                                ad_traffic_by_keywords = , 
                                languages = 1.337, 
                                locations = 1.337, 
                                tasks_ready = 1.337, 
                                explore = , 
                                categories = 1.337, 
                                errors = 1.337, 
                                bing = dataforseo_client.models.appendix_bing_keywords_data_limits_rates_data_info.AppendixBingKeywordsDataLimitsRatesDataInfo(
                                    keyword_performance = , 
                                    audience_estimation = , 
                                    keyword_suggestions_for_url = , ), 
                                keyword_performance = , 
                                locations_and_languages = 1.337, 
                                google_ads = dataforseo_client.models.appendix_google_ads_keywords_data_limits_rates_data_info.AppendixGoogleAdsKeywordsDataLimitsRatesDataInfo(
                                    status = 1.337, ), 
                                dataforseo_trends = dataforseo_client.models.appendix_dataforseo_trends_keywords_data_limits_rates_data_info.AppendixDataforseoTrendsKeywordsDataLimitsRatesDataInfo(
                                    subregion_interests = , 
                                    demography = , 
                                    merged_data = , ), 
                                clickstream_data = dataforseo_client.models.appendix_clickstream_data_keywords_data_limits_rates_data_info.AppendixClickstreamDataKeywordsDataLimitsRatesDataInfo(
                                    dataforseo_search_volume = , 
                                    locations_and_languages = 1.337, 
                                    bulk_search_volume = , 
                                    global_search_volume = , ), 
                                audience_estimation = , 
                                keyword_suggestions_for_url = , 
                                naver = dataforseo_client.models.appendix_naver_keywords_data_data_info.AppendixNaverKeywordsDataDataInfo(
                                    keywords_for_category = , ), 
                                google = dataforseo_client.models.appendix_bing_keywords_data_limits_rates_data_info.AppendixBingKeywordsDataLimitsRatesDataInfo(), 
                                keyword_ideas_ads_api = dataforseo_client.models.appendix_serps_rates_data_info.AppendixSerpsRatesDataInfo(
                                    task_post = 1.337, 
                                    tasks_ready = 1.337, 
                                    locations = 1.337, 
                                    languages = 1.337, 
                                    errors = 1.337, 
                                    tasks_fixed = 1.337, 
                                    screenshot = 1.337, ), ), 
                            total_keywords_data = 1.337, 
                            appendix = dataforseo_client.models.appendix_appendix_data_info.AppendixAppendixDataInfo(
                                user_data = 1.337, 
                                errors = 1.337, 
                                status = 1.337, 
                                test = 1.337, ), 
                            total_appendix = 1.337, 
                            dataforseo_labs = dataforseo_client.models.appendix_dataforseo_labs_limits_rates_data_info.AppendixDataforseoLabsLimitsRatesDataInfo(
                                locations_and_languages = 1.337, 
                                categories = 1.337, 
                                errors = 1.337, 
                                product_competitors = , 
                                product_keyword_intersections = , 
                                product_rank_overview = , 
                                ranked_keywords = , 
                                serp_competitors = , 
                                subdomains = , 
                                relevant_pages = , 
                                competitors_domain = , 
                                related_keywords = , 
                                domain_rank_overview = , 
                                domain_intersection = , 
                                page_intersection = , 
                                bulk_traffic_estimation = , 
                                bulk_keyword_difficulty = , 
                                keyword_suggestions = , 
                                keyword_ideas = , 
                                categories_for_domain = , 
                                domain_metrics_by_categories = , 
                                top_searches = , 
                                domain_whois_overview = , 
                                historical_rank_overview = , 
                                keywords_for_categories = , 
                                historical_serps = , 
                                app_competitors = , 
                                keywords_for_app = , 
                                app_intersection = , 
                                bulk_app_metrics = , 
                                search_intent = , 
                                historical_bulk_traffic_estimation = , 
                                categories_for_keywords = , 
                                keyword_overview = , 
                                historical_keyword_data = , ), 
                            total_dataforseo_labs = 1.337, 
                            domain_analytics = dataforseo_client.models.appendix_domain_analytics_limits_rates_data_info.AppendixDomainAnalyticsLimitsRatesDataInfo(
                                tasks_ready = 1.337, 
                                errors = 1.337, 
                                whois = dataforseo_client.models.appendix_whois_domain_analytics_limits_rates_data_info.AppendixWhoisDomainAnalyticsLimitsRatesDataInfo(
                                    overview = , ), 
                                technologies = dataforseo_client.models.appendix_technologies_domain_analytics_limits_rates_data_info.AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo(
                                    domain_technologies = , 
                                    domains_by_technology = , 
                                    languages = 1.337, 
                                    locations = 1.337, 
                                    aggregation_technologies = , 
                                    technologies_summary = , 
                                    domains_by_html_terms = , 
                                    technology_stats = , ), ), 
                            total_domain_analytics = 1.337, 
                            merchant = dataforseo_client.models.appendix_merchant_limits_rates_data_info.AppendixMerchantLimitsRatesDataInfo(
                                amazon = dataforseo_client.models.appendix_merchant_amazon_info.AppendixMerchantAmazonInfo(
                                    asin = dataforseo_client.models.appendix_serps_rates_data_info.AppendixSerpsRatesDataInfo(
                                        task_post = 1.337, 
                                        tasks_ready = 1.337, 
                                        locations = 1.337, 
                                        languages = 1.337, 
                                        errors = 1.337, 
                                        tasks_fixed = 1.337, 
                                        screenshot = 1.337, ), 
                                    products = , 
                                    sellers = , ), 
                                locations = 1.337, 
                                languages = 1.337, 
                                errors = 1.337, 
                                reviews = , 
                                tasks_ready = 1.337, ), 
                            total_merchant = 1.337, 
                            on_page = dataforseo_client.models.appendix_on_page_limits_rates_data_info.AppendixOnPageLimitsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, 
                                summary = 1.337, 
                                resources = 1.337, 
                                pages = 1.337, 
                                non_indexable = 1.337, 
                                duplicate_tags = 1.337, 
                                links = 1.337, 
                                waterfall = 1.337, 
                                errors = 1.337, 
                                pages_by_resource = 1.337, 
                                duplicate_content = 1.337, 
                                raw_html = 1.337, 
                                instant_pages = 1.337, 
                                redirect_chains = 1.337, 
                                lighthouse = , 
                                keyword_density = 1.337, 
                                page_screenshot = 1.337, 
                                content_parsing = 1.337, 
                                content_parsing_live = 1.337, ), 
                            total_on_page = 1.337, 
                            business_data = dataforseo_client.models.appendix_business_data_limits_rates_data_info.AppendixBusinessDataLimitsRatesDataInfo(
                                locations = 1.337, 
                                languages = 1.337, 
                                errors = 1.337, 
                                yelp = dataforseo_client.models.appendix_business_data_day_limits_rates_data_info.AppendixBusinessDataDayLimitsRatesDataInfo(
                                    search = , ), 
                                social_media = dataforseo_client.models.appendix_social_media_business_data_limits_rates_data_info.AppendixSocialMediaBusinessDataLimitsRatesDataInfo(
                                    facebook = , 
                                    pinterest = , 
                                    reddit = , ), 
                                tripadvisor = dataforseo_client.models.appendix_business_data_day_limits_rates_data_info.AppendixBusinessDataDayLimitsRatesDataInfo(), 
                                trustpilot = , 
                                business_listings = dataforseo_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                                    categories_aggregation = , 
                                    categories = 1.337, 
                                    locations = 1.337, ), 
                                tasks_ready = 1.337, ), 
                            total_business_data = 1.337, 
                            backlinks = dataforseo_client.models.appendix_backlinks_limits_rates_data_info.AppendixBacklinksLimitsRatesDataInfo(
                                summary = , 
                                history = , 
                                content_duplicates = , 
                                domain_pages = , 
                                anchors = , 
                                referring_domains = , 
                                referring_networks = , 
                                bulk_ranks = , 
                                bulk_backlinks = , 
                                bulk_new_lost_backlinks = , 
                                bulk_new_lost_referring_domains = , 
                                bulk_referring_domains = , 
                                errors = 1.337, 
                                domain_pages_summary = , 
                                timeseries_summary = , 
                                timeseries_new_lost_summary = , 
                                competitors = , 
                                bulk_spam_score = , 
                                bulk_pages_summary = , ), 
                            total_backlinks = 1.337, 
                            app_data = dataforseo_client.models.appendix_app_data_limits_rates_data_info.AppendixAppDataLimitsRatesDataInfo(
                                app_info = , 
                                app_list = , 
                                app_reviews = , 
                                app_searches = , 
                                errors = 1.337, 
                                languages = 1.337, 
                                locations = 1.337, 
                                categories = 1.337, 
                                app_listings = dataforseo_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                                    categories = 1.337, 
                                    locations = 1.337, ), 
                                tasks_ready = 1.337, ), 
                            total_app_data = 1.337, 
                            content_analysis = dataforseo_client.models.appendix_content_analysis_limits_rates_data_info.AppendixContentAnalysisLimitsRatesDataInfo(
                                sentiment_analysis = , 
                                rating_distribution = , 
                                phrase_trends = , 
                                category_trends = , 
                                locations = 1.337, 
                                languages = 1.337, 
                                categories = 1.337, 
                                errors = 1.337, ), 
                            total_content_analysis = 1.337, 
                            content_generation = dataforseo_client.models.appendix_content_generation_limits_rates_data_info.AppendixContentGenerationLimitsRatesDataInfo(
                                generate = , 
                                generate_meta_tags = , 
                                generate_text = , 
                                paraphrase = , 
                                check_grammar = dataforseo_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                                    languages = 1.337, ), 
                                text_summary = dataforseo_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                                    languages = 1.337, ), 
                                generate_sub_topics = , ), 
                            total_content_generation = 1.337, 
                            total_reviews = 1.337, 
                            reviews = , 
                            total_social = 1.337, 
                            social = , 
                            total_traffic_analytics = 1.337, 
                            traffic_analytics = , ), 
                        minute = dataforseo_client.models.appendix_data_info.AppendixDataInfo(
                            total = 1.337, 
                            total_serp = 1.337, 
                            total_keywords_data = 1.337, 
                            total_appendix = 1.337, 
                            total_dataforseo_labs = 1.337, 
                            total_domain_analytics = 1.337, 
                            total_merchant = 1.337, 
                            total_on_page = 1.337, 
                            total_business_data = 1.337, 
                            total_backlinks = 1.337, 
                            total_app_data = 1.337, 
                            total_content_analysis = 1.337, 
                            total_content_generation = 1.337, 
                            total_reviews = 1.337, 
                            total_social = 1.337, 
                            total_traffic_analytics = 1.337, ), ), 
                    statistics = dataforseo_client.models.appendix_statistics_money_data.AppendixStatisticsMoneyData(), ),
                price = dataforseo_client.models.appendix_price_data.AppendixPriceData(
                    keywords_data = dataforseo_client.models.appendix_keywords_data_price_data.AppendixKeywordsDataPriceData(
                        tasks_ready = dataforseo_client.models.appendix_task_keywords_data_price_data_info.AppendixTaskKeywordsDataPriceDataInfo(
                            priority_low = [
                                dataforseo_client.models.appendix_priority_tasks_ready_keywords_data_price_data_info.AppendixPriorityTasksReadyKeywordsDataPriceDataInfo(
                                    cost_type = '', 
                                    cost = 1.337, )
                                ], 
                            priority_normal = [
                                dataforseo_client.models.appendix_priority_tasks_ready_keywords_data_price_data_info.AppendixPriorityTasksReadyKeywordsDataPriceDataInfo(
                                    cost_type = '', 
                                    cost = 1.337, )
                                ], 
                            priority_high = [
                                
                                ], ), 
                        ad_traffic_by_keywords = dataforseo_client.models.appendix_a_keywords_data_price_data_info.AppendixAKeywordsDataPriceDataInfo(
                            task_get = dataforseo_client.models.appendix_task_keywords_data_price_data_info.AppendixTaskKeywordsDataPriceDataInfo(), 
                            task_post = , ), 
                        audience_estimation = dataforseo_client.models.appendix_a_keywords_data_price_data_info.AppendixAKeywordsDataPriceDataInfo(), 
                        bing = dataforseo_client.models.appendix_bing_keywords_data_price_data.AppendixBingKeywordsDataPriceData(
                            keyword_performance = dataforseo_client.models.appendix_bing_keywords_data_price_data_info.AppendixBingKeywordsDataPriceDataInfo(
                                live = , ), 
                            keywords_for_keywords = dataforseo_client.models.appendix_bing_keywords_data_price_data_info.AppendixBingKeywordsDataPriceDataInfo(), 
                            keywords_for_site = , 
                            keyword_suggestions_for_url = , 
                            search_volume = , ), 
                        categories = , 
                        clickstream_data = dataforseo_client.models.appendix_clickstream_data_keywords_data_price_data.AppendixClickstreamDataKeywordsDataPriceData(
                            bulk_search_volume = , 
                            dataforseo_search_volume = , 
                            global_search_volume = , 
                            locations_and_languages = , ), 
                        errors = , 
                        google_ads = dataforseo_client.models.appendix_google_ads_keywords_data_price_data.AppendixGoogleAdsKeywordsDataPriceData(
                            status = , ), 
                        keyword_performance = , 
                        keywords_for_keywords = , 
                        keywords_for_site = , 
                        keyword_suggestions_for_url = , 
                        languages = , 
                        locations = , 
                        locations_and_languages = , 
                        search_volume = , 
                        dataforseo_trends = dataforseo_client.models.appendix_dataforseo_trends_keywords_data_price_data.AppendixDataforseoTrendsKeywordsDataPriceData(
                            demography = , 
                            explore = , 
                            merged_data = , 
                            subregion_interests = , ), 
                        explore = dataforseo_client.models.appendix_explore_keywords_data_price_data.AppendixExploreKeywordsDataPriceData(), ), 
                    merchant = dataforseo_client.models.appendix_merchant_price_data.AppendixMerchantPriceData(
                        google = dataforseo_client.models.appendix_google_merchant_price_data.AppendixGoogleMerchantPriceData(
                            product_info = dataforseo_client.models.appendix_price_data_info.AppendixPriceDataInfo(), 
                            product_spec = dataforseo_client.models.appendix_product_google_merchant_price_data_info.AppendixProductGoogleMerchantPriceDataInfo(), 
                            products = dataforseo_client.models.appendix_product_google_merchant_price_data_info.AppendixProductGoogleMerchantPriceDataInfo(), 
                            sellers = dataforseo_client.models.appendix_sellers_google_merchant_price_data.AppendixSellersGoogleMerchantPriceData(
                                ad_url = , ), ), 
                        amazon = dataforseo_client.models.appendix_amazon_merchant_price_data.AppendixAmazonMerchantPriceData(
                            asin = , ), 
                        reviews = , ), 
                    serp = dataforseo_client.models.appendix_serp_price_data.AppendixSerpPriceData(
                        tasks_fixed = , 
                        jobs = , 
                        screenshot = , ), 
                    appendix = dataforseo_client.models.appendix_appendix_price_data.AppendixAppendixPriceData(
                        user_data = , ), 
                    app_data = dataforseo_client.models.appendix_app_data_price_data.AppendixAppDataPriceData(
                        app_info = , 
                        app_listings = dataforseo_client.models.appendix_app_listings_app_data_price_data.AppendixAppListingsAppDataPriceData(
                            categories_aggregation = , 
                            search = , ), 
                        app_list = , 
                        app_reviews = dataforseo_client.models.appendix_price_data_info.AppendixPriceDataInfo(), 
                        app_searches = , ), 
                    backlinks = dataforseo_client.models.appendix_backlinks_price_data.AppendixBacklinksPriceData(
                        anchors = , 
                        bulk_backlinks = , 
                        bulk_new_lost_backlinks = , 
                        bulk_new_lost_referring_domains = , 
                        bulk_pages_summary = , 
                        bulk_ranks = , 
                        bulk_referring_domains = , 
                        bulk_spam_score = , 
                        competitors = , 
                        content_duplicates = , 
                        domain_intersection = , 
                        domain_pages = , 
                        domain_pages_summary = , 
                        history = , 
                        page_intersection = , 
                        referring_domains = , 
                        referring_networks = , 
                        summary = , 
                        timeseries_new_lost_summary = , 
                        timeseries_summary = , ), 
                    business_data = dataforseo_client.models.appendix_business_data_price_data.AppendixBusinessDataPriceData(
                        business_listings = dataforseo_client.models.appendix_business_listings_business_data_price_data.AppendixBusinessListingsBusinessDataPriceData(), 
                        social_media = dataforseo_client.models.appendix_social_media_business_data_price_data.AppendixSocialMediaBusinessDataPriceData(
                            facebook = , 
                            pinterest = , 
                            reddit = , ), 
                        tripadvisor = dataforseo_client.models.appendix_tr_business_data_price_data_info.AppendixTrBusinessDataPriceDataInfo(), 
                        trustpilot = dataforseo_client.models.appendix_tr_business_data_price_data_info.AppendixTrBusinessDataPriceDataInfo(), 
                        yelp = , ), 
                    content_analysis = dataforseo_client.models.appendix_content_analysis_price_data.AppendixContentAnalysisPriceData(
                        category_trends = , 
                        phrase_trends = , 
                        rating_distribution = , 
                        sentiment_analysis = , ), 
                    content_generation = dataforseo_client.models.appendix_content_generation_price_data.AppendixContentGenerationPriceData(
                        check_grammar = dataforseo_client.models.appendix_content_generation_price_data_info.AppendixContentGenerationPriceDataInfo(), 
                        generate = , 
                        generate_meta_tags = , 
                        generate_sub_topics = , 
                        generate_text = , 
                        paraphrase = , 
                        text_summary = dataforseo_client.models.appendix_content_generation_price_data_info.AppendixContentGenerationPriceDataInfo(), ), 
                    dataforseo_labs = dataforseo_client.models.appendix_dataforseo_labs_price_data.AppendixDataforseoLabsPriceData(
                        app_competitors = , 
                        app_intersection = , 
                        bulk_app_metrics = , 
                        bulk_keyword_difficulty = , 
                        bulk_traffic_estimation = , 
                        categories_for_domain = , 
                        categories_for_keywords = , 
                        competitors_domain = , 
                        domain_metrics_by_categories = , 
                        domain_rank_overview = , 
                        domain_whois_overview = , 
                        historical_bulk_traffic_estimation = , 
                        historical_keyword_data = , 
                        historical_rank_overview = , 
                        historical_serps = , 
                        keyword_ideas = , 
                        keyword_overview = , 
                        keywords_for_app = , 
                        keywords_for_categories = , 
                        keyword_suggestions = , 
                        product_competitors = , 
                        product_keyword_intersections = , 
                        product_rank_overview = , 
                        ranked_keywords = , 
                        related_keywords = , 
                        relevant_pages = , 
                        search_intent = , 
                        serp_competitors = , 
                        subdomains = , 
                        top_searches = , ), 
                    domain_analytics = dataforseo_client.models.appendix_domain_analytics_price_data.AppendixDomainAnalyticsPriceData(
                        whois = dataforseo_client.models.appendix_whois_domain_analytics_price_data.AppendixWhoisDomainAnalyticsPriceData(
                            overview = , ), 
                        technologies = dataforseo_client.models.appendix_technologies_domain_analytics_price_data.AppendixTechnologiesDomainAnalyticsPriceData(
                            aggregation_technologies = , 
                            domains_by_html_terms = , 
                            domains_by_technology = , 
                            domain_technologies = , 
                            technologies_summary = , 
                            technology_stats = , ), ), 
                    on_page = dataforseo_client.models.appendix_on_page_price_data.AppendixOnPagePriceData(
                        lighthouse = dataforseo_client.models.appendix_google_business_data_price_data_info.AppendixGoogleBusinessDataPriceDataInfo(), 
                        content_parsing = , 
                        content_parsing_live = , 
                        duplicate_content = , 
                        duplicate_tags = , 
                        instant_pages = , 
                        keyword_density = , 
                        links = , 
                        non_indexable = , 
                        pages = , 
                        pages_by_resource = , 
                        page_screenshot = , 
                        raw_html = , 
                        redirect_chains = , 
                        resources = , 
                        waterfall = , ), )
            )
        else:
            return AppendixUserDataResultInfo(
        )
        """

    def testAppendixUserDataResultInfo(self):
        """Test AppendixUserDataResultInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
