# coding: utf-8

"""
    DataForSEO API documentation

    DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dataforseo_client.api.backlinks_api import BacklinksApi


class TestBacklinksApi(unittest.TestCase):
    """BacklinksApi unit test stubs"""

    def setUp(self) -> None:
        self.api = BacklinksApi()

    def tearDown(self) -> None:
        pass

    def test_anchors_live(self) -> None:
        """Test case for anchors_live

        """
        pass

    def test_backlinks_available_filters(self) -> None:
        """Test case for backlinks_available_filters

        """
        pass

    def test_backlinks_errors(self) -> None:
        """Test case for backlinks_errors

        """
        pass

    def test_backlinks_id_list(self) -> None:
        """Test case for backlinks_id_list

        """
        pass

    def test_backlinks_live(self) -> None:
        """Test case for backlinks_live

        """
        pass

    def test_bulk_backlinks_live(self) -> None:
        """Test case for bulk_backlinks_live

        """
        pass

    def test_bulk_new_lost_backlinks_live(self) -> None:
        """Test case for bulk_new_lost_backlinks_live

        """
        pass

    def test_bulk_new_lost_referring_domains_live(self) -> None:
        """Test case for bulk_new_lost_referring_domains_live

        """
        pass

    def test_bulk_pages_summary_live(self) -> None:
        """Test case for bulk_pages_summary_live

        """
        pass

    def test_bulk_ranks_live(self) -> None:
        """Test case for bulk_ranks_live

        """
        pass

    def test_bulk_referring_domains_live(self) -> None:
        """Test case for bulk_referring_domains_live

        """
        pass

    def test_bulk_spam_score_live(self) -> None:
        """Test case for bulk_spam_score_live

        """
        pass

    def test_competitors_live(self) -> None:
        """Test case for competitors_live

        """
        pass

    def test_domain_intersection_live(self) -> None:
        """Test case for domain_intersection_live

        """
        pass

    def test_domain_pages_live(self) -> None:
        """Test case for domain_pages_live

        """
        pass

    def test_domain_pages_summary_live(self) -> None:
        """Test case for domain_pages_summary_live

        """
        pass

    def test_history_live(self) -> None:
        """Test case for history_live

        """
        pass

    def test_index(self) -> None:
        """Test case for index

        """
        pass

    def test_page_intersection_live(self) -> None:
        """Test case for page_intersection_live

        """
        pass

    def test_referring_domains_live(self) -> None:
        """Test case for referring_domains_live

        """
        pass

    def test_referring_networks_live(self) -> None:
        """Test case for referring_networks_live

        """
        pass

    def test_summary_live(self) -> None:
        """Test case for summary_live

        """
        pass

    def test_timeseries_new_lost_summary_live(self) -> None:
        """Test case for timeseries_new_lost_summary_live

        """
        pass

    def test_timeseries_summary_live(self) -> None:
        """Test case for timeseries_summary_live

        """
        pass


if __name__ == '__main__':
    unittest.main()
