# coding: utf-8

"""
    DataForSEO API documentation

    DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dataforseo_client.api.on_page_api import OnPageApi


class TestOnPageApi(unittest.TestCase):
    """OnPageApi unit test stubs"""

    def setUp(self) -> None:
        self.api = OnPageApi()

    def tearDown(self) -> None:
        pass

    def test_content_parsing(self) -> None:
        """Test case for content_parsing

        """
        pass

    def test_content_parsing_live(self) -> None:
        """Test case for content_parsing_live

        """
        pass

    def test_duplicate_content(self) -> None:
        """Test case for duplicate_content

        """
        pass

    def test_duplicate_tags(self) -> None:
        """Test case for duplicate_tags

        """
        pass

    def test_force_stop(self) -> None:
        """Test case for force_stop

        """
        pass

    def test_instant_pages(self) -> None:
        """Test case for instant_pages

        """
        pass

    def test_keyword_density(self) -> None:
        """Test case for keyword_density

        """
        pass

    def test_lighthouse_audits(self) -> None:
        """Test case for lighthouse_audits

        """
        pass

    def test_lighthouse_live_json(self) -> None:
        """Test case for lighthouse_live_json

        """
        pass

    def test_lighthouse_task_get_json(self) -> None:
        """Test case for lighthouse_task_get_json

        """
        pass

    def test_lighthouse_task_post(self) -> None:
        """Test case for lighthouse_task_post

        """
        pass

    def test_lighthouse_tasks_ready(self) -> None:
        """Test case for lighthouse_tasks_ready

        """
        pass

    def test_lighthouse_versions(self) -> None:
        """Test case for lighthouse_versions

        """
        pass

    def test_links(self) -> None:
        """Test case for links

        """
        pass

    def test_microdata(self) -> None:
        """Test case for microdata

        """
        pass

    def test_non_indexable(self) -> None:
        """Test case for non_indexable

        """
        pass

    def test_on_page_available_filters(self) -> None:
        """Test case for on_page_available_filters

        """
        pass

    def test_on_page_errors(self) -> None:
        """Test case for on_page_errors

        """
        pass

    def test_on_page_id_list(self) -> None:
        """Test case for on_page_id_list

        """
        pass

    def test_on_page_lighthouse_languages(self) -> None:
        """Test case for on_page_lighthouse_languages

        """
        pass

    def test_on_page_tasks_ready(self) -> None:
        """Test case for on_page_tasks_ready

        """
        pass

    def test_page_screenshot(self) -> None:
        """Test case for page_screenshot

        """
        pass

    def test_pages(self) -> None:
        """Test case for pages

        """
        pass

    def test_pages_by_resource(self) -> None:
        """Test case for pages_by_resource

        """
        pass

    def test_raw_html(self) -> None:
        """Test case for raw_html

        """
        pass

    def test_redirect_chains(self) -> None:
        """Test case for redirect_chains

        """
        pass

    def test_resources(self) -> None:
        """Test case for resources

        """
        pass

    def test_summary(self) -> None:
        """Test case for summary

        """
        pass

    def test_task_post(self) -> None:
        """Test case for task_post

        """
        pass

    def test_waterfall(self) -> None:
        """Test case for waterfall

        """
        pass


if __name__ == '__main__':
    unittest.main()
