# coding: utf-8

"""
    DataForSEO API documentation

    DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dataforseo_client.api.domain_analytics_api import DomainAnalyticsApi


class TestDomainAnalyticsApi(unittest.TestCase):
    """DomainAnalyticsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DomainAnalyticsApi()

    def tearDown(self) -> None:
        pass

    def test_domain_analytics_errors(self) -> None:
        """Test case for domain_analytics_errors

        """
        pass

    def test_domain_analytics_id_list(self) -> None:
        """Test case for domain_analytics_id_list

        """
        pass

    def test_domain_analytics_technologies_languages(self) -> None:
        """Test case for domain_analytics_technologies_languages

        """
        pass

    def test_domain_analytics_technologies_locations(self) -> None:
        """Test case for domain_analytics_technologies_locations

        """
        pass

    def test_technologies_aggregation_technologies_live(self) -> None:
        """Test case for technologies_aggregation_technologies_live

        """
        pass

    def test_technologies_available_filters(self) -> None:
        """Test case for technologies_available_filters

        """
        pass

    def test_technologies_domain_technologies_live(self) -> None:
        """Test case for technologies_domain_technologies_live

        """
        pass

    def test_technologies_domains_by_html_terms_live(self) -> None:
        """Test case for technologies_domains_by_html_terms_live

        """
        pass

    def test_technologies_domains_by_technology_live(self) -> None:
        """Test case for technologies_domains_by_technology_live

        """
        pass

    def test_technologies_technologies(self) -> None:
        """Test case for technologies_technologies

        """
        pass

    def test_technologies_technologies_summary_live(self) -> None:
        """Test case for technologies_technologies_summary_live

        """
        pass

    def test_technologies_technology_stats_live(self) -> None:
        """Test case for technologies_technology_stats_live

        """
        pass

    def test_whois_available_filters(self) -> None:
        """Test case for whois_available_filters

        """
        pass

    def test_whois_overview_live(self) -> None:
        """Test case for whois_overview_live

        """
        pass


if __name__ == '__main__':
    unittest.main()
