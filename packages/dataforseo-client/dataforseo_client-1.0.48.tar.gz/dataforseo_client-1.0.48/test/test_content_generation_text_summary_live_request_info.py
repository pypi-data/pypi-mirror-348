# coding: utf-8

"""
    DataForSEO API documentation

    DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dataforseo_client.models.content_generation_text_summary_live_request_info import ContentGenerationTextSummaryLiveRequestInfo

class TestContentGenerationTextSummaryLiveRequestInfo(unittest.TestCase):
    """ContentGenerationTextSummaryLiveRequestInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentGenerationTextSummaryLiveRequestInfo:
        """Test ContentGenerationTextSummaryLiveRequestInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentGenerationTextSummaryLiveRequestInfo`
        """
        model = ContentGenerationTextSummaryLiveRequestInfo()
        if include_optional:
            return ContentGenerationTextSummaryLiveRequestInfo(
                text = 'Removing [RequireHttps] does nothing but break the https redirection, and doesn't enforce an https url on my route. I've got one method which i want to expose over http and a different one over https. If i accidentally enter http in my url for the https-only method, it should redirect. It currently works as is, the problem is that there is an undocument (seemingly unrelated) setting I have to add to get it all working. And that is the SslPort thing',
                language_name = 'English (United States)',
                language_code = '',
                internal_list_limit = 56,
                tag = ''
            )
        else:
            return ContentGenerationTextSummaryLiveRequestInfo(
        )
        """

    def testContentGenerationTextSummaryLiveRequestInfo(self):
        """Test ContentGenerationTextSummaryLiveRequestInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
