# coding: utf-8

"""
    DataForSEO API documentation

    DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dataforseo_client.models.appendix_rates_data import AppendixRatesData

class TestAppendixRatesData(unittest.TestCase):
    """AppendixRatesData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppendixRatesData:
        """Test AppendixRatesData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppendixRatesData`
        """
        model = AppendixRatesData()
        if include_optional:
            return AppendixRatesData(
                limits = dataforseo_client.models.appendix_limits_rates_data.AppendixLimitsRatesData(
                    day = dataforseo_client.models.appendix_day_limits_rates_data.AppendixDayLimitsRatesData(
                        serp = dataforseo_client.models.appendix_serps_rates_data_info.AppendixSerpsRatesDataInfo(
                            task_post = 1.337, 
                            task_get = dataforseo_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                                regular = 1.337, 
                                advanced = 1.337, 
                                html = 1.337, ), 
                            tasks_ready = 1.337, 
                            locations = 1.337, 
                            languages = 1.337, 
                            live = dataforseo_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                                regular = 1.337, 
                                advanced = 1.337, 
                                html = 1.337, ), 
                            errors = 1.337, 
                            tasks_fixed = 1.337, 
                            jobs = dataforseo_client.models.appendix_jobs_serp_limits_rates_data_info.AppendixJobsSerpLimitsRatesDataInfo(
                                task_post = 1.337, ), 
                            screenshot = 1.337, ), 
                        total = 1.337, 
                        total_serp = 1.337, 
                        keywords_data = dataforseo_client.models.appendix_keywords_datas_rates_data_info.AppendixKeywordsDatasRatesDataInfo(
                            keywords_for_keywords = dataforseo_client.models.appendix_info.AppendixInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, ), 
                            keywords_for_site = dataforseo_client.models.appendix_info.AppendixInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, ), 
                            search_volume = , 
                            ad_traffic_by_keywords = , 
                            languages = 1.337, 
                            locations = 1.337, 
                            tasks_ready = 1.337, 
                            explore = , 
                            categories = 1.337, 
                            errors = 1.337, 
                            bing = dataforseo_client.models.appendix_bing_keywords_data_limits_rates_data_info.AppendixBingKeywordsDataLimitsRatesDataInfo(
                                keyword_performance = , 
                                audience_estimation = , 
                                keyword_suggestions_for_url = , ), 
                            keyword_performance = , 
                            locations_and_languages = 1.337, 
                            google_ads = dataforseo_client.models.appendix_google_ads_keywords_data_limits_rates_data_info.AppendixGoogleAdsKeywordsDataLimitsRatesDataInfo(
                                status = 1.337, ), 
                            dataforseo_trends = dataforseo_client.models.appendix_dataforseo_trends_keywords_data_limits_rates_data_info.AppendixDataforseoTrendsKeywordsDataLimitsRatesDataInfo(
                                subregion_interests = , 
                                demography = , 
                                merged_data = , ), 
                            clickstream_data = dataforseo_client.models.appendix_clickstream_data_keywords_data_limits_rates_data_info.AppendixClickstreamDataKeywordsDataLimitsRatesDataInfo(
                                dataforseo_search_volume = , 
                                locations_and_languages = 1.337, 
                                bulk_search_volume = , 
                                global_search_volume = , ), 
                            audience_estimation = , 
                            keyword_suggestions_for_url = , ), 
                        total_keywords_data = 1.337, 
                        appendix = dataforseo_client.models.appendix_appendix_days_rates_data_info.AppendixAppendixDaysRatesDataInfo(
                            user_data = 1.337, 
                            errors = 1.337, ), 
                        total_appendix = 1.337, 
                        dataforseo_labs = dataforseo_client.models.appendix_dataforseo_labs_limits_rates_data_info.AppendixDataforseoLabsLimitsRatesDataInfo(
                            locations_and_languages = 1.337, 
                            categories = 1.337, 
                            errors = 1.337, 
                            product_competitors = , 
                            product_keyword_intersections = , 
                            product_rank_overview = , 
                            ranked_keywords = , 
                            serp_competitors = , 
                            subdomains = , 
                            relevant_pages = , 
                            competitors_domain = , 
                            related_keywords = , 
                            domain_rank_overview = , 
                            domain_intersection = , 
                            page_intersection = , 
                            bulk_traffic_estimation = , 
                            bulk_keyword_difficulty = , 
                            keyword_suggestions = , 
                            keyword_ideas = , 
                            categories_for_domain = , 
                            domain_metrics_by_categories = , 
                            top_searches = , 
                            domain_whois_overview = , 
                            historical_rank_overview = , 
                            keywords_for_categories = , 
                            historical_serps = , 
                            app_competitors = , 
                            keywords_for_app = , 
                            app_intersection = , 
                            bulk_app_metrics = , 
                            search_intent = , 
                            historical_bulk_traffic_estimation = , 
                            categories_for_keywords = , 
                            keyword_overview = , 
                            historical_keyword_data = , ), 
                        total_dataforseo_labs = 1.337, 
                        domain_analytics = dataforseo_client.models.appendix_domain_analytics_limits_rates_data_info.AppendixDomainAnalyticsLimitsRatesDataInfo(
                            tasks_ready = 1.337, 
                            errors = 1.337, 
                            whois = dataforseo_client.models.appendix_whois_domain_analytics_limits_rates_data_info.AppendixWhoisDomainAnalyticsLimitsRatesDataInfo(
                                overview = , ), 
                            technologies = dataforseo_client.models.appendix_technologies_domain_analytics_limits_rates_data_info.AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo(
                                domain_technologies = , 
                                domains_by_technology = , 
                                languages = 1.337, 
                                locations = 1.337, 
                                aggregation_technologies = , 
                                technologies_summary = , 
                                domains_by_html_terms = , 
                                technology_stats = , ), ), 
                        total_domain_analytics = 1.337, 
                        merchant = dataforseo_client.models.appendix_merchant_limits_rates_data_info.AppendixMerchantLimitsRatesDataInfo(
                            google = dataforseo_client.models.appendix_merchant_google_info.AppendixMerchantGoogleInfo(
                                products = dataforseo_client.models.appendix_serps_rates_data_info.AppendixSerpsRatesDataInfo(
                                    task_post = 1.337, 
                                    tasks_ready = 1.337, 
                                    locations = 1.337, 
                                    languages = 1.337, 
                                    errors = 1.337, 
                                    tasks_fixed = 1.337, 
                                    screenshot = 1.337, ), 
                                sellers = dataforseo_client.models.appendix_sellers_google_merchant_limits_rates_data_info.AppendixSellersGoogleMerchantLimitsRatesDataInfo(
                                    task_post = 1.337, 
                                    tasks_ready = 1.337, 
                                    ad_url = 1.337, ), 
                                product_spec = , 
                                product_info = , ), 
                            amazon = dataforseo_client.models.appendix_merchant_amazon_info.AppendixMerchantAmazonInfo(
                                asin = , ), 
                            locations = 1.337, 
                            languages = 1.337, 
                            errors = 1.337, 
                            reviews = , 
                            tasks_ready = 1.337, ), 
                        total_merchant = 1.337, 
                        on_page = dataforseo_client.models.appendix_on_page_limits_rates_data_info.AppendixOnPageLimitsRatesDataInfo(
                            task_post = 1.337, 
                            tasks_ready = 1.337, 
                            summary = 1.337, 
                            resources = 1.337, 
                            pages = 1.337, 
                            non_indexable = 1.337, 
                            duplicate_tags = 1.337, 
                            links = 1.337, 
                            waterfall = 1.337, 
                            errors = 1.337, 
                            pages_by_resource = 1.337, 
                            duplicate_content = 1.337, 
                            raw_html = 1.337, 
                            instant_pages = 1.337, 
                            redirect_chains = 1.337, 
                            lighthouse = , 
                            keyword_density = 1.337, 
                            page_screenshot = 1.337, 
                            content_parsing = 1.337, 
                            content_parsing_live = 1.337, ), 
                        total_on_page = 1.337, 
                        business_data = dataforseo_client.models.appendix_business_data_limits_rates_data_info.AppendixBusinessDataLimitsRatesDataInfo(
                            locations = 1.337, 
                            languages = 1.337, 
                            errors = 1.337, 
                            yelp = dataforseo_client.models.appendix_business_data_day_limits_rates_data_info.AppendixBusinessDataDayLimitsRatesDataInfo(
                                search = , ), 
                            social_media = dataforseo_client.models.appendix_social_media_business_data_limits_rates_data_info.AppendixSocialMediaBusinessDataLimitsRatesDataInfo(
                                facebook = , 
                                pinterest = , 
                                reddit = , ), 
                            tripadvisor = dataforseo_client.models.appendix_business_data_day_limits_rates_data_info.AppendixBusinessDataDayLimitsRatesDataInfo(), 
                            trustpilot = , 
                            business_listings = dataforseo_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                                categories_aggregation = , 
                                categories = 1.337, 
                                locations = 1.337, ), 
                            tasks_ready = 1.337, ), 
                        total_business_data = 1.337, 
                        backlinks = dataforseo_client.models.appendix_backlinks_limits_rates_data_info.AppendixBacklinksLimitsRatesDataInfo(
                            summary = , 
                            history = , 
                            content_duplicates = , 
                            domain_pages = , 
                            anchors = , 
                            referring_domains = , 
                            referring_networks = , 
                            bulk_ranks = , 
                            bulk_backlinks = , 
                            bulk_new_lost_backlinks = , 
                            bulk_new_lost_referring_domains = , 
                            bulk_referring_domains = , 
                            errors = 1.337, 
                            domain_pages_summary = , 
                            timeseries_summary = , 
                            timeseries_new_lost_summary = , 
                            competitors = , 
                            bulk_spam_score = , 
                            bulk_pages_summary = , ), 
                        total_backlinks = 1.337, 
                        app_data = dataforseo_client.models.appendix_app_data_limits_rates_data_info.AppendixAppDataLimitsRatesDataInfo(
                            app_info = , 
                            app_list = , 
                            app_reviews = , 
                            app_searches = , 
                            errors = 1.337, 
                            languages = 1.337, 
                            locations = 1.337, 
                            categories = 1.337, 
                            app_listings = dataforseo_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                                categories = 1.337, 
                                locations = 1.337, ), 
                            tasks_ready = 1.337, ), 
                        total_app_data = 1.337, 
                        content_analysis = dataforseo_client.models.appendix_content_analysis_limits_rates_data_info.AppendixContentAnalysisLimitsRatesDataInfo(
                            sentiment_analysis = , 
                            rating_distribution = , 
                            phrase_trends = , 
                            category_trends = , 
                            locations = 1.337, 
                            languages = 1.337, 
                            categories = 1.337, 
                            errors = 1.337, ), 
                        total_content_analysis = 1.337, 
                        content_generation = dataforseo_client.models.appendix_content_generation_limits_rates_data_info.AppendixContentGenerationLimitsRatesDataInfo(
                            generate = , 
                            generate_meta_tags = , 
                            generate_text = , 
                            paraphrase = , 
                            check_grammar = dataforseo_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                                languages = 1.337, ), 
                            text_summary = dataforseo_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                                languages = 1.337, ), 
                            generate_sub_topics = , ), 
                        total_content_generation = 1.337, 
                        total_reviews = 1.337, 
                        total_social = 1.337, 
                        total_traffic_analytics = 1.337, ), 
                    minute = dataforseo_client.models.appendix_data_info.AppendixDataInfo(
                        total = 1.337, 
                        total_serp = 1.337, 
                        total_keywords_data = 1.337, 
                        total_appendix = 1.337, 
                        total_dataforseo_labs = 1.337, 
                        total_domain_analytics = 1.337, 
                        total_merchant = 1.337, 
                        total_on_page = 1.337, 
                        total_business_data = 1.337, 
                        total_backlinks = 1.337, 
                        total_app_data = 1.337, 
                        total_content_analysis = 1.337, 
                        total_content_generation = 1.337, 
                        total_reviews = 1.337, 
                        total_social = 1.337, 
                        social = , 
                        total_traffic_analytics = 1.337, 
                        traffic_analytics = , ), ),
                statistics = dataforseo_client.models.appendix_statistics_rates_data.AppendixStatisticsRatesData(
                    day = dataforseo_client.models.appendix_day_statistics_rates_data.AppendixDayStatisticsRatesData(
                        serp = dataforseo_client.models.appendix_serp_day_statistics_rates_data.AppendixSerpDayStatisticsRatesData(
                            task_post = 1.337, 
                            task_get = dataforseo_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                                regular = 1.337, 
                                advanced = 1.337, 
                                html = 1.337, ), 
                            tasks_ready = 1.337, 
                            locations = 1.337, 
                            languages = 1.337, 
                            live = dataforseo_client.models.appendix_function_type_info.AppendixFunctionTypeInfo(
                                regular = 1.337, 
                                advanced = 1.337, 
                                html = 1.337, ), 
                            errors = 1.337, 
                            tasks_fixed = 1.337, 
                            jobs = dataforseo_client.models.appendix_jobs_serp_limits_rates_data_info.AppendixJobsSerpLimitsRatesDataInfo(
                                task_post = 1.337, ), 
                            screenshot = 1.337, 
                            ai_summary = 1.337, 
                            id_list = 1.337, ), 
                        total = 1.337, 
                        total_serp = 1.337, 
                        keywords_data = dataforseo_client.models.appendix_keywords_data_day_statistics_rates_data.AppendixKeywordsDataDayStatisticsRatesData(
                            keywords_for_keywords = dataforseo_client.models.appendix_info.AppendixInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, ), 
                            keywords_for_site = dataforseo_client.models.appendix_info.AppendixInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, ), 
                            search_volume = , 
                            ad_traffic_by_keywords = , 
                            languages = 1.337, 
                            locations = 1.337, 
                            tasks_ready = 1.337, 
                            explore = , 
                            categories = 1.337, 
                            errors = 1.337, 
                            bing = dataforseo_client.models.appendix_bing_keywords_data_day_statistics_data_info.AppendixBingKeywordsDataDayStatisticsDataInfo(
                                keyword_performance = , 
                                audience_estimation = , 
                                keyword_suggestions_for_url = , 
                                search_volume_history = , ), 
                            keyword_performance = , 
                            locations_and_languages = 1.337, 
                            google_ads = dataforseo_client.models.appendix_google_ads_keywords_data_limits_rates_data_info.AppendixGoogleAdsKeywordsDataLimitsRatesDataInfo(
                                status = 1.337, ), 
                            dataforseo_trends = dataforseo_client.models.appendix_dataforseo_trends_keywords_data_limits_rates_data_info.AppendixDataforseoTrendsKeywordsDataLimitsRatesDataInfo(
                                subregion_interests = , 
                                demography = , 
                                merged_data = , ), 
                            clickstream_data = dataforseo_client.models.appendix_clickstream_data_keywords_data_limits_rates_data_info.AppendixClickstreamDataKeywordsDataLimitsRatesDataInfo(
                                dataforseo_search_volume = , 
                                locations_and_languages = 1.337, 
                                bulk_search_volume = , 
                                global_search_volume = , ), 
                            audience_estimation = , 
                            keyword_suggestions_for_url = , 
                            google = dataforseo_client.models.appendix_bing_keywords_data_limits_rates_data_info.AppendixBingKeywordsDataLimitsRatesDataInfo(), 
                            industries = 1.337, 
                            id_list = 1.337, 
                            search_volume_history = , 
                            job_functions = 1.337, ), 
                        total_keywords_data = 1.337, 
                        appendix = dataforseo_client.models.appendix_appendix_days_rates_data_info.AppendixAppendixDaysRatesDataInfo(
                            user_data = 1.337, 
                            errors = 1.337, ), 
                        total_appendix = 1.337, 
                        dataforseo_labs = dataforseo_client.models.appendix_dataforseo_labs_day_statistics_rates_data.AppendixDataforseoLabsDayStatisticsRatesData(
                            locations_and_languages = 1.337, 
                            categories = 1.337, 
                            errors = 1.337, 
                            product_competitors = , 
                            product_keyword_intersections = , 
                            product_rank_overview = , 
                            ranked_keywords = , 
                            serp_competitors = , 
                            subdomains = , 
                            relevant_pages = , 
                            competitors_domain = , 
                            related_keywords = , 
                            domain_rank_overview = , 
                            domain_intersection = , 
                            page_intersection = , 
                            bulk_traffic_estimation = , 
                            bulk_keyword_difficulty = , 
                            keyword_suggestions = , 
                            keyword_ideas = , 
                            categories_for_domain = , 
                            domain_metrics_by_categories = , 
                            top_searches = , 
                            domain_whois_overview = , 
                            historical_rank_overview = , 
                            keywords_for_categories = , 
                            historical_serps = , 
                            app_competitors = , 
                            keywords_for_app = , 
                            app_intersection = , 
                            bulk_app_metrics = , 
                            search_intent = , 
                            historical_bulk_traffic_estimation = , 
                            categories_for_keywords = , 
                            keyword_overview = , 
                            historical_keyword_data = , 
                            top_google_searches = , 
                            languages = 1.337, 
                            amazon = dataforseo_client.models.appendix_dataforseo_labs_limits_rates_data_info.AppendixDataforseoLabsLimitsRatesDataInfo(
                                locations_and_languages = 1.337, 
                                categories = 1.337, 
                                errors = 1.337, ), 
                            historical_search_volume = , 
                            status = 1.337, 
                            id_list = 1.337, 
                            available_history = 1.337, 
                            available_filters = 1.337, ), 
                        total_dataforseo_labs = 1.337, 
                        domain_analytics = dataforseo_client.models.appendix_domain_analytics_day_statistics_rates_data.AppendixDomainAnalyticsDayStatisticsRatesData(
                            tasks_ready = 1.337, 
                            errors = 1.337, 
                            whois = dataforseo_client.models.appendix_whois_domain_analytics_limits_rates_data_info.AppendixWhoisDomainAnalyticsLimitsRatesDataInfo(
                                overview = , ), 
                            technologies = dataforseo_client.models.appendix_technologies_domain_analytics_limits_rates_data_info.AppendixTechnologiesDomainAnalyticsLimitsRatesDataInfo(
                                domain_technologies = , 
                                domains_by_technology = , 
                                languages = 1.337, 
                                locations = 1.337, 
                                aggregation_technologies = , 
                                technologies_summary = , 
                                domains_by_html_terms = , 
                                technology_stats = , ), 
                            available_filters = 1.337, 
                            id_list = 1.337, ), 
                        total_domain_analytics = 1.337, 
                        merchant = dataforseo_client.models.appendix_merchant_day_statistics_rates_data.AppendixMerchantDayStatisticsRatesData(
                            locations = 1.337, 
                            languages = 1.337, 
                            errors = 1.337, 
                            reviews = dataforseo_client.models.appendix_serps_rates_data_info.AppendixSerpsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, 
                                locations = 1.337, 
                                languages = 1.337, 
                                errors = 1.337, 
                                tasks_fixed = 1.337, 
                                screenshot = 1.337, ), 
                            tasks_ready = 1.337, 
                            id_list = 1.337, ), 
                        total_merchant = 1.337, 
                        on_page = dataforseo_client.models.appendix_on_page_day_statistics_rates_data.AppendixOnPageDayStatisticsRatesData(
                            task_post = 1.337, 
                            tasks_ready = 1.337, 
                            summary = 1.337, 
                            resources = 1.337, 
                            pages = 1.337, 
                            non_indexable = 1.337, 
                            duplicate_tags = 1.337, 
                            links = 1.337, 
                            waterfall = 1.337, 
                            errors = 1.337, 
                            pages_by_resource = 1.337, 
                            duplicate_content = 1.337, 
                            raw_html = 1.337, 
                            instant_pages = 1.337, 
                            redirect_chains = 1.337, 
                            lighthouse = dataforseo_client.models.appendix_lighthouse_on_page_day_statistics_rates_data.AppendixLighthouseOnPageDayStatisticsRatesData(
                                task_post = 1.337, 
                                tasks_ready = 1.337, 
                                languages = 1.337, 
                                audits = 1.337, 
                                versions = 1.337, ), 
                            keyword_density = 1.337, 
                            page_screenshot = 1.337, 
                            content_parsing = 1.337, 
                            content_parsing_live = 1.337, 
                            microdata = 1.337, 
                            available_filters = 1.337, 
                            id_list = 1.337, 
                            force_stop = 1.337, ), 
                        total_on_page = 1.337, 
                        business_data = dataforseo_client.models.appendix_business_data_day_statistics_rates_data.AppendixBusinessDataDayStatisticsRatesData(
                            locations = 1.337, 
                            languages = 1.337, 
                            errors = 1.337, 
                            yelp = dataforseo_client.models.appendix_business_data_day_limits_rates_data_info.AppendixBusinessDataDayLimitsRatesDataInfo(
                                search = , ), 
                            social_media = dataforseo_client.models.appendix_social_media_business_data_limits_rates_data_info.AppendixSocialMediaBusinessDataLimitsRatesDataInfo(
                                facebook = , 
                                pinterest = , 
                                reddit = , ), 
                            tripadvisor = dataforseo_client.models.appendix_business_data_day_limits_rates_data_info.AppendixBusinessDataDayLimitsRatesDataInfo(), 
                            trustpilot = , 
                            business_listings = dataforseo_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                                categories_aggregation = , 
                                categories = 1.337, 
                                locations = 1.337, ), 
                            tasks_ready = 1.337, 
                            available_filters = 1.337, 
                            id_list = 1.337, ), 
                        total_business_data = 1.337, 
                        backlinks = dataforseo_client.models.appendix_backlinks_day_statistics_rates_data.AppendixBacklinksDayStatisticsRatesData(
                            summary = , 
                            history = , 
                            content_duplicates = , 
                            domain_pages = , 
                            anchors = , 
                            referring_domains = , 
                            referring_networks = , 
                            bulk_ranks = , 
                            bulk_backlinks = , 
                            bulk_new_lost_backlinks = , 
                            bulk_new_lost_referring_domains = , 
                            bulk_referring_domains = , 
                            errors = 1.337, 
                            domain_pages_summary = , 
                            timeseries_summary = , 
                            timeseries_new_lost_summary = , 
                            competitors = , 
                            bulk_spam_score = , 
                            bulk_pages_summary = , 
                            pages_summary_with_page_info = , 
                            id_list = 1.337, 
                            available_filters = 1.337, 
                            historical_new_lost_summary = , 
                            index = 1.337, ), 
                        total_backlinks = 1.337, 
                        app_data = dataforseo_client.models.appendix_app_data_day_statistics_rates_data.AppendixAppDataDayStatisticsRatesData(
                            app_info = dataforseo_client.models.appendix_serps_rates_data_info.AppendixSerpsRatesDataInfo(
                                task_post = 1.337, 
                                tasks_ready = 1.337, 
                                locations = 1.337, 
                                languages = 1.337, 
                                errors = 1.337, 
                                tasks_fixed = 1.337, 
                                screenshot = 1.337, ), 
                            app_list = , 
                            app_reviews = , 
                            app_searches = , 
                            errors = 1.337, 
                            languages = 1.337, 
                            locations = 1.337, 
                            categories = 1.337, 
                            app_listings = dataforseo_client.models.appendix_business_listings_business_data_limits_rates_data_info.AppendixBusinessListingsBusinessDataLimitsRatesDataInfo(
                                categories = 1.337, 
                                locations = 1.337, ), 
                            tasks_ready = 1.337, 
                            id_list = 1.337, ), 
                        total_app_data = 1.337, 
                        content_analysis = dataforseo_client.models.appendix_content_analysis_day_statistics_rates_data.AppendixContentAnalysisDayStatisticsRatesData(
                            sentiment_analysis = , 
                            rating_distribution = , 
                            phrase_trends = , 
                            category_trends = , 
                            locations = 1.337, 
                            languages = 1.337, 
                            categories = 1.337, 
                            errors = 1.337, 
                            available_filters = 1.337, 
                            id_list = 1.337, ), 
                        total_content_analysis = 1.337, 
                        content_generation = dataforseo_client.models.appendix_content_generation_day_statistics_rates_data.AppendixContentGenerationDayStatisticsRatesData(
                            generate = , 
                            generate_meta_tags = , 
                            generate_text = , 
                            paraphrase = , 
                            check_grammar = dataforseo_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                                languages = 1.337, ), 
                            text_summary = dataforseo_client.models.appendix_content_generation_day_limits_rates_data_info.AppendixContentGenerationDayLimitsRatesDataInfo(
                                languages = 1.337, ), 
                            generate_sub_topics = , 
                            grammar_rules = 1.337, ), 
                        total_content_generation = 1.337, 
                        value = '', 
                        total_traffic_analytics = 1.337, 
                        total_reviews = 1.337, 
                        reviews = , ), 
                    minute = dataforseo_client.models.appendix_minute_statistics_rates_data.AppendixMinuteStatisticsRatesData(
                        total = 1.337, 
                        total_serp = 1.337, 
                        total_keywords_data = 1.337, 
                        total_appendix = 1.337, 
                        total_dataforseo_labs = 1.337, 
                        total_domain_analytics = 1.337, 
                        total_merchant = 1.337, 
                        total_on_page = 1.337, 
                        total_business_data = 1.337, 
                        total_backlinks = 1.337, 
                        total_app_data = 1.337, 
                        total_content_analysis = 1.337, 
                        total_content_generation = 1.337, 
                        value = '', ), )
            )
        else:
            return AppendixRatesData(
        )
        """

    def testAppendixRatesData(self):
        """Test AppendixRatesData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
