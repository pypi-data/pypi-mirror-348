# Generated by Django 3.2.14 on 2024-05-21 11:18

from django.db import migrations, models, connection, transaction
from django.db.utils import ProgrammingError


def migrate_data(apps, schema_editor):
    try:
        with connection.cursor() as cursor:
            with transaction.atomic():
                cursor.execute("SELECT 1 FROM passport_accesstoken LIMIT 1")
                cursor.execute("SELECT 1 FROM passport_passportuser LIMIT 1")
    except ProgrammingError:
        pass
    else:
        with connection.cursor() as cursor:
            cursor.execute(
                """
                    INSERT INTO maji_passport_accesstoken 
                    (id, created_at, updated_at, extra, token, token_expiration, target, passport_user_id) 
                    SELECT id, created_at, updated_at, extra, token, token_expiration, target, passport_user_id 
                    FROM passport_accesstoken
                """
            )
            cursor.execute(
                """
                    INSERT INTO maji_passport_passportuser 
                    (id, created_at, updated_at, extra, passport_uuid, user_auth_code, refresh_token, argo_user_id) 
                    SELECT id, created_at, updated_at, extra, passport_uuid, user_auth_code, refresh_token, argo_user_id 
                    FROM passport_passportuser
                """
            )

            cursor.execute(
                """
                    SELECT setval(pg_get_serial_sequence('maji_passport_accesstoken', 'id'), COALESCE(MAX(id), 1), MAX(id) IS NOT NULL) 
                    FROM maji_passport_accesstoken
                """
            )
            cursor.execute(
                """
                    SELECT setval(pg_get_serial_sequence('maji_passport_passportuser', 'id'), COALESCE(MAX(id), 1), MAX(id) IS NOT NULL) 
                    FROM maji_passport_passportuser
                """
            )


def reverse_migrate_data(apps, schema_editor):
    try:
        with connection.cursor() as cursor:
            with transaction.atomic():
                cursor.execute("DELETE FROM maji_passport_accesstoken")
                cursor.execute("DELETE FROM maji_passport_passportuser")
    except ProgrammingError:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ("maji_passport", "0005_auto_20240521_1047"),
    ]

    operations = [
        migrations.RunPython(migrate_data, reverse_code=reverse_migrate_data),
    ]
