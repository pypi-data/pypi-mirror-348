# BaCh ruff settings
# adapted from https://github.com/ArjanCodes/examples/blob/main/2024/vscode_python/ruff.toml

# use extend-exclude rather than extend
extend-exclude = [
    ".bzr",
    ".codegpt",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 100
indent-width = 4
target-version = "py313"

[lint]
# use extend-select rather than select
extend-select = [
    # pycodestyle
    "E",
    # Warnings (bach)
    "W",
    # Pep8 naming (bach)
    "N",
    # Builtin shadowing (bach)
    "A",
    # Using Path module instead of os.xxx (bach)
    "PTH",
    # flynt (bach)
    "FLY",
    # Numpy (bach)
    "NPY",
    # Performance, perflint (bach)
    "PERF",
    # Modernising, refurbing (bach)
    "FURB",
    # Ruff-specific (bach)
    "RUF",
    # Docstrings (should I really) (bach)
    "DOC",
    # Pylint (should I really?) (bach)
    "PL",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = [
    "PLR1711", # Sorry, non-negotiable: returns are helpful both for human and code editor
    "SIM108", # Sorry, too opinionated. Ternary operators are not always more readable that if else
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[lint.pycodestyle]
max-line-length = 100

[lint.pylint]
max-args = 10  # yeah, 10 args not 5 as max