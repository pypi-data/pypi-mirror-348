# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .post_v1transactions_edit_response_transaction_credit_account import (
    PostV1TransactionsEditResponseTransactionCreditAccount,
)
from .post_v1transactions_edit_response_transaction_debit_account import (
    PostV1TransactionsEditResponseTransactionDebitAccount,
)


class PostV1TransactionsEditResponseTransaction(UniversalBaseModel):
    id: typing.Optional[str] = None
    amount: typing.Optional[float] = None
    description: typing.Optional[str] = None
    status: typing.Optional[str] = None
    debit_account: typing_extensions.Annotated[
        typing.Optional[PostV1TransactionsEditResponseTransactionDebitAccount], FieldMetadata(alias="debitAccount")
    ] = None
    credit_account: typing_extensions.Annotated[
        typing.Optional[PostV1TransactionsEditResponseTransactionCreditAccount], FieldMetadata(alias="creditAccount")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
