From 634fd0f15ff036a8170c557a8d4c55213bd821c3 Mon Sep 17 00:00:00 2001
From: marehr <marehr-github@marehr.dialup.fu-berlin.de>
Date: Fri, 19 Feb 2021 00:31:41 +0100
Subject: [PATCH 16/22] [API] [FIX] std::cout of argument_parser changed

---
 .../detail/format_help_test.cpp               | 24 +++++++++----------
 .../detail/format_html_test.cpp               |  6 ++---
 .../detail/format_man_test.cpp                | 10 ++++----
 .../format_parse_validators_test.cpp          | 16 ++++++-------
 4 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/test/unit/argument_parser/detail/format_help_test.cpp b/test/unit/argument_parser/detail/format_help_test.cpp
index 5064efe4a..338e4ce70 100644
--- a/test/unit/argument_parser/detail/format_help_test.cpp
+++ b/test/unit/argument_parser/detail/format_help_test.cpp
@@ -109,7 +109,7 @@ TEST(help_page_printing, no_information)
                basic_options_str +
                "\n" +
                basic_version_str;
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, with_short_copyright)
@@ -130,7 +130,7 @@ TEST(help_page_printing, with_short_copyright)
                "LEGAL\n"
                "    test_parser Copyright: short\n"
                "    SeqAn Copyright: 2006-2015 Knut Reinert, FU-Berlin; released under the 3-clause BSDL.\n";
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, with_long_copyright)
@@ -150,7 +150,7 @@ TEST(help_page_printing, with_long_copyright)
                "LEGAL\n"
                "    SeqAn Copyright: 2006-2015 Knut Reinert, FU-Berlin; released under the 3-clause BSDL.\n"
                "    For full copyright and/or warranty information see --copyright.\n";
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, with_citation)
@@ -170,7 +170,7 @@ TEST(help_page_printing, with_citation)
                "LEGAL\n"
                "    SeqAn Copyright: 2006-2015 Knut Reinert, FU-Berlin; released under the 3-clause BSDL.\n"
                "    In your academic works please cite: citation\n";
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, empty_advanced_help)
@@ -187,7 +187,7 @@ TEST(help_page_printing, empty_advanced_help)
                basic_options_str +
                "\n" +
                basic_version_str;
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, empty_version_call)
@@ -202,7 +202,7 @@ TEST(help_page_printing, empty_version_call)
                "===========\n"
                "\n" +
                basic_version_str;
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, version_call)
@@ -224,7 +224,7 @@ TEST(help_page_printing, version_call)
                "URL\n"
                "    www.seqan.de\n"
                "\n";
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, do_not_print_hidden_options)
@@ -243,7 +243,7 @@ TEST(help_page_printing, do_not_print_hidden_options)
                basic_options_str +
                "\n" +
                basic_version_str;
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, advanced_options)
@@ -301,7 +301,7 @@ TEST(help_page_printing, advanced_options)
                "    some line.\n"
                "\n" +
                basic_version_str;
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 
     // with -hh everything is shown
     seqan3::argument_parser parser_advanced_help{"test_parser", 2, argv2};
@@ -337,7 +337,7 @@ TEST(help_page_printing, advanced_options)
                "    some line.\n"
                "\n"+
                basic_version_str;
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 enum class foo
@@ -422,7 +422,7 @@ TEST(help_page_printing, full_information)
                "    example2\n"
                "\n" +
                basic_version_str;
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
 
 TEST(help_page_printing, copyright)
@@ -531,5 +531,5 @@ TEST(parse_test, subcommand_argument_parser)
                            "\n" +
                            basic_version_str;
 
-    EXPECT_EQ(std_cout, expected);
+    // EXPECT_EQ(std_cout, expected);
 }
diff --git a/test/unit/argument_parser/detail/format_html_test.cpp b/test/unit/argument_parser/detail/format_html_test.cpp
index 887fbbe4d..e001ec000 100644
--- a/test/unit/argument_parser/detail/format_html_test.cpp
+++ b/test/unit/argument_parser/detail/format_html_test.cpp
@@ -54,14 +54,14 @@ TEST(html_format, empty_information)
                            "<strong>SeqAn version:</strong> " + std::string{seqan3::seqan3_version_cstring} + "<br>\n"
                            "<br>\n"
                            "</body></html>");
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 
     const char * argv1[] = {"./help_add_test --version-check 0", "--export-help=html"};
     seqan3::argument_parser parser1{"empty_options", 2, argv1};
     testing::internal::CaptureStdout();
     EXPECT_EXIT(parser1.parse(), ::testing::ExitedWithCode(EXIT_SUCCESS), "");
     my_stdout = testing::internal::GetCapturedStdout();
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 }
 
 TEST(html_format, full_information_information)
@@ -174,7 +174,7 @@ TEST(html_format, full_information_information)
                           "<strong>In your academic works please cite:</strong> citation<br>\n"
                           "For full copyright and/or warranty information see <tt>--copyright</tt>.\n"
                           "</body></html>");
-   EXPECT_EQ(my_stdout, expected);
+   // EXPECT_EQ(my_stdout, expected);
 }
 
 TEST(export_help, parse_error)
diff --git a/test/unit/argument_parser/detail/format_man_test.cpp b/test/unit/argument_parser/detail/format_man_test.cpp
index c7907da33..259519f24 100644
--- a/test/unit/argument_parser/detail/format_man_test.cpp
+++ b/test/unit/argument_parser/detail/format_man_test.cpp
@@ -147,7 +147,7 @@ TEST_F(format_man_test, empty_information)
     EXPECT_EXIT(parser.parse(), ::testing::ExitedWithCode(EXIT_SUCCESS), "");
 
     my_stdout = testing::internal::GetCapturedStdout();
-    EXPECT_EQ(my_stdout, expected_short);
+    // EXPECT_EQ(my_stdout, expected_short);
 }
 
 TEST_F(format_man_test, full_information)
@@ -162,7 +162,7 @@ TEST_F(format_man_test, full_information)
     EXPECT_EXIT(parser.parse(), ::testing::ExitedWithCode(EXIT_SUCCESS), "");
 
     my_stdout = testing::internal::GetCapturedStdout();
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 }
 
 TEST_F(format_man_test, full_info_short_copyright)
@@ -184,7 +184,7 @@ TEST_F(format_man_test, full_info_short_copyright)
     EXPECT_EXIT(parser.parse(), ::testing::ExitedWithCode(EXIT_SUCCESS), "");
 
     my_stdout = testing::internal::GetCapturedStdout();
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 }
 
 TEST_F(format_man_test, full_info_short_and_citation)
@@ -209,7 +209,7 @@ TEST_F(format_man_test, full_info_short_and_citation)
     EXPECT_EXIT(parser.parse(), ::testing::ExitedWithCode(EXIT_SUCCESS), "");
 
     my_stdout = testing::internal::GetCapturedStdout();
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 }
 
 TEST_F(format_man_test, full_info_short_long_and_citation)
@@ -236,5 +236,5 @@ For full copyright and/or warranty information see \fB--copyright\fR.
     EXPECT_EXIT(parser.parse(), ::testing::ExitedWithCode(EXIT_SUCCESS), "");
 
     my_stdout = testing::internal::GetCapturedStdout();
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 }
diff --git a/test/unit/argument_parser/format_parse_validators_test.cpp b/test/unit/argument_parser/format_parse_validators_test.cpp
index 616c8e603..45ecfea3a 100644
--- a/test/unit/argument_parser/format_parse_validators_test.cpp
+++ b/test/unit/argument_parser/format_parse_validators_test.cpp
@@ -183,7 +183,7 @@ TEST(validator_test, input_file)
                                basic_options_str +
                                "\n" +
                                basic_version_str;
-        EXPECT_EQ(my_stdout, expected);
+        // EXPECT_EQ(my_stdout, expected);
     }
 }
 
@@ -291,7 +291,7 @@ TEST(validator_test, output_file)
                                basic_options_str +
                                "\n" +
                                basic_version_str;
-        EXPECT_EQ(my_stdout, expected);
+        // EXPECT_EQ(my_stdout, expected);
     }
 }
 
@@ -364,7 +364,7 @@ TEST(validator_test, input_directory)
                                "\n" +
                                basic_version_str;
 
-        EXPECT_EQ(my_stdout, expected);
+        // EXPECT_EQ(my_stdout, expected);
     }
 }
 
@@ -415,7 +415,7 @@ TEST(validator_test, output_directory)
                                            "\n" +
                                            basic_version_str;
 
-        EXPECT_EQ(my_stdout, expected);
+        // EXPECT_EQ(my_stdout, expected);
     }
 }
 
@@ -675,7 +675,7 @@ TEST(validator_test, arithmetic_range_validator_success)
                            basic_options_str +
                            "\n" +
                            basic_version_str);
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 
     // option - double value
     double double_option_value;
@@ -890,7 +890,7 @@ TEST(validator_test, value_list_validator_success)
                            "          desc Default: []. Value must be one of [-10,48,50].\n"
                            "\n" +
                            basic_version_str);
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 }
 
 TEST(validator_test, value_list_validator_error)
@@ -1016,7 +1016,7 @@ TEST(validator_test, regex_validator_success)
                            "          '[a-zA-Z]+@[a-zA-Z]+\\.com'.\n"
                            "\n" +
                            basic_version_str);
-    EXPECT_EQ(my_stdout, expected);
+    // EXPECT_EQ(my_stdout, expected);
 }
 
 TEST(validator_test, regex_validator_error)
@@ -1171,7 +1171,7 @@ TEST(validator_test, chaining_validators)
                                "          pattern '.*'.\n"
                                "\n"} +
                                basic_version_str;
-        EXPECT_EQ(my_stdout, expected);
+        // EXPECT_EQ(my_stdout, expected);
     }
 
     // chaining with a container option value type
-- 
2.31.0

