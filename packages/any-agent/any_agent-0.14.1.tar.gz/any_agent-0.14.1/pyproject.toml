[build-system]
requires = ["setuptools>=48", "setuptools_scm[toml]>=6.3.1"]
build-backend = "setuptools.build_meta"

[project]
name = "any-agent"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.11"
dynamic = ["version"]
dependencies = [
  "duckduckgo_search",
  "tavily-python",
  "fire",
  "litellm",
  "mcp>=1.5.0",
  "markdownify",
  "opentelemetry-exporter-otlp",
  "opentelemetry-sdk",
  "pydantic",
  "requests",
  "rich",
  "evaluate",
  "fire",
]

[project.optional-dependencies]

google = [
  "google-adk>=0.3.0"
]

langchain = [
  "langchain",
  "langchain-litellm",
  "langchain-mcp-adapters>=0.0.3",
  "langgraph",
  "langgraph-swarm",
  "openinference-instrumentation-langchain"
]

llama_index = [
  "llama-index",
  "llama-index-llms-litellm",
  "llama-index-tools-mcp",
  "platformdirs>=4.3.7",
  "openinference-instrumentation-llama-index"
]

smolagents = [
  "smolagents[mcp]>=1.14.0",
  "openinference-instrumentation-smolagents"
]

openai = [
  "openai-agents>=0.0.12",
  "openinference-instrumentation-openai-agents>=0.1.5"
]

agno = [
  "agno>=1.4.6",
]

all = [
  "any-agent[google,langchain,llama_index,smolagents,openai,agno,serving]",
]

docs = [
  "mkdocs",
  "mkdocs-material",
  "mkdocstrings-python",
  "mkdocs-include-markdown-plugin>=7.1.5",
]

tests = [
  "pytest>=8,<9",
  "pytest-sugar>=0.9.6",
  "pytest-asyncio>=0.26.0",
  "pytest-lazy-fixtures>=1.1.2",
  "pytest-timeout>=2.4.0",
  "debugpy>=1.8.13",
  "mktestdocs>=0.2.4",
]

lint = [
  "pre-commit==4.2.0",
  "pre-commit-uv==4.1.4",
]

dev = [
  "any-agent[docs,tests,lint]",
  "pre-commit",
]

[project.urls]
Documentation = "https://mozilla-ai.github.io/any-agent/"
Issues = "https://github.com/mozilla-ai/any-agent/issues"
Source = "https://github.com/mozilla-ai/any-agent"

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.setuptools.packages.find]
exclude = ["tests", "tests.*"]
where = ["src"]
namespaces = false

[tool.setuptools_scm]


[tool.pylint.messages_control]
disable = [
    "import-outside-toplevel",
]

[tool.ruff.lint]
ignore = [
  "TD",
  "FIX",
  "D100",  # We don't use module docstrings
  "D104",  # We don't use package docstrings
  "D203",  # <- disable to resolve conflict with D211
  "D213",  # <- disable to resolve conflict with D212
  "FBT",
  "COM",
  "ANN",
  "ARG",
  "S101",
  "E501",
  "INP001",
  "PERF",
  "PLR",
  "SIM",
  "PTH",
  "DTZ005",
  "BLE001",
  "TRY004",
  "S113",
  "PLW2901",
  "C901",
  "ERA001",
  "SLF001",
  "PD901",
  "PLR0912",
  "PLR0913",
  "N999",
  "B024",
]
extend-select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"src/any_agent/config.py" = ["D101", "D102"]
"src/any_agent/evaluation/*" = ["D101", "D103", "D107"]  # TODO: Revisit when working on evaluation
"src/any_agent/evaluation/evaluators/*" = ["D103", "D107"]
"src/any_agent/frameworks/*" = ["D107", "D102"]
"src/any_agent/tools/mcp/*" = ["D101"]
"tests/*" = ["D"]

[tool.mypy]
strict = true
disallow_untyped_calls = true
disallow_untyped_defs = true
follow_untyped_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
timeout = 300

[project.scripts]
any-agent-evaluate = "any_agent.evaluation.cli:main"
