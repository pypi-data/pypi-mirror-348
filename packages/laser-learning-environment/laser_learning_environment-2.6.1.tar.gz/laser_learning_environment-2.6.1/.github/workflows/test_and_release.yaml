name: Test & Release

on:
  push:
    branches:
      - main
      - master
      - dev
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: 🧪 Rust & Python tests
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        target:
          - x86_64
          - aarch64
        python-version: 
          - '3.10'
          - '3.11'
          - '3.12'
        exclude:
          - os: windows-latest
            target: 'aarch64'

    runs-on: ${{ matrix.os }}
    steps:
      # Checkout
      - uses: actions/checkout@v4
      # Rust 
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Rust tests
        run: |
          cargo build
          cargo test

      # Python
      - name: Install Python
        uses: actions/setup-python@v5
        with: 
          python-version: ${{ matrix.python-version }}
      - name: Install UV
        uses: yezz123/setup-uv@v4
        with:
          uv-version: 0.5.6
      - name: Pytest
        run: |
          uv sync
          uv run maturin dev
          uv run pytest
  build:
    name: 📦 Build 🐍
    if: startsWith(github.ref, 'refs/tags/') # Only build when there is a tag
    needs: test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - windows-latest
          - macOS-latest
        target:
          - x86_64
          - aarch64
        exclude:
          #- os: windows-latest
          #  target: 'aarch64'
          # Build is currently failing on Ubuntu aarch64 for python 3.13
          - os: ubuntu-latest
            target: 'aarch64'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Python stub generation
        run: cargo run --bin stub-gen
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter python-3.10 python-3.11 python-3.12 python-3.13 python-3.13t
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target }}
          path: dist

  sdist:
    name: 📦 Packaging source dist 🐍
    if: startsWith(github.ref, 'refs/tags/') # Only build when there is a tag
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo run --bin stub-gen
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: 📤 Release to Pypi 🐍
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

  package:
    name: 📦 Package and publish to crates.io 
    if: startsWith(github.ref, 'refs/tags/') # Only package & publish when there is a tag
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build and publish
        run: |
          cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
