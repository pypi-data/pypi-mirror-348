[build-system]
requires = ["setuptools>=80.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "TeddyCloudStarter"
dynamic = ["version"]
description = "The wizard for setting up TeddyCloud with Docker"
readme = "README.md"
authors = [
    {name = "Quentendo64", email = "quentin@wohlfeil.at"}
]
license = "GPL-3.0-or-later"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Systems Administration"
]
dependencies = [
    "rich>=14.0.0",
    "questionary>=2.1.0",
    "jinja2>=3.1.6",
    "dnspython>=2.7.0",
]
requires-python = ">=3.6"

[project.urls]
Homepage = "https://github.com/Quentendo64/TeddyCloudStarter"
"Bug Tracker" = "https://github.com/Quentendo64/TeddyCloudStarter/issues"

[project.scripts]
TeddyCloudStarter = "TeddyCloudStarter.main:main"

[tool.setuptools.packages.find]
include = ["TeddyCloudStarter*"]

[tool.setuptools.package-data]
"TeddyCloudStarter.locales.de.LC_MESSAGES" = ["*.mo", "*.po"]

[tool.black]
line-length = 88
skip-string-normalization = false
# Specify target Python version for consistency
target-version = ['py36', 'py37', 'py38', 'py39', 'py310', 'py311', 'py312', 'py313']

[tool.flake8]
max-line-length = 88
exclude = ".git,__pycache__,build,dist"
# Add useful plugins for better linting
extend-ignore = "E203,W503"
select = "C,E,F,W,B,B950"
# Plugins: bugbear, comprehensions, etc.
# Install: flake8-bugbear, flake8-comprehensions, flake8-annotations

[tool.isort]
profile = "black"
py_version = 313

[tool.mypy]
python_version = 3.13
ignore_missing_imports = true
check_untyped_defs = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

# [tool.ruff]
line-length = 88
target-version = "py313"
select = ["E", "F", "B", "C", "I", "N", "UP", "S"]
# Requires: pip install ruff