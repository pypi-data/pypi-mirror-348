from collections.abc import Iterator
from typing import Any, Self

from sfs2x.core.field import Field

class SFSObject(Field[dict[str, Field]]):
    def __init__(self, value: dict[str, Field] | None = None, **kwargs: Field) -> None: ...
    def __getitem__(self, item: str) -> Any: ... # noqa: ANN401
    def __setitem__(self, key: str, item: Field) -> None: ...
    def __contains__(self, key: str) -> bool: ...
    def __add__(self, other: SFSObject | dict[str, Field]) -> SFSObject: ...
    def __or__(self, other: SFSObject | dict[str, Field]) -> SFSObject: ...
    def update(self, **kwargs: Field[]) -> SFSObject: ...

    def get(self, item: str, default: Any = None) -> Any: ... # noqa: ANN401
    def keys(self) -> Iterator[str]: ...
    def values(self) -> Iterator[Any]: ...
    def items(self) -> Iterator[tuple[str, Any]]: ...

    def put(self, item: str, value: Field) -> Self: ...
    def put_bool(self, key: str, value: bool) -> Self: ...
    def put_byte(self, key: str, value: int) -> Self: ...
    def put_short(self, key: str, value: int) -> Self: ...
    def put_int(self, key: str, value: int) -> Self: ...
    def put_long(self, key: str, value: int) -> Self: ...
    def put_float(self, key: str, value: float) -> Self: ...
    def put_double(self, key: str, value: float) -> Self: ...
    def put_utf_string(self, key: str, value: str) -> Self: ...
    def put_text(self, key: str, value: str) -> Self: ...
    def put_bool_array(self, key: str, value: list[bool]) -> Self: ...
    def put_byte_array(self, key: str, value: list[int]) -> Self: ...
    def put_short_array(self, key: str, value: list[int]) -> Self: ...
    def put_int_array(self, key: str, value: list[int]) -> Self: ...
    def put_long_array(self, key: str, value: list[int]) -> Self: ...
    def put_float_array(self, key: str, value: list[float]) -> Self: ...
    def put_double_array(self, key: str, value: list[float]) -> Self: ...
    def put_utf_string_array(self, key: str, value: list[str]) -> Self: ...
    def put_sfs_array(self, key: str, value: SFSArray) -> Self: ...
    def put_sfs_object(self, key: str, value: SFSObject) -> Self: ...
    def put_class(self, key: str, value: str) -> Self: ...


class SFSArray(Field[list[Field]]):
    def __init__(self, value: list[Field] | None = None, *args: Field) -> None: ...
    def __getitem__(self, index: int) -> Any: ... # noqa: ANN401
    def __iter__(self) -> Iterator[Any]: ...
    def __add__(self, other: SFSArray | list[Field]) -> SFSArray: ...
    def __or__(self, other: SFSArray | list[Field]) -> SFSArray: ...
    def update(self, *args: Field) -> SFSArray: ...

    def get(self, index: int) -> Any: ... # noqa: ANN401
    def add(self, value: Field) -> Self: ...

    def add_bool(self, value: bool) -> Self: ...
    def add_byte(self, value: int) -> Self: ...
    def add_short(self, value: int) -> Self: ...
    def add_int(self, value: int) -> Self: ...
    def add_long(self, value: int) -> Self: ...
    def add_float(self, value: float) -> Self: ...
    def add_double(self, value: float) -> Self: ...
    def add_utf_string(self, value: str) -> Self: ...
    def add_text(self, value: str) -> Self: ...
    def add_bool_array(self, value: list[bool]) -> Self: ...
    def add_byte_array(self, value: list[int]) -> Self: ...
    def add_short_array(self, value: list[int]) -> Self: ...
    def add_int_array(self, value: list[int]) -> Self: ...
    def add_long_array(self, value: list[int]) -> Self: ...
    def add_float_array(self, value: list[float]) -> Self: ...
    def add_double_array(self, value: list[float]) -> Self: ...
    def add_utf_string_array(self, value: list[str]) -> Self: ...
    def add_sfs_array(self, value: SFSArray) -> Self: ...
    def add_sfs_object(self, value: SFSObject) -> Self: ...
    def add_class(self, value: str) -> Self: ...

class Class(Field[Any]):
    ...
