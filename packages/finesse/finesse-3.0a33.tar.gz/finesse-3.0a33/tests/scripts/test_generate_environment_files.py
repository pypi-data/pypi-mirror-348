from pathlib import Path
import sys

from scripts import generate_environment_files


toml = """\
[project]
dependencies = [
    "foo > 1",
]

[project.optional-dependencies]
extra = [
    "bar",
    "not_on_conda",
]

[tool.generate_conda_yml]
pip_only.extra = ["not_on_conda"]
system_deps = ["linux-compiler"]
system_deps_win = ["windows-compiler"]
"""

yaml = """\
# This file has been automatically generated by scripts/generate_environment_files.py
# Please do not modify this file directly, but modify 'pyproject.toml'
# and rerun the script.

# Conda development environment for Linux and macOS.

channels:
  - conda-forge
dependencies:
# System dependencies
  - linux-compiler
# Runtime dependencies
  - foo > 1
# Extra dependencies
  - bar
  - pip:
# Extra
    - not_on_conda
"""

yaml_win = yaml.replace("linux-compiler", "windows-compiler").replace(
    "Linux and macOS.", "Windows."
)


def test_generate_environment_files(monkeypatch, tmpdir):
    pyproject = Path(tmpdir / "pyproject.toml")
    env_yml = Path(tmpdir / "environment.yml")
    env_win_yml = Path(tmpdir / "environment_win.yml")
    with open(pyproject, "w") as f:
        f.write(toml)
    monkeypatch.setattr(generate_environment_files, "PYPROJECT_TOML", pyproject)
    monkeypatch.setattr(generate_environment_files, "ENVIRONMENT_YML", env_yml)
    monkeypatch.setattr(generate_environment_files, "ENVIRONMENT_WIN_YML", env_win_yml)
    generate_environment_files.main()
    if sys.platform in ("win32", "cygwin"):
        yaml.replace("/", "\\")
        yaml_win.replace("/", "\\")
    for yml, ref in zip((env_yml, env_win_yml), (yaml, yaml_win)):
        with open(yml, "r") as f:
            assert f.read() == ref
