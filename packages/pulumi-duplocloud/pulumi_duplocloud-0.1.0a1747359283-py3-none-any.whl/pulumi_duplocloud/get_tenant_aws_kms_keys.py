# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetTenantAwsKmsKeysResult',
    'AwaitableGetTenantAwsKmsKeysResult',
    'get_tenant_aws_kms_keys',
    'get_tenant_aws_kms_keys_output',
]

@pulumi.output_type
class GetTenantAwsKmsKeysResult:
    """
    A collection of values returned by getTenantAwsKmsKeys.
    """
    def __init__(__self__, id=None, keys=None, selectable=None, tenant_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if keys and not isinstance(keys, list):
            raise TypeError("Expected argument 'keys' to be a list")
        pulumi.set(__self__, "keys", keys)
        if selectable and not isinstance(selectable, bool):
            raise TypeError("Expected argument 'selectable' to be a bool")
        pulumi.set(__self__, "selectable", selectable)
        if tenant_id and not isinstance(tenant_id, str):
            raise TypeError("Expected argument 'tenant_id' to be a str")
        pulumi.set(__self__, "tenant_id", tenant_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def keys(self) -> Sequence['outputs.GetTenantAwsKmsKeysKeyResult']:
        return pulumi.get(self, "keys")

    @property
    @pulumi.getter
    def selectable(self) -> Optional[bool]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "selectable")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> str:
        return pulumi.get(self, "tenant_id")


class AwaitableGetTenantAwsKmsKeysResult(GetTenantAwsKmsKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTenantAwsKmsKeysResult(
            id=self.id,
            keys=self.keys,
            selectable=self.selectable,
            tenant_id=self.tenant_id)


def get_tenant_aws_kms_keys(selectable: Optional[bool] = None,
                            tenant_id: Optional[str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTenantAwsKmsKeysResult:
    """
    Use this data source to access information about an existing resource.

    :param bool selectable: Defaults to `true`.
    """
    __args__ = dict()
    __args__['selectable'] = selectable
    __args__['tenantId'] = tenant_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('duplocloud:index/getTenantAwsKmsKeys:getTenantAwsKmsKeys', __args__, opts=opts, typ=GetTenantAwsKmsKeysResult).value

    return AwaitableGetTenantAwsKmsKeysResult(
        id=pulumi.get(__ret__, 'id'),
        keys=pulumi.get(__ret__, 'keys'),
        selectable=pulumi.get(__ret__, 'selectable'),
        tenant_id=pulumi.get(__ret__, 'tenant_id'))
def get_tenant_aws_kms_keys_output(selectable: Optional[pulumi.Input[Optional[bool]]] = None,
                                   tenant_id: Optional[pulumi.Input[str]] = None,
                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetTenantAwsKmsKeysResult]:
    """
    Use this data source to access information about an existing resource.

    :param bool selectable: Defaults to `true`.
    """
    __args__ = dict()
    __args__['selectable'] = selectable
    __args__['tenantId'] = tenant_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('duplocloud:index/getTenantAwsKmsKeys:getTenantAwsKmsKeys', __args__, opts=opts, typ=GetTenantAwsKmsKeysResult)
    return __ret__.apply(lambda __response__: GetTenantAwsKmsKeysResult(
        id=pulumi.get(__response__, 'id'),
        keys=pulumi.get(__response__, 'keys'),
        selectable=pulumi.get(__response__, 'selectable'),
        tenant_id=pulumi.get(__response__, 'tenant_id')))
