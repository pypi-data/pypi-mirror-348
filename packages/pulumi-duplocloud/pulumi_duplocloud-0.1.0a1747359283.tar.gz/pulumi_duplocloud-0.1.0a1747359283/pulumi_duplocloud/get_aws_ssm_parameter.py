# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetAwsSsmParameterResult',
    'AwaitableGetAwsSsmParameterResult',
    'get_aws_ssm_parameter',
    'get_aws_ssm_parameter_output',
]

@pulumi.output_type
class GetAwsSsmParameterResult:
    """
    A collection of values returned by getAwsSsmParameter.
    """
    def __init__(__self__, allowed_pattern=None, description=None, id=None, key_id=None, last_modified_date=None, last_modified_user=None, name=None, tenant_id=None, type=None, value=None):
        if allowed_pattern and not isinstance(allowed_pattern, str):
            raise TypeError("Expected argument 'allowed_pattern' to be a str")
        pulumi.set(__self__, "allowed_pattern", allowed_pattern)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if key_id and not isinstance(key_id, str):
            raise TypeError("Expected argument 'key_id' to be a str")
        pulumi.set(__self__, "key_id", key_id)
        if last_modified_date and not isinstance(last_modified_date, str):
            raise TypeError("Expected argument 'last_modified_date' to be a str")
        pulumi.set(__self__, "last_modified_date", last_modified_date)
        if last_modified_user and not isinstance(last_modified_user, str):
            raise TypeError("Expected argument 'last_modified_user' to be a str")
        pulumi.set(__self__, "last_modified_user", last_modified_user)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if tenant_id and not isinstance(tenant_id, str):
            raise TypeError("Expected argument 'tenant_id' to be a str")
        pulumi.set(__self__, "tenant_id", tenant_id)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)
        if value and not isinstance(value, str):
            raise TypeError("Expected argument 'value' to be a str")
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="allowedPattern")
    def allowed_pattern(self) -> str:
        return pulumi.get(self, "allowed_pattern")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="keyId")
    def key_id(self) -> str:
        return pulumi.get(self, "key_id")

    @property
    @pulumi.getter(name="lastModifiedDate")
    def last_modified_date(self) -> str:
        return pulumi.get(self, "last_modified_date")

    @property
    @pulumi.getter(name="lastModifiedUser")
    def last_modified_user(self) -> str:
        return pulumi.get(self, "last_modified_user")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> str:
        return pulumi.get(self, "tenant_id")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def value(self) -> str:
        return pulumi.get(self, "value")


class AwaitableGetAwsSsmParameterResult(GetAwsSsmParameterResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAwsSsmParameterResult(
            allowed_pattern=self.allowed_pattern,
            description=self.description,
            id=self.id,
            key_id=self.key_id,
            last_modified_date=self.last_modified_date,
            last_modified_user=self.last_modified_user,
            name=self.name,
            tenant_id=self.tenant_id,
            type=self.type,
            value=self.value)


def get_aws_ssm_parameter(name: Optional[str] = None,
                          tenant_id: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAwsSsmParameterResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['tenantId'] = tenant_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('duplocloud:index/getAwsSsmParameter:getAwsSsmParameter', __args__, opts=opts, typ=GetAwsSsmParameterResult).value

    return AwaitableGetAwsSsmParameterResult(
        allowed_pattern=pulumi.get(__ret__, 'allowed_pattern'),
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        key_id=pulumi.get(__ret__, 'key_id'),
        last_modified_date=pulumi.get(__ret__, 'last_modified_date'),
        last_modified_user=pulumi.get(__ret__, 'last_modified_user'),
        name=pulumi.get(__ret__, 'name'),
        tenant_id=pulumi.get(__ret__, 'tenant_id'),
        type=pulumi.get(__ret__, 'type'),
        value=pulumi.get(__ret__, 'value'))
def get_aws_ssm_parameter_output(name: Optional[pulumi.Input[str]] = None,
                                 tenant_id: Optional[pulumi.Input[str]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAwsSsmParameterResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['tenantId'] = tenant_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('duplocloud:index/getAwsSsmParameter:getAwsSsmParameter', __args__, opts=opts, typ=GetAwsSsmParameterResult)
    return __ret__.apply(lambda __response__: GetAwsSsmParameterResult(
        allowed_pattern=pulumi.get(__response__, 'allowed_pattern'),
        description=pulumi.get(__response__, 'description'),
        id=pulumi.get(__response__, 'id'),
        key_id=pulumi.get(__response__, 'key_id'),
        last_modified_date=pulumi.get(__response__, 'last_modified_date'),
        last_modified_user=pulumi.get(__response__, 'last_modified_user'),
        name=pulumi.get(__response__, 'name'),
        tenant_id=pulumi.get(__response__, 'tenant_id'),
        type=pulumi.get(__response__, 'type'),
        value=pulumi.get(__response__, 'value')))
