I dag vil jeg snakke til dere om noe demokratiet kan lære av dem som jobber med åpen kildekode programmering, men først, en liten digresjon. La oss begynne her. 
Dette er Martha Payne. Martha er skotsk og 9 år gammel og bor i kommunen Argyll and Bute. For et par måneder siden startet Payne en matblogg som hun kalte NeverSeconds, hun tok med seg kameraet sitt til skolen hver dag for å dokumentere lunsjen som skolen serverte. Ser du grønnsakene? (Latter) Og, som det av og til skjer, fikk bloggen først noen dusin lesere, så hundrevis av lesere, så tusenvis av lesere, mennesker som fulgte med for å se henne vurdere skolelunsjen, inkludert favoritt-kategorien min, "Hårstrå funnet i maten." (Latter) Dette var en null-dag. Det er bra. 
Og for to uker siden i går, la hun ut dette. Et innlegg som sa "Farvel." Og hun skrev "Jeg er lei for å fortelle dette, men rektor hentet meg i klasserommet i dag og sa til meg at jeg ikke får lov til å ta bilder i kantinen lenger. Jeg syntes det var virkelig morsomt å gjøre det. Takk for at dere leste. Farvel.&amp;quot; 
Dere kan vel gjette hva som skjedde, ikke sant? (Latter) Sinnet kom så raskt, så voldsomt og samstemt at kommunen Argyll og Bute gjorde helomvending samme dag, og sa "Selvfølgelig ville vi aldri finne på å sensurere en ni-åring!" (Latter) Ja, bortsett fra i morres, selvfølgelig. (Latter) Og dette fører jo til spørsmålet, hvordan kunne de tro at de kunne slippe unna med noe sånt? (Latter) Og svaret er, menneskehetens hele historie fram til nå. 
(Latter) Så, hva skjer når et medie plutselig setter mange nye ideer i omløp? 
Nå er dette ikke bare et samtidsspørsmål. Dette er noe vi har opplevd flere ganger i løpet av de siste århundrene. Da telegrafen kom, var det klart at den ville globalisere nyhetsbransjen. Hva ville det føre til? Vel, selvfølgelig, ville det føre til fred i verden. TV, et medium som tillot oss ikke bare å høre men se, bokstavelig talt se, hva som foregikk andre steder i verden, hva ville det føre til? Fred i verden. (Latter) Telefonen? Du gjettet det: fred i verden. Unnskyld at jeg røper slutten, men det har ikke blitt fred i verden. Ikke ennå. Selv trykkpressen, selv trykkpressen ble sett på som et verktøy for å håndheve det katolske intellektuelle hegemoni over hele Europa. I stedet fikk vi Martin Luthers 95 teser, den protestantiske reformasjonen, og, du vet, tredveårskrigen. Greit, så hva alle disse spådommer om verdensfred fikk rett i, er at når en masse nye ideer plutselig kommer i omløp, endres samfunnet. Hva spådommene tok feil i var hva som skjer videre. 
Jo flere ideer som er i omløp, desto flere ideer kan en person være uenig i. Flere medier betyr alltid mer krangel. Det er det som skjer når medias rom i samfunnet utvides. Og likevel, når vi ser tilbake på trykkpressen i de tidlige årene, liker vi hva som skjedde. Vi er et samfunn som støtter det trykte ord. 
Så hvordan kan vi forene disse to tingene, - at det fører til mer krangel, men vi tror det var bra? 
Og svaret, tror jeg, kan finnes i ting som dette. Dette er forsiden av "Philosophical Transactions" det første vitenskapelige tidsskriftet noensinne utgitt på engelsk på midten av 1600-tallet, og det ble skapt av en gruppe mennesker som kalte seg "The Invisible College" en gruppe av naturfilosofer som først senere kom til å kalle seg forskere. De ønsket å forbedre måten naturfilosofer diskuterte med hverandre på, og de trengte to ting for å gjøre dette. De trengte åpenhet. De trengte å skape en norm som sa at når du gjør et eksperiment, må du publisere ikke bare dine påstander, men hvordan du gjorde eksperimentet. Hvis du ikke forteller oss hvordan du gjorde det, vil vi ikke stole på deg. Men den andre tingen de trengte var hastighet. De trengte raskt å få kunnskaper om hva andre naturfilosofer visste. Ellers ville du ikke få den riktige typen diskusjon i gang. Trykkpressen var tydeligvis det rette medium for dette, men boka var feil verktøy. Den var for treg. Og så oppfant de det vitenskapelige tidsskriftet som en måte å synkronisere diskusjon på tvers av fellesskapet av naturforskere. Den vitenskapelige revolusjonen ble ikke skapt av trykkpressen. Den ble skapt av forskere, men den kunne ikke ha blitt skapt hvis de ikke hadde trykkpressen som verktøy. 
Så hva med oss? Hva med vår generasjon, og vår mediarevolusjon, Internett? Vel, spådommer om verdensfred? Jepp. (Latter) Mer krangling? Tatt på kornet. (Latter) (Latter) Se her, YouTube er jo bare ei gullgruve. (Latter) Bedre krangel? Det er spørsmålet. 
Så studerer jeg sosiale medier, noe som mer eller mindre betyr at jeg ser på mens folk krangler. Og hvis jeg måtte velge en gruppe som jeg tror er dagens "Invisible College", er en gruppe av mennesker fra vår generasjon som prøver å ta disse verktøyene, og bruke dem for å oppnå, ikke flere diskusjoner, men bedre diskusjoner, Jeg ville velge åpen kildekode-programmerere. Programmering er en tre-veis relasjon mellom en programmerer, noe kildekode, og datamaskinen programmet skal kjøre på. Men datamaskiner er velkjent for å være ikke-fleksible tolkere av instruksjoner at det er usedvanlig vanskelig å skrive ut et sett med instruksjoner som datamaskinen vet hvordan den skal utføre, og det gjelder selv om bare en person skriver det. Når du får mer enn én person som skal skrive, blir det veldig enkelt for to programmerere å overskrive hverandres arbeid hvis de jobber med samme fil, eller sende inkompatible instruksjoner som bare gjør at datamaskinen henger seg opp, og dette problemet blir større jo flere programmerere som blir involvert. Forenklet, er problemet med å håndtere et stor programvareprosjekt lik problemet med å holde dette sosiale kaoset i sjakk. 
Nå, i flere tiår har det vært en kanonisk løsning på dette problemet, nemlig å bruke noe som kalles et "versjonskontrollsystem" og en versjonskontrollsystem gjør hva navnet sier. Det lagrer en hoved-kopi av programvaren på en server et sted. De eneste programmererne som kan endre det er folk som får spesiell tillatelse til å gjøre endringer, og de får bare tilgang til den delen av programmet som de har tillatelse til å endre. Når mennesker tegner diagrammer av versjonskontrollsystemer, vil diagrammene alltid se omtrent slik ut. Greit. De ser ut som organisasjonskart. Og du slipper å myse veldig hardt for å se de politiske konsekvensene av et system som dette. Dette er føydalisme: én eier, mange arbeidere. 
Nå, dette er greit for den kommersielle programvareindustrien. Det er Microsoft Office. Det er Adobes Photoshop. Selskapet eier programvaren. Programmerere kommer og går. 
Men det var en programmerer som besluttet at dette ikke var måten å jobbe på. Det var Linus Torvalds. Torvalds er den mest kjente åpen kildekode-programmereren, skaperen av Linux, selvfølgelig, og Torvalds så på måten open-source bevegelsen hadde taklet problemet på. Åpen kilde-programvare, det viktigste løftet i en åpen kildekode-lisens er at alle skal ha tilgang til all kildekoden hele tiden, men selvfølgelig skaper dette denne trusselen om kaos som en må foregripe og håndtere for å få noe til å virke. Så de fleste åpen kildekode-prosjekter bare holdt seg for nesa og brukte de "føydale" systemene. 
Men Torvalds sa: "nei, det har jeg ikke tenkt å gjøre." Hans standpunkt om dette var veldig klart. Når du griper til et verktøy, får du også med på kjøpet styringsfilosofien som er innebygd i dette verktøyet, og han ville ikke ta i bruk noe som ikke fungerte slik Linux-fellesskapet arbeidet. Og for å gi deg en følelse av hvor enormt komplisert en beslutning som dette var, er her et kart av de interne avhengighetene i Linux, i Linux-operativsystemet, hvilke under-deler av programmet som må stole på hvilke andre deler for å virke. Dette er en veldig komplisert prosess. Dette er et enormt komplisert program, og likevel, i årevis, vedlikeholdt Torvalds dette ikke med automatiserte verktøy men gjennom eposten sin. Folk ville bokstavelig talt sende han endringer på epost som de var enige om, og han ville legge dem inn for hånd. 
Og så, etter 15 år med observasjon av Linux og observasjon av hvordan dette samfunnet fungerte, sa han: "Jeg tror jeg vet hvordan vi kan skrive et versjonskontrollsystem for frie mennesker." 
Og han kalte det "Git." Git er distribuert versjonskontroll. Det har to store forskjeller sammenliknet med tradisjonelle versjonskontrollsystemer. Først og fremst lever det opp til det filosofiske løftet bak åpen kildekode. Alle som arbeider på et prosjekt har tilgang til all kildekoden hele tiden. Og når mennesker tegner diagrammer av Git arbeidsflyt, bruker de tegninger som ser ut som dette. Og du trenger ikke å forstå hva sirkler og bokser og piler betyr for å se at dette er en langt mer komplisert måte å arbeide på enn det et vanlig versjonskontrollsystem støtter. 
Men dette vil jo også bringe kaoset tilbake, og dette er Gits andre store innovasjon. Dette er en skjermdump fra GitHub, den viktigste Git nett-tenesten, og hver gang en programmerer bruker Git til å gjøre noen vesentlig endring i det hele tatt, å opprette en ny fil, å endre en eksisterende å slå sammen to filer, oppretter Git denne typen signatur. Denne lange strengen av tall og bokstaver her er en unik identifikator som blir knyttet til hver enkelt endring men uten noen sentral koordinering. Hvert Git system genererer dette nummeret på samme måte, noe som betyr at dette er en signatur knyttet direkte og ufalsifiserbart til en bestemt endring. 
Dette har følgende effekt: En programmerer i Edinburgh og en programmerer i Entebbe kan begge få det samme -- en kopi av den programvaren. Hver av dem kan gjøre endringer, og de kan slå dem sammen etterpå - selv om de ikke vet om hverandres eksistens på forhånd. Dette er samarbeid uten koordinering. Dette er den store endringen. 
Nå, jeg forteller deg ikke alt dette for å overbevise deg om at det er flott at åpen kildekode-programmerere nå har et verktøy som støtter deres filosofiske måte å arbeide på, selv om jeg tror det er flott. Jeg forteller deg alt dette på grunn av hva jeg tror det betyr for måten samfunn kan komme sammen. 
Når Git tillater samarbeid uten koordinering, begynner du å se samfunn formes som er enormt store og komplekse. 
Dette er en graf av Ruby-samfunnet. Det er et åpen kildekode programmeringsspråk, og alle lenker mellom folk -- dette er nå ikke en graf over programvare, men et folke-diagram alle koblinger mellom folk som arbeider på dette prosjektet - og dette ser ut ikke som et organisasjonskart. Dette ser ut som en dis-organisasjonskart, og likevel, gjennom dette fellesskapet, ved hjelp av disse verktøyene, kan de nå skape noe sammen. Så det er to gode grunner til å tro at denne typen teknikk kan brukes til demokratier generelt og spesielt til lover. 
Når du påstår at, faktisk, noe på Internett kommer til å være bra for demokratiet, få du ofte denne reaksjonen. 
(Musikk) (Latter) 
Nemlig: Snakker om den greia med foto av syngende katter? Er det liksom den tingen du tror kommer til å være bra for samfunnet? Til det kan jeg si, her er greia med de syngende kattene. Dette skjer alltid. Og jeg mener ikke bare at det alltid skjer med Internett, Jeg mener det alltid skjer med media, punktum. Det tok ikke lang tid fra framveksten av det kommersielle trykkeriet før noen fant ut at erotiske noveller var en god idé. (Latter) Du trenger ikke å ha noe økonomisk incentiv til å selge bøker i lang tid før noen sier, "Hei, vet du hva jeg vedder på at folk vil betale for?&amp;quot; (Latter) Det tok folk enda 150 år å tenke ut det vitenskapelige tidsskriftet, ikke sant? Så--(latter) (applaus) 
Så det at Invisible College brukte trykkekunsten til å lage det vitenskapelige tidsskriftet var utrolig viktig, men det skjedde ikke i stor skala, og det skjedde ikke tidlig, og det skjedde ikke raskt, så hvis du skal se etter hvor endringer skjer, må du se på marginale fenomen. 
Så, lover er også bygd på avhengighet mellom deler. Dette er et diagram over USAs skattelov, og hvordan den er avhengig av andre lover for den samlede effekten. Så det er et område modent for kildekode-styring. Men det er også et faktum at loven er et annet område hvor der det er mange meninger i omløp, men de må forenes til en kanonisk kopi. Når du går inn på GitHub og ser deg rundt, er det millioner og millioner av prosjekter, nesten alle er kildekode, men hvis du ser rundt i utkantene, kan du se folk eksperimentere med de politiske konsekvensene av et system som dette. Noen lastet opp alle Wikileaks rapportene fra Utenriksdepartementet i USA, sammen med programvaren som brukes å tolke dem, inkludert min favorittbruk av Cablegate-rapportene, som er et verktøy for å oppdage naturlig forekommende haiku i Utenriksdepartementets prosa. (Latter) Nettopp. (Latter) New York-Senatet har lagt ut noe som kalles Åpen lovgivning, også det på GitHub, igjen på grunn av mulighetene til oppdatering og arbeidsflyt. Du kan gå og velge en Senator og deretter se en liste over lovendringer de har støttet. Noen som kaller seg Divegeek har lagt ut Utahs samlede lover alle lovene i staten Utah, og de har lastet dem opp der ikke bare for å distribuere teksten, men også med veldig interessante muligheter for at dette kunne brukes til å fremme utviklingen av lovgivning. Noen satte opp et verktøy under opphavsrettdebatten i fjor i Senatet, sa: "det er rart at Hollywood har mer tilgang til kanadiske lovgivere enn kanadiske borgere gjør. Hvorfor ikke bruke GitHub å vise dem hvordan en borger-utviklet lov kan se ut?" Og det inkluderer dette stemningsfulle skjermbildet. 
Dette er en såkalt &amp;quot;diff&amp;quot;, denne tingen til høyre her. Dette viser, for tekst redigert av mange mennesker, når en endring ble gjort, hvem som gjorde det, og hva endringen er. Ting i rødt er ting som ble slettet. Ting i grønt er ting som ble lagt til. Programmerere tar denne muligheten for gitt. Intet demokrati noe sted i verden tilbyr denne funksjonen til sine borgere, hverken for lovgivning eller for budsjetter, selv om alt blir gjort med vårt samtykke og med våre penger. 
Nå, vil jeg gjerne fortelle deg at det faktum at åpen kildekode-programmerere har skapt en form for samarbeid som er storskala, distribuert, billig og i pakt med idealene for et demokrati, jeg ville elske å fortelle deg at siden disse verktøyene er på plass, kommer de uvegerlig til å brukes. Men det stemmer ikke. En del av problemet, er selvfølgelig bare en mangel på informasjon. Noen stilte et spørsmål på Quora og sa: "Hvorfor bruker ikke lovgivere distribuert versjonskontroll?" Dette, grafisk, var svaret. (Latter) (Latter) (Applaus) Og det er faktisk en del av problemet, men bare en del. 
Et større problem, selvfølgelig, er makt. Folk som eksperimenterer med deltakelse har ikke lovgivende makt, og folk som har lovgivende makt eksperimenterer ikke med deltakelse. De eksperimenterer med åpenhet. Det er ingen demokrati verdt navnet som ikke har bevegelser som kjemper for åpenhet, men åpenhet er åpenhet i bare én retning, og det å bli gitt et dashboard uten ett ratt har aldri vært et sentralt løfte et demokrati gir sine borgere. 
Så tenk gjennom dette. Det som fikk Martha Paynes meninger ut i offentligheten var et stykke teknologi, men det som lot dem fortsette å leve der var politisk vilje. Det var en forventning borgere hadde om at hun ikke skulle bli sensurert. Det er nå tilstanden vi er i for disse samarbeidsverktøyene. Vi har dem. Vi har sett dem. De fungerer. Kan vi bruke dem? Kan vi bruke teknikkene som fungerte der borte til dette? 
TS Eliot sa gang, "en av de mest betydningsfulle tingene som kan skje med en kultur er at de skaffer seg en ny form for prosa." Jeg tror det er galt, men--(latter) Jeg tror det er riktig for diskusjonens skyld. Stemmer? En betydningsfull ting som kan skje med en kultur er de kan tilegne seg en ny form for diskusjon: jury-domstoler, almenn stemmerett, peer review, nå dette. Stemmer? 
En ny form for krangel har blitt oppfunnet i vår levetid, i det siste tiåret, faktisk. Den er stor-skala, den er distribuert, den er billig, og den er kompatibel med demokratiske idealer. Spørsmålet for oss nå er om vi kommer til å la programmerere holde den for seg selv? Eller skal vi prøve og ta den og sette den i tjeneste for samfunnet som helhet? 
Takk for at dere lyttet. (Applaus) (Applaus) Takk. Takk. (Applaus) 
