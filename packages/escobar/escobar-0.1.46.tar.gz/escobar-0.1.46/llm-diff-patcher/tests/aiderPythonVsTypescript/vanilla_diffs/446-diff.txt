```diff
--- test_files/446-original.txt	2025-03-07 19:07:00
+++ test_files/446-modified.txt	2025-03-07 19:07:00
@@ -1,14 +1,24 @@
-import whoami from "./whoami";
-import login from "./login";
-import logout from "./logout";
+/* eslint-disable no-console */
+// Node Imports
+import chalk from "chalk";
+import { Command } from "commander";
+
+// CLI Imports
+import actions from "./actions";
+import add from "./add";
 import apps from "./apps";
 import connections from "./connections";
+import execute from "./execute";
 import integrations from "./integrations";
+import login from "./login";
+import logout from "./logout";
 import triggers from "./triggers";
-import add from "./add";
+import whoami from "./whoami";
 
-import { Command } from "commander";
-import chalk from "chalk";
+// SDK Imports
+import { TELEMETRY_LOGGER } from "../sdk/utils/telemetry";
+import { TELEMETRY_EVENTS } from "../sdk/utils/telemetry/events";
+import mcpCommand from "./mcp";
 
 const program = new Command().name("composio").description("Composio CLI");
 
@@ -21,6 +31,9 @@
 new integrations(program);
 new triggers(program);
 new add(program);
+new actions(program);
+new execute(program);
+new mcpCommand(program);
 
 function formatLine(content: string): string {
   return `${content}`;
@@ -33,17 +46,14 @@
     formatLine(""),
     formatLine(`  ${chalk.bold("📚 Commands:")}\n`),
     ...options.command.commands.map((cmd) =>
-      formatLine(`    ${chalk.cyanBright(cmd.name())} - ${cmd.description()}`),
+      formatLine(`    ${chalk.cyanBright(cmd.name())} - ${cmd.description()}`)
     ),
     formatLine(`    ${chalk.cyan("help")}   - Display help for command`),
     formatLine(""),
     formatLine(`  ${chalk.bold("⚙️ Options:")}\n`),
     formatLine(
-      `    ${chalk.magenta("-V, --version")} 📌 Output the version number`,
+      `    ${chalk.magenta("-h, --help")}    ℹ️ Display help for command`
     ),
-    formatLine(
-      `    ${chalk.magenta("-h, --help")}    ℹ️ Display help for command`,
-    ),
     formatLine(""),
   ].join("\n");
 
@@ -51,4 +61,8 @@
   process.exit(0);
 });
 
+program.hook("preAction", () => {
+  TELEMETRY_LOGGER.manualTelemetry(TELEMETRY_EVENTS.CLI_INVOKED, {});
+});
+
 program.parse();
```
