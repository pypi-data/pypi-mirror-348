```diff
--- test_files/530-original.txt	2025-03-07 19:07:06
+++ test_files/530-modified.txt	2025-03-07 19:07:06
@@ -1,7 +1,6 @@
 ---
 title: "Getting Started with Triggers"
 sidebarTitle: "Triggers"
-icon: "webhook"
 description: "Triggers monitor specific events in apps like GitHub or Gmail and notify your agents via webhooks. When triggered, they send relevant data that your agents can act upon"
 ---
 
\ No newline at end of file
@@ -10,8 +9,14 @@
 <Tabs>
 <Tab title="CLI">
 <Steps>
+<Step title="Get Config Parameters">
+View the required configuration parameters for enabling a trigger by using the show command. For example, this will display what parameters are needed for Github's new star event trigger:
+```Bash
+composio triggers show GITHUB_STAR_ADDED_EVENT
+```
+</Step>
 <Step title="Enable Trigger">
-You need to pass the trigger enum to enable a trigger.
+You need to pass the trigger enum to enable a trigger & you'll be prompted to enter the required parameters.
 ```Bash
 composio triggers enable GITHUB_STAR_ADDED_EVENT
 ``` 
\ No newline at end of file
@@ -19,14 +24,19 @@
 <Step title="Disable Trigger">
 You need to pass the trigger id to disable a trigger. You can get the trigger id from logs (when you enable a trigger) or from the dashboard.
 ```Bash
-composio triggers disable 818bd52e-c527-446b-b2b5-7410db9aa607
+composio triggers disable 818bd52e-c5...
 ```
 </Step>
 </Steps>
 </Tab>
 <Tab title="Python">
 <Steps>
-<Step title="Import packages">
+<Step title="Install required libraries">
+```bash Python
+pip install composio-core
+```
+</Step>
+<Step title="Import libraries">
 ```python
 from composio import ComposioToolSet, App
 ```
\ No newline at end of file
@@ -39,6 +49,25 @@
 trigger_schema = toolset.get_trigger("GITHUB_STAR_ADDED_EVENT")
 print(trigger_schema.config)
 ```
+
+Response:
+```bash {2,5}
+properties={
+  'owner': TriggerConfigPropertyModel(description='Owner of the repository',
+  title='Owner',
+  type='string'),
+  'repo': TriggerConfigPropertyModel(description='Repository name',
+  title='Repo',
+  type='string')
+}
+title='WebhookConfigSchema'
+type='object'
+required=[
+  'owner',
+  'repo'
+]
+```
+Based on the response, we see that the trigger requires two config parameters: the repository **owner** and **repo** name
 </Step>
 <Step title="Enable Trigger">
 You need to pass the trigger enum and the config parameters to enable a trigger, and **trigger id** will be returned.
\ No newline at end of file
@@ -56,47 +85,81 @@
 <Step title="Disable Trigger">
 You need to pass the trigger id to disable a trigger. You can get the trigger id from response (when you enable a trigger) or from the dashboard.
 ```python
-entity.disable_trigger("818bd52e-c527-446b-b2b5-7410db9aa607")
+entity.disable_trigger("818bd52e-c5...")
 ```
 </Step>
 </Steps>
 </Tab>
 <Tab title="JavaScript">
 <Steps>
-<Step title="Import packages & Initialize Toolset">
+<Step title="Install required libraries">
+```bash JavaScript
+npm install composio-core
+```
+</Step>
+<Step title="Import libraries & Initialize Toolset">
 ```javascript
-import { OpenAIToolSet } from "composio-core";
-const toolset = new OpenAIToolSet();
+import { ComposioToolSet } from "composio-core";
+const toolset = new ComposioToolSet();
 ```
 </Step>
 <Step title="Get Config Parameters">
-Triggers have a config schema, which can be obtained by calling the `get_trigger` method and passing the trigger enum.
-```javascript
-coming soon
+Triggers have a config schema, which can be obtained by calling the `getTriggerConfig` method & passing the trigger id.
+```javascript {2}
+const trigger = await toolset.triggers.getTriggerConfig({
+    triggerId: "GITHUB_STAR_ADDED_EVENT"
+})
+console.log(trigger.config)
 ```
+Response:
+```bash {3,8}
+{
+  properties: {
+    owner: {
+      description: 'Owner of the repository',
+      title: 'Owner',
+      type: 'string'
+    },
+    repo: { description: 'Repository name', title: 'Repo', type: 'string' }
+  },
+  required: [ 'owner', 'repo' ],
+  title: 'WebhookConfigSchema',
+  type: 'object'
+}
+```
+Based on the response, we see that the trigger requires two config parameters: the repository **owner** and **repo** name
 </Step>
-<Step title="Enable Trigger">
+<Step title="Setup Trigger">
 You need to pass the trigger enum and the config parameters to enable a trigger, and **trigger id** will be returned.
-<Tip>You can pass entity id to enable trigger for a specific entity. Learn more about entities [here](../auth/connected_account#entities)</Tip>
-```javascript {1}
-const entity = toolset.client.getEntity();
-
+You need to pass the connected account ID, the trigger name and the config parameters to setup a trigger.
+```javascript {3-8}
 (async () => {
-  console.log(
-    "res: ",
-        await entity.setupTrigger("github", "GITHUB_STAR_ADDED_EVENT", {
+    console.log(await toolset.triggers.setup({
+        connectedAccountId: "b8bceb9d-2b6...",
+        triggerName: "GITHUB_STAR_ADDED_EVENT",
+        config: {
             owner: "composiohq",
             repo: "composio",
-        })
-  );
+        }
+    }))
 })();
 ```
+<Info>Setting up a trigger automatically enables it.</Info>
 </Step>
+<Step title="Enable Trigger">
+You need to pass the trigger id to enable a trigger. You can get the trigger id from response (when you create a trigger) or from the dashboard.
+```javascript {2}
+(async () => {
+    console.log(await toolset.triggers.enable({ triggerId: "<triggerId>" }))
+})();
+```
+</Step>
 <Step title="Disable Trigger">
-You need to pass the trigger id to disable a trigger. You can get the trigger id from response (when you enable a trigger) or from the dashboard.
-```javascript
-const res = await entity.disableTrigger("f95b3f90-ea09-4ef2-945c-dce50f9c7eeb")
-console.log(res)
+You need to pass the trigger id to disable a trigger. You can get the trigger id from response (when you create a trigger) or from the dashboard.
+```javascript {2}
+(async () => {
+    console.log(await toolset.triggers.disable({ triggerId: "<triggerId>" }))
+})();
 ```
 </Step>
 </Steps>
\ No newline at end of file
@@ -143,6 +206,9 @@
 </Tab>
 <Tab title="Javascript">
 ```javascript
+import { ComposioToolSet } from "composio-core";
+const toolset = new ComposioToolSet();
+
 toolset.triggers.subscribe(
     (data) => {
         console.log(data);
\ No newline at end of file
@@ -154,4 +220,60 @@
 ```
 </Tab>
 </Tabs>
-<Tip>To learn how to configure and use your own webhooks for listening to triggers, visit our [Webhooks Guide](/patterns/triggers/webhooks).</Tip>
\ No newline at end of file
+Trigger event payload for GitHub's **GITHUB_STAR_ADDED_EVENT** trigger:
+```json
+payload={
+  'action': 'created',
+  'starred_at': '2024-12-11T15:31:26Z',
+  'repository_id': 861033276,
+  'repository_name': 'composio',
+  'repository_url': 'https://github.com/composioHQ/composio/',
+  'starred_by': 'abhishekpatil4',
+  'triggerName': 'GITHUB_STAR_ADDED_EVENT'
+}
+```
+<Tip>To learn how to configure and use your own webhooks for listening to triggers, visit [Webhooks Guide](/patterns/triggers/webhooks).</Tip>
+
+## Listing Triggers
+<Tabs>
+<Tab title="Python">
+```python
+coming soon
+```
+</Tab>
+<Tab title="JavaScript">
+Triggers can be listed and filtered by **triggerIds**, **appNames**, **connectedAccountIds**, **integrationIds** and **showEnabledOnly**.
+```javascript
+import { ComposioToolSet } from "composio-core";
+const toolset = new ComposioToolSet();
+
+const triggers = await toolset.triggers.list({
+    triggerIds: ["<triggerId>"], // array of trigger ids
+    appNames: ["<appName>"], // array of app names
+    connectedAccountIds: ["<connectedAccountId>"], // array of connected account ids
+    integrationIds: ["<integrationId>"], // array of integration ids
+    showEnabledOnly: true // boolean
+});
+```
+</Tab>
+</Tabs>
+
+## Deleting Triggers
+<Tabs>
+<Tab title="Python">
+```python
+coming soon
+```
+</Tab>
+<Tab title="JavaScript">
+You need to pass the trigger ID to delete a trigger. You can get the trigger id from response (when you create a trigger) or from the dashboard.
+```javascript
+import { ComposioToolSet } from "composio-core";
+const toolset = new ComposioToolSet();
+
+(async () => {
+    console.log(await toolset.triggers.delete({ triggerInstanceId: "<triggerId>" }));
+})();
+```
+</Tab>
+</Tabs>
\ No newline at end of file
```
