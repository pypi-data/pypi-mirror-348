```diff
--- test_files/400-original.txt	2025-03-07 19:06:53
+++ test_files/400-modified.txt	2025-03-07 19:06:53
@@ -8,9 +8,9 @@
 import click
 
 from composio.cli.context import Context, login_required, pass_context
+from composio.cli.utils.decorators import handle_exceptions
 from composio.cli.utils.helpfulcmd import HelpfulCmdBase
 from composio.core.cls.did_you_mean import DYMGroup
-from composio.exceptions import ComposioSDKError
 
 
 class IntegrationsExamples(HelpfulCmdBase, DYMGroup):
@@ -23,17 +23,14 @@
         + click.style(
             "              # Add a new integration named GitHub\n", fg="black"
         ),
-        click.style("composio integrations remove --id 123", fg="green")
+        click.style("composio integrations remove 123", fg="green")
         + click.style("                # Remove integration with ID 123\n", fg="black"),
-        click.style("composio integrations update --id 456 --name GitLab", fg="green")
-        + click.style(
-            "  # Update integration with ID 456 to name GitLab\n", fg="black"
-        ),
     ]
 
 
 @click.group(name="integrations", invoke_without_command=True, cls=IntegrationsExamples)
 @click.help_option("--help", "-h", "-help")
+@handle_exceptions()
 @login_required
 @pass_context
 def _integrations(context: Context) -> None:
@@ -41,11 +38,20 @@
     if context.click_ctx.invoked_subcommand:
         return
 
-    try:
-        integrations = context.client.integrations.get()
-        context.console.print("[green]Showing integrations[/green]")
-        for integration in integrations:
-            context.console.print(f"• App: {integration.appName}")
-            context.console.print(f"  ID: {integration.id}")
-    except ComposioSDKError as e:
-        raise click.ClickException(message=e.message) from e
+    integrations = context.client.integrations.get()
+    context.console.print("[green]Showing integrations[/green]")
+    for integration in integrations:
+        context.console.print(f"• App: {integration.appName}")
+        context.console.print(f"  ID: {integration.id}")
+
+
+@_integrations.command(name="remove")
+@click.help_option("--help")
+@click.argument("id", type=str)
+@handle_exceptions()
+@login_required
+@pass_context
+def _remove(context: Context, id: str) -> None:
+    """Remove integration with given ID"""
+    context.client.integrations.remove(id=id)
+    context.console.print(f"[green]Removed integration with {id=}[/green]")
```
