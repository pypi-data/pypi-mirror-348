```diff
--- test_files/452-original.txt	2025-03-07 19:07:01
+++ test_files/452-modified.txt	2025-03-07 19:07:01
@@ -1,8 +1,13 @@
 import { z } from "zod";
 
 export const ZTriggerQuery = z.object({
-  triggerIds: z.array(z.string()).optional().describe("Trigger IDs"),
+  triggerIds: z.array(z.string()).optional().describe("Trigger Instance IDs"),
+  triggerInstanceIds: z
+    .array(z.string())
+    .optional()
+    .describe("Trigger Instance IDs"),
   appNames: z.array(z.string()).optional().describe("App Names in lowercase"),
+  appUniqueKeys: z.array(z.string()).optional().describe("App Unique Keys"),
   connectedAccountIds: z
     .array(z.string())
     .optional()
@@ -21,11 +26,11 @@
 export const ZTriggerSetupParam = z.object({
   connectedAccountId: z.string(),
   triggerName: z.string(),
-  config: z.record(z.unknown()),
+  config: z.record(z.unknown()).optional(),
 });
 
-export type TTriggerListParam = z.infer<typeof ZTriggerQuery>;
-export type TTriggerSetupParam = z.infer<typeof ZTriggerSetupParam>;
+export type TriggerListParam = z.infer<typeof ZTriggerQuery>;
+export type TriggerSetupParam = z.infer<typeof ZTriggerSetupParam>;
 
 export const ZTriggerSubscribeParam = z.object({
   appName: z.string().optional(),
@@ -36,3 +41,31 @@
   triggerData: z.string().optional(),
   entityId: z.string().optional(),
 });
+
+export const ZSingleTriggerParam = z.object({
+  triggerId: z.string().optional(),
+  triggerName: z.string().optional(),
+});
+
+export const ZTriggerInstanceParam = z.object({
+  triggerInstanceId: z.string().optional(),
+  triggerId: z.string().optional(),
+});
+
+export type TriggerSingleParam = z.infer<typeof ZSingleTriggerParam> & {
+  triggerName?: string;
+  /** @deprecated use triggerName field instead */
+  triggerId?: string;
+};
+
+export const ZSingleTriggerRes = z.object({
+  name: z.string(),
+  displayName: z.string(),
+  description: z.string(),
+  type: z.string(),
+  appId: z.string(),
+  appName: z.string(),
+  instructions: z.string().optional(),
+  payload: z.record(z.unknown()),
+  config: z.record(z.unknown()),
+});
```
