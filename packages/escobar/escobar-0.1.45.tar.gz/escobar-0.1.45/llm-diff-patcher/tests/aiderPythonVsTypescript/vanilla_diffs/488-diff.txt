```diff
--- test_files/488-original.txt	2025-03-07 19:07:03
+++ test_files/488-modified.txt	2025-03-07 19:07:03
@@ -1,26 +1,32 @@
-import { describe, it, expect, beforeAll } from "@jest/globals";
-import { Apps } from "./apps";
+import { beforeAll, describe, expect, it } from "@jest/globals";
 import { BACKEND_CONFIG, getTestConfig } from "../../../config/getTestConfig";
-import { BackendClient } from "./backendClient";
+import { AxiosBackendClient } from "./backendClient";
 
 describe("Apps class tests", () => {
-    let backendClient;
-    let testConfig:BACKEND_CONFIG;
+  let _backendClient;
+  let testConfig: BACKEND_CONFIG;
 
-    beforeAll(() => {
-        testConfig = getTestConfig();
-    });
+  beforeAll(() => {
+    testConfig = getTestConfig();
+  });
 
-    it("should create an Apps instance and retrieve apps list", async () => {
-        backendClient = new BackendClient(testConfig.COMPOSIO_API_KEY, testConfig.BACKEND_HERMES_URL);
-    });
+  it("should create an Apps instance and retrieve apps list", async () => {
+    _backendClient = new AxiosBackendClient(
+      testConfig.COMPOSIO_API_KEY,
+      testConfig.BACKEND_HERMES_URL
+    );
+  });
 
-    it("should throw an error if api key is not provided", async () => {
-        expect(() => new BackendClient("", testConfig.BACKEND_HERMES_URL)).toThrow('API Key is required for initializing the client');
-    });
+  it("should throw an error if api key is not provided", async () => {
+    expect(
+      () => new AxiosBackendClient("", testConfig.BACKEND_HERMES_URL)
+    ).toThrow("API key is not available");
+  });
 
-    it("should throw and error if wrong base url is provided", async () => {
-        expect(() => new BackendClient(testConfig.COMPOSIO_API_KEY, "htt://wrong.url")).toThrow('Base URL is not valid');
-    });
-
+  it("should throw and error if wrong base url is provided", async () => {
+    expect(
+      () =>
+        new AxiosBackendClient(testConfig.COMPOSIO_API_KEY, "htt://wrong.url")
+    ).toThrow("ðŸ”— Base URL htt://wrong.url is not valid");
+  });
 });
```
