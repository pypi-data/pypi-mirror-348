```diff
--- test_files/177-original.txt	2025-03-07 19:06:29
+++ test_files/177-modified.txt	2025-03-07 19:06:29
@@ -1,48 +1,39 @@
 """
-CrewAI Send Email with Attachment demo.
+OpenAI Send Email with Attachment demo.
 """
 
 import os
 
 import dotenv
-from crewai import Agent, Crew, Task
-from langchain_openai import ChatOpenAI
+from openai import OpenAI
 
-from composio_crewai import App, ComposioToolSet, Action
+from composio_openai import App, ComposioToolSet
 
 
 # Load environment variables from .env
 dotenv.load_dotenv()
 
 # Initialize tools.
-openai_client = ChatOpenAI(api_key=os.environ["OPENAI_API_KEY"], model="gpt-4-turbo")
+openai_client = OpenAI()
 composio_toolset = ComposioToolSet()
 
-# Get All the tools
+# Get Gmail tools
 tools = composio_toolset.get_tools(apps=[App.GMAIL])
-print(composio_toolset.get_action_schemas(actions=[Action.GMAIL_SEND_EMAIL]))
 
-# Define agent
-crewai_agent = Agent(
-    role="Gmail Agent",
-    goal="""You take action on Gmail using Gmail APIs""",
-    backstory=(
-        "You are AI agent that is responsible for taking actions on Gmail "
-        "on users behalf. You need to take action on Gmail using Gmail APIs"
-    ),
-    verbose=True,
+# Define task
+task = "Send an email to testcomposio@gmail.com with 'send_attachment.py' as attachment."
+
+# Get response from the LLM
+response = openai_client.chat.completions.create(
+    model="gpt-4-turbo-preview",
     tools=tools,
-    llm=openai_client,
+    messages=[
+        {"role": "system", "content": "You are a helpful assistant."},
+        {"role": "user", "content": task},
+    ],
 )
+print(response)
 
-# Define task
-task = Task(
-    description="Send an email to testcomposio@gmail.com with attachment as ./examples/attachment/send_attachment.py",
-    agent=crewai_agent,
-    expected_output="if the email was sent",
-)
-
-my_crew = Crew(agents=[crewai_agent], tasks=[task])
-
-result = my_crew.kickoff()
+# Execute the function calls.
+result = composio_toolset.handle_tool_calls(response)
 print(result)
```
