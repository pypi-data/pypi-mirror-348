# -*- coding: utf-8 -*-

"""
akoyaapisv240

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from akoyaapisv240.api_helper import APIHelper


class MonthAndAmount(object):

    """Implementation of the 'Month and Amount' model.

    Month and amount pair used on IRS Form 1099-K, etc.

    Attributes:
        month (MonthAbbreviation1Enum): Month
        amount (float): Amount

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "month": 'month',
        "amount": 'amount'
    }

    _optionals = [
        'month',
        'amount',
    ]

    def __init__(self,
                 month=APIHelper.SKIP,
                 amount=APIHelper.SKIP):
        """Constructor for the MonthAndAmount class"""

        # Initialize members of the class
        if month is not APIHelper.SKIP:
            self.month = month 
        if amount is not APIHelper.SKIP:
            self.amount = amount 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        month = dictionary.get("month") if dictionary.get("month") else APIHelper.SKIP
        amount = dictionary.get("amount") if dictionary.get("amount") else APIHelper.SKIP
        # Return an object of this model
        return cls(month,
                   amount)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'month={(self.month if hasattr(self, "month") else None)!r}, '
                f'amount={(self.amount if hasattr(self, "amount") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'month={(self.month if hasattr(self, "month") else None)!s}, '
                f'amount={(self.amount if hasattr(self, "amount") else None)!s})')
