# -*- coding: utf-8 -*-

"""
akoyaapisv240

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from akoyaapisv240.api_helper import APIHelper
from akoyaapisv240.configuration import Server
from akoyaapisv240.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from akoyaapisv240.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from akoyaapisv240.models.current_customer import CurrentCustomer
from akoyaapisv240.models.account_contact_entity import AccountContactEntity
from akoyaapisv240.exceptions.api_exception import APIException
from akoyaapisv240.exceptions.error_exception import ErrorException


class CustomersController(BaseController):

    """A Controller to access Endpoints in the akoyaapisv240 API."""
    def __init__(self, config):
        super(CustomersController, self).__init__(config)

    def customer_info(self,
                      version,
                      provider_id,
                      x_akoya_interaction_type=None):
        """Does a GET request to /customers/{version}/{providerId}/current.

        This product supports use cases such as payment enablement, account
        opening, and identity verification. Responses return information about
        the authorized end-user, the customer associated with the `id_token`
        used in the call. This information may include, but is not limited to,
        the customer identifier, name, email, address, and phone number.
        <br>
        To see the response schema, select the `200` response below. For an
        example payload response, see the `200` example response below the
        *Try it* feature. 
        This product requires consumer consent to share all account holder
        information.
        > ðŸ›‘ The `id_token` should be used as the bearer token with this call.
        > 

        Args:
            version (str): Akoya major version number. Do not use minor
                version numbers. For instance, use v2 and not v2.2
            provider_id (str): Id of provider
            x_akoya_interaction_type (XAkoyaInteractionTypeEnum, optional):
                Optional but recommended header to include with each data
                request.  Allowed values are `user` or `batch`.  `user`
                indicates a request is prompted by an end-user action. `batch`
                indicates the request is part of a batch process.

        Returns:
            CurrentCustomer: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/customers/{version}/{providerId}/current')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('version')
                            .value(version)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('providerId')
                            .value(provider_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('x-akoya-interaction-type')
                          .value(x_akoya_interaction_type))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('acgAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CurrentCustomer.from_dictionary)
            .local_error('405', 'Method Not Allowed', APIException)
            .local_error('408', 'Request timed out (round trip call took >10 seconds).', ErrorException)
        ).execute()

    def get_account_holder(self,
                           account_id,
                           version,
                           provider_id,
                           x_akoya_interaction_type=None):
        """Does a GET request to /contacts/{version}/{providerId}/{accountId}.

        This product supports use cases such as payment enablement, account
        opening, identity verification,or lending & credit enhancement.
        Responses return information about the authorized consumer, the
        customer associated with the `id_token` used in the call, and the
        relationship specific to the provided `accountId`.
        > ðŸ“Œ Please note!
        >
        > This endpoint provides additional information which may not be
        required for your use case, making it inefficient compared to the
        [/customer info](https://docs.akoya.com/reference/customer-info)
        endpoint. Please refer to to the [Customers
        guide](https://docs.akoya.com/reference/customers) for more
        information about this endpoint.
        Get account holder information. Based on FDX 5.2.1.
        This product requires consumer consent to share all account holder
        information.
        > ðŸ›‘ The `id_token` should be used as the bearer token with this call.
        > 

        Args:
            account_id (str): Account Identifier
            version (str): Akoya major version number. Do not use minor
                version numbers. For instance, use v2 and not v2.2
            provider_id (str): Id of provider
            x_akoya_interaction_type (XAkoyaInteractionTypeEnum, optional):
                Optional but recommended header to include with each data
                request.  Allowed values are `user` or `batch`.  `user`
                indicates a request is prompted by an end-user action. `batch`
                indicates the request is part of a batch process.

        Returns:
            AccountContactEntity: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/contacts/{version}/{providerId}/{accountId}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('accountId')
                            .value(account_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('version')
                            .value(version)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('providerId')
                            .value(provider_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('x-akoya-interaction-type')
                          .value(x_akoya_interaction_type))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('acgAuth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(AccountContactEntity.from_dictionary)
            .local_error('404', 'Not Found', ErrorException)
            .local_error('405', 'Method Not Allowed', APIException)
            .local_error('408', 'Request timed out (round trip call took >10 seconds).', ErrorException)
        ).execute()
