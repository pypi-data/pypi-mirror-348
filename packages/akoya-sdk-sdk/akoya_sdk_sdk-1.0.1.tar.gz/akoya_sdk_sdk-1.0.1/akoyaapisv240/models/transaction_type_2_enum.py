# -*- coding: utf-8 -*-

"""
akoyaapisv240

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class TransactionType2Enum(object):

    """Implementation of the 'TransactionType2' enum.

    InvestmentTransaction Type

    Attributes:
        PURCHASED: The enum member of type str.
        SOLD: The enum member of type str.
        PURCHASEDTOCOVER: The enum member of type str.
        ADJUSTMENT: The enum member of type str.
        PURCHASETOOPEN: The enum member of type str.
        PURCHASETOCLOSE: The enum member of type str.
        SOLDTOOPEN: The enum member of type str.
        SOLDTOCLOSE: The enum member of type str.
        INTEREST: The enum member of type str.
        MARGININTEREST: The enum member of type str.
        REINVESTOFINCOME: The enum member of type str.
        RETURNOFCAPITAL: The enum member of type str.
        TRANSFER: The enum member of type str.
        CONTRIBUTION: The enum member of type str.
        FEE: The enum member of type str.
        OPTIONEXERCISE: The enum member of type str.
        OPTIONEXPIRATION: The enum member of type str.
        DIVIDEND: The enum member of type str.
        DIVIDENDREINVEST: The enum member of type str.
        SPLIT: The enum member of type str.
        CLOSURE: The enum member of type str.
        INCOME: The enum member of type str.
        EXPENSE: The enum member of type str.
        CLOSUREOPT: The enum member of type str.
        INVEXPENSE: The enum member of type str.
        JRNLSEC: The enum member of type str.
        JRNLFUND: The enum member of type str.
        OTHER: The enum member of type str.
        DIV: The enum member of type str.
        SRVCHG: The enum member of type str.
        DEP: The enum member of type str.
        DEPOSIT: The enum member of type str.
        ATM: The enum member of type str.
        POS: The enum member of type str.
        XFER: The enum member of type str.
        CHECK: The enum member of type str.
        PAYMENT: The enum member of type str.
        CASH: The enum member of type str.
        DIRECTDEP: The enum member of type str.
        DIRECTDEBIT: The enum member of type str.
        REPEATPMT: The enum member of type str.

    """
    _all_values = ['PURCHASED', 'SOLD', 'PURCHASEDTOCOVER', 'ADJUSTMENT', 'PURCHASETOOPEN', 'PURCHASETOCLOSE', 'SOLDTOOPEN', 'SOLDTOCLOSE', 'INTEREST', 'MARGININTEREST', 'REINVESTOFINCOME', 'RETURNOFCAPITAL', 'TRANSFER', 'CONTRIBUTION', 'FEE', 'OPTIONEXERCISE', 'OPTIONEXPIRATION', 'DIVIDEND', 'DIVIDENDREINVEST', 'SPLIT', 'CLOSURE', 'INCOME', 'EXPENSE', 'CLOSUREOPT', 'INVEXPENSE', 'JRNLSEC', 'JRNLFUND', 'OTHER', 'DIV', 'SRVCHG', 'DEP', 'DEPOSIT', 'ATM', 'POS', 'XFER', 'CHECK', 'PAYMENT', 'CASH', 'DIRECTDEP', 'DIRECTDEBIT', 'REPEATPMT']
    PURCHASED = 'PURCHASED'

    SOLD = 'SOLD'

    PURCHASEDTOCOVER = 'PURCHASEDTOCOVER'

    ADJUSTMENT = 'ADJUSTMENT'

    PURCHASETOOPEN = 'PURCHASETOOPEN'

    PURCHASETOCLOSE = 'PURCHASETOCLOSE'

    SOLDTOOPEN = 'SOLDTOOPEN'

    SOLDTOCLOSE = 'SOLDTOCLOSE'

    INTEREST = 'INTEREST'

    MARGININTEREST = 'MARGININTEREST'

    REINVESTOFINCOME = 'REINVESTOFINCOME'

    RETURNOFCAPITAL = 'RETURNOFCAPITAL'

    TRANSFER = 'TRANSFER'

    CONTRIBUTION = 'CONTRIBUTION'

    FEE = 'FEE'

    OPTIONEXERCISE = 'OPTIONEXERCISE'

    OPTIONEXPIRATION = 'OPTIONEXPIRATION'

    DIVIDEND = 'DIVIDEND'

    DIVIDENDREINVEST = 'DIVIDENDREINVEST'

    SPLIT = 'SPLIT'

    CLOSURE = 'CLOSURE'

    INCOME = 'INCOME'

    EXPENSE = 'EXPENSE'

    CLOSUREOPT = 'CLOSUREOPT'

    INVEXPENSE = 'INVEXPENSE'

    JRNLSEC = 'JRNLSEC'

    JRNLFUND = 'JRNLFUND'

    OTHER = 'OTHER'

    DIV = 'DIV'

    SRVCHG = 'SRVCHG'

    DEP = 'DEP'

    DEPOSIT = 'DEPOSIT'

    ATM = 'ATM'

    POS = 'POS'

    XFER = 'XFER'

    CHECK = 'CHECK'

    PAYMENT = 'PAYMENT'

    CASH = 'CASH'

    DIRECTDEP = 'DIRECTDEP'

    DIRECTDEBIT = 'DIRECTDEBIT'

    REPEATPMT = 'REPEATPMT'

    @classmethod
    def validate(cls, value):
        """Validates value contains in enum

        Args:
            value: the value to be validated

        Returns:
            boolean : if value is valid enum values.

        """
        return value in cls._all_values
   