from typing import Any, Iterator, Tuple

class _SwigNonDynamicMeta:
    pass

class SwigPyIterator:
    @property
    def thisown(self) -> Any: ...
    def __sub__(self, n) -> SwigPyIterator: ...

class Database:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def open(self, dbPath, dbArgs=std::string()) -> bool: ...
    def is_loaded(self) -> bool: ...
    def get_entry_point(self) -> ea_t: ...
    @property
    def segments(self) -> Segments: ...
    @property
    def functions(self) -> Functions: ...
    @property
    def basic_blocks(self) -> BasicBlocks: ...
    @property
    def instructions(self) -> Instructions: ...
    @property
    def comments(self) -> Comments: ...
    @property
    def strings(self) -> Strings: ...
    @property
    def names(self) -> Names: ...
    @property
    def types(self) -> Types: ...
    @property
    def bytes(self) -> Bytes: ...
    @property
    def signature_files(self) -> SignaturesFiles: ...
    @property
    def xrefs(self) -> Xrefs: ...

class Segments:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_at(self, ea) -> segment_t: ...
    def get_name(self, segment) -> std::string: ...
    def set_name(self, segment, name) -> bool: ...
    def get_all(self) -> SegmentsIterator: ...

class SegmentsIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_first(self) -> segment_t: ...
    def get_next(self) -> segment_t: ...
    def __iter__(self) -> Iterator[segment_t]: ...

class Functions:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_between(self, start, end) -> FunctionsIterator: ...
    def get_all(self) -> FunctionsIterator: ...
    def get_at(self, ea) -> func_t: ...
    def get_name(self, func) -> std::string: ...
    def set_name(self, func, name) -> bool: ...
    def get_basic_blocks(self, func) -> BasicBlocksIterator: ...
    def get_instructions(self, func) -> InstructionsIterator: ...
    def get_disassembly(self, func) -> StringVector: ...
    def get_pseudocode(self, func) -> StringVector: ...
    def get_signature(self, func) -> std::string: ...
    def matches_signature(self, func, signature) -> bool: ...
    def create(self, ea) -> bool: ...
    def remove(self, ea) -> bool: ...

class FunctionsIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database, start_ea, end_ea) -> None: ...
    def get_first(self) -> func_t: ...
    def get_next(self) -> func_t: ...
    def __iter__(self) -> Iterator[func_t]: ...

class Instructions:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def is_valid(self, insn) -> bool: ...
    def decode(self, ea) -> BoolInsntPair: ...
    def get_disassembly(self, insn) -> BoolStringPair: ...
    def get_between(self, start, end) -> InstructionsIterator: ...

class InstructionsIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database, start_ea, end_ea) -> None: ...
    def get_first(self) -> BoolInsntPair: ...
    def get_next(self) -> BoolInsntPair: ...
    def __iter__(self) -> Iterator[insn_t]: ...

class BasicBlocks:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_instructions(self, block) -> InstructionsIterator: ...
    def get_between(self, start_ea, end_ea) -> BasicBlocksIterator: ...

class BasicBlocksIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database, start_ea, end_ea) -> None: ...
    def get_count(self) -> int: ...
    def get_at_index(self, index) -> qbasic_block_t: ...
    def __iter__(self) -> Iterator[basic_block_t]: ...

class Strings:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_count(self) -> int: ...
    def get_at_index(self, index) -> EAStringPair: ...
    def get_at(self, ea) -> BoolStringPair: ...
    def get_all(self) -> StringsIterator: ...

class StringsIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_first(self) -> EAStringPair: ...
    def get_next(self) -> EAStringPair: ...

class Names:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_at(self, ea) -> BoolStringPair: ...
    def get_count(self) -> int: ...
    def get_at_index(self, index) -> EAStringPair: ...
    def get_all(self) -> NamesIterator: ...

class NamesIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_first(self) -> EAStringPair: ...
    def get_next(self) -> EAStringPair: ...

class Xrefs:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_to(self, ea) -> XrefsToIterator: ...
    def get_from(self, ea) -> XrefsFromIterator: ...

class XrefsIterator:
    @property
    def thisown(self) -> Any: ...

class XrefsToIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database, ea) -> None: ...
    def get_first(self) -> BoolXrefBlkPair: ...
    def get_next(self) -> BoolXrefBlkPair: ...
    def __iter__(self) -> Iterator[xref_t]: ...

class XrefsFromIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database, ea) -> None: ...
    def get_first(self) -> BoolXrefBlkPair: ...
    def get_next(self) -> BoolXrefBlkPair: ...
    def __iter__(self) -> Iterator[xref_t]: ...

class Types:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_type_name(self, ea) -> BoolStringPair: ...
    def apply_named_type(self, ea, type) -> bool: ...
    def get_all(self) -> TypesIterator: ...

class TypesIterator:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_first(self) -> BoolTinfoPair: ...
    def get_next(self) -> BoolTinfoPair: ...
    def __iter__(self) -> Iterator[tinfo_t]: ...

class SignaturesFiles:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_available_sig_files(self) -> StringVector: ...

class Comments:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get(self, ea) -> BoolStringPair: ...
    def set(self, ea, comment) -> bool: ...
    def get_all(self, include_repeatable) -> CommentsIterator: ...

class CommentsIterator:
    @property
    def thisown(self) -> Any: ...
    def Iterator(self, database, include_repeatable=False) -> CommentsIterator: ...
    def get_first(self) -> EAStringPair: ...
    def get_next(self) -> EAStringPair: ...

class Bytes:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, database) -> None: ...
    def get_byte(self, ea) -> BoolUint8Pair: ...
    def get_word(self, ea) -> BoolUint16Pair: ...
    def get_dword(self, ea) -> BoolUint32Pair: ...
    def get_qword(self, ea) -> BoolUint64Pair: ...
    def get_float(self, ea) -> BoolFloatPair: ...
    def get_double(self, ea) -> BoolDoublePair: ...
    def get_disassembly(self, ea) -> BoolStringPair: ...

class VersionInfo:
    @property
    def thisown(self) -> Any: ...

class rangevec_base_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> range_t: ...
    def end(self) -> range_t: ...
    def erase(self, it) -> range_t: ...
    def find(self, x) -> range_t: ...

class array_of_rangesets:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> rangeset_t: ...
    def end(self) -> rangeset_t: ...
    def erase(self, it) -> rangeset_t: ...
    def find(self, x) -> rangeset_t: ...

class range_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def start_ea(self) -> ea_t: ...
    @property
    def end_ea(self) -> ea_t: ...
    def contains(self, ea) -> bool: ...

class rangevec_t:
    def __init__(self) -> None: ...
    def begin(self) -> range_t: ...
    def end(self) -> range_t: ...
    def erase(self, it) -> range_t: ...
    def find(self, x) -> range_t: ...
    @property
    def thisown(self) -> Any: ...

class rangeset_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def add(self, range) -> bool: ...
    def sub(self, range) -> bool: ...
    def has_common(self, range) -> bool: ...
    def contains(self, ea) -> bool: ...

class edge_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def src(self) -> int: ...
    @property
    def dst(self) -> int: ...

class edgevec_t:
    @property
    def thisown(self) -> Any: ...

class node_ordering_t:
    @property
    def thisown(self) -> Any: ...

class node_iterator:
    @property
    def thisown(self) -> Any: ...

class gdl_graph_t:
    @property
    def thisown(self) -> Any: ...

class cancellable_graph_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def cancelled(self) -> bool: ...

class qbasic_block_t:
    @property
    def start_ea(self) -> ea_t: ...
    @property
    def end_ea(self) -> ea_t: ...
    def contains(self, ea) -> bool: ...
    @property
    def thisown(self) -> Any: ...

class qflow_chart_t:
    @property
    def cancelled(self) -> bool: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def title(self) -> qstring: ...
    @property
    def bounds(self) -> range_t: ...
    @property
    def flags(self) -> int: ...
    @property
    def nproper(self) -> int: ...
    def __init__(self) -> None: ...

class BasicBlock:
    pass

class FlowChart:
    @property
    def size(self) -> Any: ...

class dyn_stkpnt_array:
    @property
    def thisown(self) -> Any: ...
    @property
    def count(self) -> size_t: ...

class dyn_regvar_array:
    @property
    def thisown(self) -> Any: ...
    @property
    def count(self) -> size_t: ...

class dyn_range_array:
    @property
    def thisown(self) -> Any: ...
    @property
    def count(self) -> size_t: ...

class dyn_ea_array:
    @property
    def thisown(self) -> Any: ...
    @property
    def count(self) -> size_t: ...

class dyn_regarg_array:
    @property
    def thisown(self) -> Any: ...
    @property
    def count(self) -> size_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def reg(self) -> int: ...
    def __init__(self) -> None: ...

class func_t:
    @property
    def start_ea(self) -> ea_t: ...
    @property
    def end_ea(self) -> ea_t: ...
    def contains(self, ea) -> bool: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def flags(self) -> uint64: ...
    @property
    def frsize(self) -> asize_t: ...
    @property
    def frregs(self) -> ushort: ...
    @property
    def argsize(self) -> asize_t: ...
    @property
    def fpd(self) -> asize_t: ...
    @property
    def color(self) -> bgcolor_t: ...
    @property
    def pntqty(self) -> uint32: ...
    @property
    def regvarqty(self) -> int: ...
    @property
    def regargqty(self) -> int: ...
    @property
    def tailqty(self) -> int: ...
    @property
    def owner(self) -> ea_t: ...
    @property
    def refqty(self) -> int: ...
    @property
    def points(self) -> Any: ...
    @property
    def regvars(self) -> Any: ...
    @property
    def tails(self) -> Any: ...
    @property
    def referers(self) -> Any: ...
    @property
    def regargs(self) -> Any: ...
    @property
    def frame_object(self) -> Any: ...
    @property
    def name(self) -> Any: ...
    @property
    def prototype(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...

class lock_func_with_tails_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...

class func_item_iterator_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...

class func_parent_iterator_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...

class segment_defsr_array:
    @property
    def thisown(self) -> Any: ...
    @property
    def bytes(self) -> Any: ...

class segment_t:
    @property
    def start_ea(self) -> ea_t: ...
    def contains(self, ea) -> bool: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def name(self) -> uval_t: ...
    @property
    def sclass(self) -> uval_t: ...
    @property
    def orgbase(self) -> uval_t: ...
    @property
    def align(self) -> uchar: ...
    @property
    def comb(self) -> uchar: ...
    @property
    def perm(self) -> uchar: ...
    @property
    def bitness(self) -> uchar: ...
    @property
    def defsr(self) -> sel_t [16]: ...
    @property
    def type(self) -> uchar: ...
    @property
    def color(self) -> bgcolor_t: ...
    @property
    def end_ea(self) -> ea_t: ...
    @property
    def defsr(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> direntry_t: ...
    def end(self) -> direntry_t: ...
    def erase(self, it) -> direntry_t: ...
    def find(self, x) -> direntry_t: ...

class dirtree_cursor_vec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> dirtree_cursor_t: ...
    def end(self) -> dirtree_cursor_t: ...
    def erase(self, it) -> dirtree_cursor_t: ...
    def find(self, x) -> dirtree_cursor_t: ...

class direntry_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def idx(self) -> uval_t: ...
    @property
    def isdir(self) -> bool: ...

class dirspec_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def flags(self) -> uint32: ...
    @property
    def id(self) -> qstring: ...

class dirtree_cursor_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def parent(self) -> diridx_t: ...
    @property
    def rank(self) -> size_t: ...

class dirtree_selection_t:
    def __init__(self) -> None: ...
    def begin(self) -> dirtree_cursor_t: ...
    def end(self) -> dirtree_cursor_t: ...
    def erase(self, it) -> dirtree_cursor_t: ...
    def find(self, x) -> dirtree_cursor_t: ...
    @property
    def thisown(self) -> Any: ...

class dirtree_iterator_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def pattern(self) -> qstring: ...
    @property
    def cursor(self) -> dirtree_cursor_t: ...

class dirtree_visitor_t:
    @property
    def thisown(self) -> Any: ...

class dirtree_t:
    @property
    def thisown(self) -> Any: ...
    def get_abspath(self, cursor, name_flags=DTN_FULL_NAME) -> qstring: ...
    def isdir(self, de) -> bool: ...
    def isfile(self, de) -> bool: ...
    def link(self, path) -> dterr_t: ...
    def unlink(self, path) -> dterr_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def type(self) -> atype_t: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def state(self) -> idastate_t: ...
    @property
    def thisown(self) -> Any: ...

class qfile_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def __idc_cvt_id__(self) -> int: ...
    def __init__(self, rhs) -> None: ...

class bpt_vec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> bpt_t: ...
    def end(self) -> bpt_t: ...
    def erase(self, it) -> bpt_t: ...

class tev_reg_values_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> tev_reg_value_t: ...
    def end(self) -> tev_reg_value_t: ...
    def erase(self, it) -> tev_reg_value_t: ...

class tevinforeg_vec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> tev_info_reg_t: ...
    def end(self) -> tev_info_reg_t: ...
    def erase(self, it) -> tev_info_reg_t: ...

class memreg_infos_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> memreg_info_t: ...
    def end(self) -> memreg_info_t: ...
    def erase(self, it) -> memreg_info_t: ...

class bptaddrs_t:
    @property
    def thisown(self) -> Any: ...

class bpt_location_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def info(self) -> ea_t: ...
    @property
    def index(self) -> int: ...
    @property
    def loctype(self) -> bpt_loctype_t: ...

class bpt_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def cb(self) -> size_t: ...
    @property
    def loc(self) -> bpt_location_t: ...
    @property
    def pid(self) -> pid_t: ...
    @property
    def tid(self) -> thid_t: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def type(self) -> bpttype_t: ...
    @property
    def pass_count(self) -> int: ...
    @property
    def flags(self) -> uint32: ...
    @property
    def props(self) -> uint32: ...
    @property
    def size(self) -> int: ...
    @property
    def cndidx(self) -> int: ...
    @property
    def bptid(self) -> inode_t: ...
    def add_bpt(self, ea, size=0, type=BPT_DEFAULT) -> bool: ...
    def request_add_bpt(self, ea, size=0, type=BPT_DEFAULT) -> bool: ...
    def del_bpt(self, ea) -> bool: ...
    def request_del_bpt(self, ea) -> bool: ...
    def enable_bpt(self, ea, enable=True) -> bool: ...
    def disable_bpt(self, ea) -> bool: ...
    def request_enable_bpt(self, ea, enable=True) -> bool: ...
    def request_disable_bpt(self, ea) -> bool: ...

class tev_info_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def type(self) -> tev_type_t: ...
    @property
    def tid(self) -> thid_t: ...
    @property
    def ea(self) -> ea_t: ...

class memreg_info_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def bytes(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def value(self) -> regval_t: ...
    @property
    def reg_idx(self) -> int: ...

class tev_info_reg_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def info(self) -> tev_info_t: ...
    @property
    def registers(self) -> tev_reg_values_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    def set_reg_val(self, regname, value) -> PyObject: ...
    def get_reg_val(self, regname, regval) -> bool: ...

class operands_array:
    @property
    def thisown(self) -> Any: ...
    @property
    def bytes(self) -> Any: ...

class op_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def n(self) -> uchar: ...
    @property
    def type(self) -> optype_t: ...
    @property
    def offb(self) -> char: ...
    @property
    def offo(self) -> char: ...
    @property
    def flags(self) -> uchar: ...
    @property
    def reg(self) -> uint16: ...
    @property
    def phrase(self) -> uint16: ...
    @property
    def specval(self) -> ea_t: ...
    @property
    def specflag1(self) -> char: ...
    @property
    def specflag2(self) -> char: ...
    @property
    def specflag3(self) -> char: ...
    @property
    def specflag4(self) -> char: ...
    @property
    def reg(self) -> Any: ...
    @property
    def phrase(self) -> Any: ...
    @property
    def value(self) -> Any: ...
    @property
    def value64(self) -> Any: ...
    @property
    def addr(self) -> Any: ...
    @property
    def specval(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def ip(self) -> ea_t: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def itype(self) -> uint16: ...
    @property
    def size(self) -> uint16: ...
    @property
    def auxpref(self) -> uint32: ...
    @property
    def auxpref_u16(self) -> uint16 [2]: ...
    @property
    def auxpref_u8(self) -> uint8 [4]: ...
    @property
    def segpref(self) -> char: ...
    @property
    def insnpref(self) -> char: ...
    @property
    def flags(self) -> int16: ...
    @property
    def ops(self) -> op_t [UA_MAXOP]: ...
    def create_op_data(self, ea_, opoff, dtype) -> bool: ...
    def is_canon_insn(self, ph) -> bool: ...
    def get_canon_feature(self, ph) -> uint32: ...
    def get_canon_mnem(self, ph) -> char: ...
    @property
    def ops(self) -> Any: ...
    @property
    def Op1(self) -> Any: ...
    @property
    def Op2(self) -> Any: ...
    @property
    def Op3(self) -> Any: ...
    @property
    def Op4(self) -> Any: ...
    @property
    def Op5(self) -> Any: ...
    @property
    def Op6(self) -> Any: ...
    @property
    def Op7(self) -> Any: ...
    @property
    def Op8(self) -> Any: ...
    @property
    def auxpref(self) -> Any: ...
    def map_data_ea(self, insn, addr, opnum=-1) -> ea_t: ...
    def map_code_ea(self, insn, addr, opnum) -> ea_t: ...
    def map_ea(self, insn, op, iscode) -> ea_t: ...

class outctx_base_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def insn_ea(self) -> ea_t: ...
    @property
    def outbuf(self) -> qstring: ...
    @property
    def F32(self) -> flags_t: ...
    @property
    def default_lnnum(self) -> int: ...

class outctx_t:
    @property
    def insn_ea(self) -> ea_t: ...
    @property
    def outbuf(self) -> qstring: ...
    @property
    def F32(self) -> flags_t: ...
    @property
    def default_lnnum(self) -> int: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def bin_ea(self) -> ea_t: ...
    @property
    def bin_state(self) -> char: ...
    @property
    def gl_bpsize(self) -> int: ...
    @property
    def bin_width(self) -> int: ...
    @property
    def insn(self) -> insn_t: ...
    @property
    def curlabel(self) -> qstring: ...
    @property
    def saved_immvals(self) -> uval_t [UA_MAXOP]: ...
    @property
    def prefix_ea(self) -> ea_t: ...
    @property
    def next_line_ea(self) -> ea_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def reserved(self) -> size_t: ...
    def construct_macro(self, _this, insn, enable) -> bool: ...

class xreflist_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> xreflist_entry_t: ...
    def end(self) -> xreflist_entry_t: ...
    def erase(self, it) -> xreflist_entry_t: ...
    def find(self, x) -> xreflist_entry_t: ...

class stkpnt_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def spd(self) -> sval_t: ...

class stkpnts_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def find_regvar(self, pfn, ea1, ea2, canon, user) -> regvar_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def opnum(self) -> uchar: ...
    @property
    def type(self) -> uchar: ...
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> qvector<: ...
    def end(self) -> qvector<: ...
    def erase(self, it) -> qvector<: ...
    def find(self, x) -> qvector<: ...

class loader_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def version(self) -> uint32: ...
    @property
    def flags(self) -> uint32: ...

class idp_name_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def lname(self) -> qstring: ...
    @property
    def sname(self) -> qstring: ...
    @property
    def hidden(self) -> bool: ...

class idp_desc_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def path(self) -> qstring: ...
    @property
    def mtime(self) -> time_t: ...
    @property
    def family(self) -> qstring: ...
    @property
    def names(self) -> idp_names_t: ...
    @property
    def is_script(self) -> bool: ...
    @property
    def checked(self) -> bool: ...

class plugin_info_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def org_hotkey(self) -> ushort: ...
    @property
    def hotkey(self) -> ushort: ...
    @property
    def arg(self) -> size_t: ...
    @property
    def dllmem(self) -> idadll_t: ...
    @property
    def flags(self) -> int: ...
    @property
    def idaplg_name(self) -> qstring: ...

class snapshot_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def id(self) -> qtime64_t: ...
    @property
    def flags(self) -> uint16: ...
    @property
    def desc(self) -> char [128]: ...
    @property
    def filename(self) -> char [QMAXPATH]: ...
    @property
    def children(self) -> snapshots_t: ...
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> ea_name_t: ...
    def end(self) -> ea_name_t: ...
    def erase(self, it) -> ea_name_t: ...

class ea_name_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def name(self) -> qstring: ...
    def __init__(self) -> None: ...

class NearestName:
    @property
    def thisown(self) -> Any: ...
    @property
    def vtype(self) -> char: ...
    @property
    def num(self) -> sval_t: ...
    @property
    def e(self) -> fpvalue_t: ...
    @property
    def funcidx(self) -> int: ...
    @property
    def i64(self) -> int64: ...
    def __init__(self, n=0) -> None: ...
    @property
    def str(self) -> Any: ...

class idc_global_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def name(self) -> qstring: ...
    @property
    def value(self) -> idc_value_t: ...
    def __init__(self) -> None: ...

class highlighter_cbs_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> idc_value_t: ...
    def end(self) -> idc_value_t: ...
    def erase(self, it) -> idc_value_t: ...

class _IdcFunction:
    @property
    def fp_ptr(self) -> Any: ...

class fixup_data_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def sel(self) -> sel_t: ...
    @property
    def off(self) -> ea_t: ...
    @property
    def displacement(self) -> adiff_t: ...
    def __init__(self) -> None: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def fd(self) -> fixup_data_t: ...
    def create_undo_point(self, action_name, label) -> bool: ...

class idasgn_header_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def magic(self) -> char [6]: ...
    @property
    def version(self) -> uchar: ...
    @property
    def processor_id(self) -> uchar: ...
    @property
    def file_formats(self) -> uint32: ...
    @property
    def ostype(self) -> uint16: ...
    @property
    def apptype(self) -> uint16: ...
    @property
    def flags(self) -> uint16: ...
    @property
    def number_of_modules_v5(self) -> uint16: ...
    @property
    def ctype_crc(self) -> uint16: ...
    @property
    def ctype_name(self) -> char [12]: ...
    @property
    def libname_length(self) -> uchar: ...
    @property
    def ctype_crc_alt(self) -> uint16: ...
    @property
    def number_of_modules(self) -> uint32: ...
    @property
    def pattern_length(self) -> uint16: ...
    @property
    def ctype_crc_3v(self) -> uint16: ...
    def calc_target(self, frm, opval, ri) -> ea_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def minlen(self) -> sval_t: ...
    @property
    def display_only_existing_strings(self) -> uchar: ...
    @property
    def only_7bit(self) -> uchar: ...
    @property
    def ignore_heads(self) -> uchar: ...
    @property
    def strtypes(self) -> Any: ...

class string_info_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def ea(self) -> ea_t: ...
    @property
    def length(self) -> int: ...
    @property
    def type(self) -> int: ...
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> tryblk_t: ...
    def end(self) -> tryblk_t: ...
    def erase(self, it) -> tryblk_t: ...
    def find(self, x) -> tryblk_t: ...

class catchvec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> catch_t: ...
    def end(self) -> catch_t: ...
    def erase(self, it) -> catch_t: ...
    def find(self, x) -> catch_t: ...

class try_handler_t:
    def __init__(self) -> None: ...
    def begin(self) -> range_t: ...
    def end(self) -> range_t: ...
    def erase(self, it) -> range_t: ...
    def find(self, x) -> range_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def disp(self) -> sval_t: ...
    @property
    def fpreg(self) -> int: ...

class seh_t:
    def __init__(self) -> None: ...
    def begin(self) -> range_t: ...
    def end(self) -> range_t: ...
    def erase(self, it) -> range_t: ...
    def find(self, x) -> range_t: ...
    @property
    def disp(self) -> sval_t: ...
    @property
    def fpreg(self) -> int: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def filter(self) -> rangevec_t: ...
    @property
    def seh_code(self) -> ea_t: ...

class catch_t:
    def __init__(self) -> None: ...
    def begin(self) -> range_t: ...
    def end(self) -> range_t: ...
    def erase(self, it) -> range_t: ...
    def find(self, x) -> range_t: ...
    @property
    def disp(self) -> sval_t: ...
    @property
    def fpreg(self) -> int: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def obj(self) -> sval_t: ...
    @property
    def type_id(self) -> sval_t: ...

class tryblk_t:
    def begin(self) -> range_t: ...
    def end(self) -> range_t: ...
    def erase(self, it) -> range_t: ...
    def find(self, x) -> range_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def level(self) -> uchar: ...
    def __init__(self) -> None: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def cases(self) -> casevec_t: ...
    @property
    def targets(self) -> eavec_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def frm(self) -> ea_t: ...
    @property
    def to(self) -> ea_t: ...
    @property
    def iscode(self) -> bool: ...
    @property
    def type(self) -> uchar: ...
    @property
    def user(self) -> bool: ...
    @property
    def _flags(self) -> uchar: ...
    def next_from(self) -> bool: ...
    def next_to(self) -> bool: ...

class _xref:
    pass

class casevec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> qvector<: ...
    def end(self) -> qvector<: ...
    def erase(self, it) -> qvector<: ...
    def find(self, x) -> qvector<: ...
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> funcarg_t: ...
    def end(self) -> funcarg_t: ...
    def erase(self, it) -> funcarg_t: ...
    def find(self, x) -> funcarg_t: ...

class reginfovec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> qvector<: ...
    def end(self) -> qvector<: ...
    def erase(self, it) -> qvector<: ...
    def find(self, x) -> qvector<: ...

class edmvec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> edm_t: ...
    def end(self) -> edm_t: ...
    def erase(self, it) -> edm_t: ...
    def find(self, x) -> edm_t: ...

class argpartvec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> argpart_t: ...
    def end(self) -> argpart_t: ...
    def erase(self, it) -> argpart_t: ...
    def find(self, x) -> argpart_t: ...

class valstrvec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> valstr_t: ...
    def end(self) -> valstr_t: ...
    def erase(self, it) -> valstr_t: ...

class regobjvec_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> regobj_t: ...
    def end(self) -> regobj_t: ...
    def erase(self, it) -> regobj_t: ...

class type_attrs_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> type_attr_t: ...
    def end(self) -> type_attr_t: ...
    def erase(self, it) -> type_attr_t: ...

class udtmembervec_template_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    def begin(self) -> udm_t: ...
    def end(self) -> udm_t: ...
    def erase(self, it) -> udm_t: ...
    def find(self, x) -> udm_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def key(self) -> qstring: ...
    @property
    def value(self) -> bytevec_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def nbases(self) -> int: ...
    @property
    def flags(self) -> uint32: ...
    @property
    def nrefs(self) -> int: ...
    @property
    def nstreams(self) -> int: ...
    @property
    def type_names(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def off(self) -> sval_t: ...
    @property
    def reg(self) -> int: ...

class argloc_t:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...

class argpart_t:
    def __init__(self) -> None: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def off(self) -> ushort: ...
    @property
    def size(self) -> ushort: ...
    def __init__(self, a) -> None: ...

class scattered_aloc_t:
    def __init__(self) -> None: ...
    def begin(self) -> argpart_t: ...
    def end(self) -> argpart_t: ...
    def erase(self, it) -> argpart_t: ...
    def find(self, x) -> argpart_t: ...
    @property
    def thisown(self) -> Any: ...

class aloc_visitor_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...

class callregs_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def policy(self) -> argreg_policy_t: ...
    @property
    def nregs(self) -> int: ...
    @property
    def gpregs(self) -> intvec_t: ...
    @property
    def fpregs(self) -> intvec_t: ...
    def __init__(self) -> None: ...
    @property
    def thisown(self) -> Any: ...
    def get_named_type(self, til, name, decl_type=BTF_TYPEDEF, resolve=True, try_ordinal=True) -> bool: ...
    def get_numbered_type(self, til, ordinal, decl_type=BTF_TYPEDEF, resolve=True) -> bool: ...
    def find_udm(self, udm, strmem_flags) -> int: ...
    def get_udm(self, name) -> int: ...
    def create_ptr(self, p, decl_type=BT_PTR) -> bool: ...
    def create_array(self, p, decl_type=BT_ARRAY) -> bool: ...
    def create_typedef(self, p, decl_type=BTF_TYPEDEF, try_ordinal=True) -> bool: ...
    def create_bitfield(self, p, decl_type=BT_BITFIELD) -> bool: ...
    def create_udt(self, is_union=False) -> bool: ...
    def create_enum(self, bte=BTE_ALWAYS|BTE_HEX) -> bool: ...
    def add_udm(self, udm, etf_flags=0, times=1, idx=-1) -> tinfo_code_t: ...
    def add_edm(self, edm, bmask=bmask64_t(-1), etf_flags=0, idx=-1) -> tinfo_code_t: ...
    def del_edm(self, idx, etf_flags=0) -> tinfo_code_t: ...
    def deserialize(self, til, ptype, pfields=None, pfldcmts=None, cmt=None) -> bool: ...
    def get_edm(self, name) -> ssize_t: ...
    def find_edm(self, edm, value, bmask=DEFMASK64, serial=0) -> ssize_t: ...

class simd_info_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def tif(self) -> tinfo_t: ...
    @property
    def size(self) -> uint16: ...
    @property
    def memtype(self) -> type_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def obj_type(self) -> tinfo_t: ...
    @property
    def closure(self) -> tinfo_t: ...
    @property
    def parent(self) -> tinfo_t: ...
    @property
    def delta(self) -> int32: ...
    @property
    def based_ptr_size(self) -> uchar: ...
    @property
    def taptr_bits(self) -> uchar: ...

class array_type_data_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def elem_type(self) -> tinfo_t: ...
    @property
    def base(self) -> uint32: ...
    @property
    def nelems(self) -> uint32: ...

class funcarg_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def argloc(self) -> argloc_t: ...
    @property
    def name(self) -> qstring: ...
    @property
    def cmt(self) -> qstring: ...
    @property
    def type(self) -> tinfo_t: ...
    @property
    def flags(self) -> uint32: ...
    def __init__(self) -> None: ...

class func_type_data_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def flags(self) -> int: ...
    @property
    def rettype(self) -> tinfo_t: ...
    @property
    def retloc(self) -> argloc_t: ...
    @property
    def stkargs(self) -> uval_t: ...
    @property
    def spoiled(self) -> reginfovec_t: ...
    @property
    def cc(self) -> cm_t: ...

class stkarg_area_info_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def cb(self) -> size_t: ...
    @property
    def stkarg_offset(self) -> sval_t: ...
    @property
    def shadow_size(self) -> sval_t: ...
    @property
    def linkage_area(self) -> sval_t: ...

class edm_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def name(self) -> qstring: ...
    @property
    def cmt(self) -> qstring: ...
    @property
    def value(self) -> uint64: ...
    def __init__(self) -> None: ...

class enum_type_data_t:
    def __init__(self) -> None: ...
    def begin(self) -> edm_t: ...
    def end(self) -> edm_t: ...
    def erase(self, it) -> edm_t: ...
    def find(self, x) -> edm_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def group_sizes(self) -> intvec_t: ...
    @property
    def taenum_bits(self) -> uint32: ...
    @property
    def bte(self) -> bte_t: ...
    def find_member(self, name, frm=0, to=size_t(-1)) -> ssize_t: ...
    def get_constant_group(self, group_start_index, group_size, idx) -> bool: ...

class typedef_type_data_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def ordinal(self) -> uint32: ...
    @property
    def is_ordref(self) -> bool: ...
    @property
    def resolve(self) -> bool: ...
    def __init__(self, _til, _name, _resolve=False) -> None: ...

class custom_data_type_info_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def dtid(self) -> int16: ...
    @property
    def fid(self) -> int16: ...

class value_repr_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def bits(self) -> uint64: ...
    @property
    def ri(self) -> refinfo_t: ...
    @property
    def strtype(self) -> int32: ...
    @property
    def delta(self) -> adiff_t: ...
    @property
    def type_ordinal(self) -> uint32: ...
    @property
    def cd(self) -> custom_data_type_info_t: ...
    @property
    def ap(self) -> array_parameters_t: ...

class udm_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def offset(self) -> uint64: ...
    @property
    def size(self) -> uint64: ...
    @property
    def name(self) -> qstring: ...
    @property
    def cmt(self) -> qstring: ...
    @property
    def type(self) -> tinfo_t: ...
    @property
    def repr(self) -> value_repr_t: ...
    @property
    def effalign(self) -> int: ...
    @property
    def tafld_bits(self) -> uint32: ...
    @property
    def fda(self) -> uchar: ...
    def __init__(self) -> None: ...

class udtmembervec_t:
    def __init__(self) -> None: ...
    def begin(self) -> udm_t: ...
    def end(self) -> udm_t: ...
    def erase(self, it) -> udm_t: ...
    def find(self, x) -> udm_t: ...
    @property
    def key(self) -> qstring: ...
    @property
    def value(self) -> bytevec_t: ...
    @property
    def nbases(self) -> int: ...
    @property
    def flags(self) -> uint32: ...
    @property
    def nrefs(self) -> int: ...
    @property
    def nstreams(self) -> int: ...
    @property
    def type_names(self) -> Any: ...
    @property
    def off(self) -> sval_t: ...
    @property
    def reg(self) -> int: ...
    @property
    def thisown(self) -> Any: ...

class udt_type_data_t:
    def __init__(self) -> None: ...
    def begin(self) -> udm_t: ...
    def end(self) -> udm_t: ...
    def erase(self, it) -> udm_t: ...
    def find(self, x) -> udm_t: ...
    @property
    def key(self) -> qstring: ...
    @property
    def value(self) -> bytevec_t: ...
    @property
    def nbases(self) -> int: ...
    @property
    def flags(self) -> uint32: ...
    @property
    def nrefs(self) -> int: ...
    @property
    def nstreams(self) -> int: ...
    @property
    def type_names(self) -> Any: ...
    @property
    def off(self) -> sval_t: ...
    @property
    def reg(self) -> int: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def total_size(self) -> size_t: ...
    @property
    def unpadded_size(self) -> size_t: ...
    @property
    def effalign(self) -> uint32: ...
    @property
    def taudt_bits(self) -> uint32: ...
    @property
    def version(self) -> uchar: ...
    @property
    def sda(self) -> uchar: ...
    @property
    def pack(self) -> uchar: ...
    @property
    def is_union(self) -> bool: ...
    def find_member(self, pattern_udm, strmem_flags) -> ssize_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def nbytes(self) -> uchar: ...
    @property
    def width(self) -> uchar: ...
    @property
    def is_unsigned(self) -> bool: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def type(self) -> tinfo_t: ...
    @property
    def name(self) -> qstring: ...
    @property
    def cmt(self) -> qstring: ...
    @property
    def flags(self) -> int: ...

class tinfo_visitor_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def state(self) -> int: ...

class regobj_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def regidx(self) -> int: ...
    @property
    def relocate(self) -> int: ...
    @property
    def value(self) -> bytevec_t: ...

class regobjs_t:
    def __init__(self) -> None: ...
    def begin(self) -> regobj_t: ...
    def end(self) -> regobj_t: ...
    def erase(self, it) -> regobj_t: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def reserved(self) -> size_t: ...
    @property
    def thisown(self) -> Any: ...

class ida_lowertype_helper_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def oneline(self) -> qstring: ...
    @property
    def length(self) -> size_t: ...
    @property
    def props(self) -> int: ...

class valstrs_t:
    def __init__(self) -> None: ...
    def begin(self) -> valstr_t: ...
    def end(self) -> valstr_t: ...
    def erase(self, it) -> valstr_t: ...
    @property
    def thisown(self) -> Any: ...

class text_sink_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...

class predicate_t:
    @property
    def thisown(self) -> Any: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def cb(self) -> size_t: ...
    @property
    def tif(self) -> tinfo_t: ...
    @property
    def cursor(self) -> tif_cursor_t: ...
    @property
    def ordinal(self) -> uint32: ...
    @property
    def is_writable(self) -> bool: ...
    @property
    def is_detached(self) -> bool: ...
    @property
    def is_forward(self) -> bool: ...
    @property
    def kind(self) -> type_t: ...
    @property
    def memidx(self) -> ssize_t: ...
    @property
    def nmembers(self) -> size_t: ...
    @property
    def udm(self) -> udm_t: ...
    @property
    def total_size(self) -> size_t: ...
    @property
    def unpadded_size(self) -> size_t: ...
    @property
    def last_udm_offset(self) -> uint64: ...
    @property
    def bucket_start(self) -> uint64: ...
    @property
    def bf_bitoff(self) -> int: ...
    @property
    def offset(self) -> uint64: ...
    @property
    def edm(self) -> edm_t: ...

class _wrap_cvar:
    pass

class sreg_range_t:
    @property
    def start_ea(self) -> ea_t: ...
    @property
    def end_ea(self) -> ea_t: ...
    def contains(self, ea) -> bool: ...
    @property
    def thisown(self) -> Any: ...
    @property
    def val(self) -> sel_t: ...
    @property
    def tag(self) -> uchar: ...

class netnode:
    @property
    def thisown(self) -> Any: ...
    def __init__(self, num=nodeidx_t(-1)) -> None: ...
    def create(self, _name, namlen=0) -> bool: ...
    def altdel(self, alt, tag=atag) -> bool: ...
    def supdel(self, alt, tag=stag) -> bool: ...
    def __eq__(self, n) -> bool: ...
    def __ne__(self, n) -> bool: ...
    def supset(self, alt, value, tag=stag) -> bool: ...
    def supset_ea(self, ea, value, tag=stag) -> bool: ...

class InstructionsVector:
    @property
    def thisown(self) -> Any: ...
    def __getitem__(self, slice) -> InstructionsVector: ...
    def erase(self, pos) -> std::vector<: ...
    def __init__(self) -> None: ...
    def insert(self, pos, x) -> std::vector<: ...

class BasicBlocksVector:
    @property
    def thisown(self) -> Any: ...
    def __getitem__(self, slice) -> BasicBlocksVector: ...
    def erase(self, pos) -> std::vector<: ...
    def __init__(self) -> None: ...
    def insert(self, pos, x) -> std::vector<: ...

class StringVector:
    @property
    def thisown(self) -> Any: ...
    def __getitem__(self, slice) -> StringVector: ...
    def erase(self, pos) -> std::vector<: ...
    def __init__(self) -> None: ...
    def insert(self, pos, x) -> std::vector<: ...

class EAVector:
    @property
    def thisown(self) -> Any: ...
    def __getitem__(self, slice) -> EAVector: ...
    def erase(self, pos) -> std::vector<: ...
    def __init__(self) -> None: ...
    def insert(self, pos, x) -> std::vector<: ...

class EAStringPair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> unsigned long long: ...
    @property
    def second(self) -> std::string: ...

class EAStringPairVector:
    @property
    def thisown(self) -> Any: ...
    def __getitem__(self, slice) -> EAStringPairVector: ...
    def erase(self, long, pos) -> std::vector<: ...
    def __init__(self) -> None: ...
    def insert(self, long, pos, x) -> std::vector<: ...

class ByteVector:
    @property
    def thisown(self) -> Any: ...
    def __getitem__(self, slice) -> ByteVector: ...
    def erase(self, pos) -> std::vector<: ...
    def __init__(self) -> None: ...
    def insert(self, pos, x) -> std::vector<: ...

class BoolXrefBlkPair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> xrefblk_t: ...

class BoolInsntPair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> insn_t: ...

class BoolTinfoPair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> tinfo_t: ...

class BoolStringPair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> std::string: ...

class BoolUint8Pair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> unsigned char: ...

class BoolUint16Pair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> unsigned short: ...

class BoolUint32Pair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> unsigned int: ...

class BoolUint64Pair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> unsigned long long: ...

class BoolFloatPair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> float: ...

class BoolDoublePair:
    @property
    def thisown(self) -> Any: ...
    def __init__(self) -> None: ...
    @property
    def first(self) -> bool: ...
    @property
    def second(self) -> double: ...

