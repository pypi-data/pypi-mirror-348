name: Update Data

on:
  schedule:
    - cron: '0 0 */7 * *'  # 每7天的 UTC 0:00 运行 / Run at UTC 0:00 every 7 days
  workflow_dispatch:      # 允许手动触发 / Allow manual trigger

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # 添加写入权限 / Add write permission
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0   # 获取完整历史 / Fetch complete history
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'     # 启用 pip 缓存 / Enable pip cache
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          echo "警告：未找到 requirements.txt / Warning: requirements.txt not found"
          # 安装基本依赖 / Install basic dependencies
          pip install requests beautifulsoup4 lxml
        fi
        
    - name: List directory structure
      run: |
        echo "当前工作目录 / Current working directory:"
        pwd
        echo "\n仓库根目录内容 / Repository root contents:"
        ls -la
        echo "\nconfig 目录内容 / Config directory contents:"
        ls -la config || echo "config directory not found"
        echo "\nconfig/data 目录内容 / Config/data directory contents:"
        ls -la config/data || echo "config/data directory not found"
        
    - name: Verify Python environment
      run: |
        echo "Python 版本 / Python version:"
        python --version
        echo "\nPip 版本 / Pip version:"
        pip --version
        echo "\n已安装的包 / Installed packages:"
        pip list
        
    - name: Update data files
      run: |
        cd config/data
        
        # 检查所需文件 / Check required files
        required_files=(
          "update_data.py"
          "fetch_and_save_user_agents.py"
          "fetch_and_save_user_domain.py"
        )
        
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "错误：找不到文件 / Error: File not found: $file"
            exit 1
          fi
        done
        
        # 添加执行权限 / Add execute permissions
        chmod +x *.py
        
        # 运行更新脚本 / Run update script
        if ! python update_data.py; then
          echo "错误：更新脚本执行失败 / Error: Update script execution failed"
          exit 1
        fi
        
    - name: Check for changes
      id: check_changes
      run: |
        if ! git diff --quiet; then
          echo "检测到变更 / Changes detected"
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "未检测到变更 / No changes detected"
        fi
        
    - name: Commit and push if changes
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # 检查文件是否存在 / Check if files exist
        for file in "config/data/all_domain.txt" "config/data/user_agents.txt"; do
          if [ ! -f "$file" ]; then
            echo "错误：找不到文件 / Error: File not found: $file"
            exit 1
          fi
        done
        
        # 添加并提交变更 / Add and commit changes
        git add config/data/all_domain.txt config/data/user_agents.txt
        current_date=$(date '+%Y-%m-%d')
        
        # 获取变更统计信息 / Get change statistics
        ua_changes=$(git diff --numstat config/data/user_agents.txt | awk '{print $1 + $2}' || echo "0")
        domain_changes=$(git diff --numstat config/data/all_domain.txt | awk '{print $1 + $2}' || echo "0")
        
        git commit -m "chore(data): 📊 数据文件自动更新 / Auto-update data files [$current_date]

        🔄 更新统计 / Update Statistics:
        --------------------------------
        📱 User-Agent 变更: ${ua_changes} 行 / User-Agent changes: ${ua_changes} lines
        🌐 域名列表变更: ${domain_changes} 行 / Domain list changes: ${domain_changes} lines

        📝 更新内容 / Update Content:
        --------------------------------
        1. User-Agent 列表更新 / User-Agent List Update
           - 从 whatmyuseragent.com 获取最新 Chrome UA
           - 仅保留桌面版本
           - 移除重复项

        2. Google 域名列表更新 / Google Domain List Update
           - 更新搜索域名列表
           - 优化域名排序

        ⏰ 自动更新频率：每7天 / Auto-update frequency: Every 7 days
        🤖 由 GitHub Actions 自动生成 / Auto-generated by GitHub Actions
        [skip ci]"
        
        # 推送变更 / Push changes
        if ! git push; then
          echo "错误：推送变更失败 / Error: Failed to push changes"
          exit 1
        fi 