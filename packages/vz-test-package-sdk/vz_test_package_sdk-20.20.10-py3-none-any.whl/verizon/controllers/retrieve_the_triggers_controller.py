# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.trigger_value_response import TriggerValueResponse
from verizon.models.trigger_value_response_2 import TriggerValueResponse2
from verizon.exceptions.default_response_exception import DefaultResponseException


class RetrieveTheTriggersController(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(RetrieveTheTriggersController, self).__init__(config)

    def get_all_available_triggers(self):
        """Does a GET request to /m2m/v2/triggers.

        Retrieves all of the available triggers for pseudo-MDN.

        Returns:
            TriggerValueResponse: Response from the API. Status of Request

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v2/triggers')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(TriggerValueResponse.from_dictionary)
            .local_error('default', 'Error response', DefaultResponseException)
        ).execute()

    def get_all_triggers_by_account_name(self,
                                         account_name):
        """Does a GET request to /m2m/v2/triggers/accounts/{accountName}.

        Retrieve the triggers associated with an account name.

        Args:
            account_name (str): The account name

        Returns:
            TriggerValueResponse: Response from the API. Status of Request

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v2/triggers/accounts/{accountName}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('accountName')
                            .value(account_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(TriggerValueResponse.from_dictionary)
            .local_error('default', 'Error response', DefaultResponseException)
        ).execute()

    def get_all_triggers_by_trigger_category(self):
        """Does a GET request to /m2m/v2/triggers/categories/PromoAlerts.

        Retrieves all of the triggers for the specified account associated
        with the PromoAlert category

        Returns:
            TriggerValueResponse2: Response from the API. Request response

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v2/triggers/categories/PromoAlerts')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(TriggerValueResponse2.from_dictionary)
            .local_error('default', 'Error response', DefaultResponseException)
        ).execute()
