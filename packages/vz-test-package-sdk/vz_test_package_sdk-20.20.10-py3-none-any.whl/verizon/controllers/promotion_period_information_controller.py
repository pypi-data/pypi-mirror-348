# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.responseto_usage_query import ResponsetoUsageQuery
from verizon.models.m_201_success import M201success
from verizon.exceptions.default_response_exception import DefaultResponseException


class PromotionPeriodInformationController(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(PromotionPeriodInformationController, self).__init__(config)

    def get_promo_device_usage_history(self,
                                       body):
        """Does a POST request to /m2m/v1/devices/usage/actions/promodeviceusage.

        Retrieves the usage history of a device during the promotion period.

        Args:
            body (ARequestBodyforUsage): Retrieve Aggregate Usage

        Returns:
            ResponsetoUsageQuery: Response from the API. Usage History

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/usage/actions/promodeviceusage')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ResponsetoUsageQuery.from_dictionary)
            .local_error('default', 'All error responses will be in this format', DefaultResponseException)
        ).execute()

    def get_promo_device_aggregate_usage_history(self,
                                                 body):
        """Does a POST request to /m2m/v1/devices/usage/actions/promoaggregateusage.

        Retrieves the aggregate usage for an account using pseudo-MDN during
        the promotional period using a callback.

        Args:
            body (RequestBodyforUsage): Retrieve Aggregate Usage

        Returns:
            M201success: Response from the API. Request response

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/usage/actions/promoaggregateusage')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M201success.from_dictionary)
            .local_error('default', 'Error response', DefaultResponseException)
        ).execute()
