# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.campaigns_firmware_response import CampaignsFirmwareResponse
from verizon.models.campaigns_firmware_response_1 import CampaignsFirmwareResponse1
from verizon.models.campaigns_firmware_dates_response import CampaignsFirmwareDatesResponse
from verizon.models.campaigns_response_4 import CampaignsResponse4
from verizon.models.campaigns_response_5 import CampaignsResponse5
from verizon.exceptions.campaigns_firmware_400_error_exception import CampaignsFirmware400ErrorException
from verizon.exceptions.campaigns_firmware_dates_400_error_exception import CampaignsFirmwareDates400ErrorException
from verizon.exceptions.campaigns_400_error_5_exception import Campaigns400Error5Exception


class CampaignsV3Controller(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(CampaignsV3Controller, self).__init__(config)

    def post_schedule_campaign_firmware_upgrade(self,
                                                account_name,
                                                body):
        """Does a POST request to /campaigns/firmware/{accountName}.

        This endpoint allows a user to schedule a firmware upgrade for a list
        of devices.

        Args:
            account_name (str): Account identifier.
            body (CampaignsFirmwareRequest): Firmware upgrade information.

        Returns:
            CampaignsFirmwareResponse: Response from the API. Return upgrade
                information.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/campaigns/firmware/{accountName}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('accountName')
                            .value(account_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CampaignsFirmwareResponse.from_dictionary)
            .local_error('400', 'Unexpected error.', CampaignsFirmware400ErrorException)
        ).execute()

    def put_update_campaign_firmware_devices(self,
                                             acc,
                                             campaign_id,
                                             body):
        """Does a PUT request to /campaigns/firmware/{acc}/{campaignId}.

        This endpoint allows user to Add or Remove devices to an existing
        campaign.

        Args:
            acc (str): Account identifier.
            campaign_id (str): Unique identifier of a campaign.
            body (CampaignsFirmwareRequest1): Add or remove device to existing
                upgrade information.

        Returns:
            CampaignsFirmwareResponse1: Response from the API. Returns add or
                remove devices to existing upgrade information.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/campaigns/firmware/{acc}/{campaignId}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('acc')
                            .value(acc)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('campaignId')
                            .value(campaign_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CampaignsFirmwareResponse1.from_dictionary)
            .local_error('400', 'Unexpected error.', CampaignsFirmware400ErrorException)
        ).execute()

    def put_update_campaign_dates(self,
                                  acc,
                                  campaign_id,
                                  body):
        """Does a PUT request to /campaigns/firmware/{acc}/{campaignId}/dates.

        This endpoint allows user to change campaign dates and time windows.
        Fields which need to remain unchanged should be also provided.

        Args:
            acc (str): Account identifier.
            campaign_id (str): Firmware upgrade information.
            body (CampaignsFirmwareDatesRequest): New dates and time windows.

        Returns:
            CampaignsFirmwareDatesResponse: Response from the API. Updated
                campaign information.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/campaigns/firmware/{acc}/{campaignId}/dates')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('acc')
                            .value(acc)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('campaignId')
                            .value(campaign_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CampaignsFirmwareDatesResponse.from_dictionary)
            .local_error('400', 'Unexpected error.', CampaignsFirmwareDates400ErrorException)
        ).execute()

    def get_campaign_information_1(self,
                                   account_name,
                                   campaign_id):
        """Does a GET request to /campaigns/{accountName}/{campaignId}.

        This endpoint allows the user to retrieve campaign level information
        for a specified campaign.

        Args:
            account_name (str): Account identifier.
            campaign_id (str): Firmware upgrade identifier.

        Returns:
            CampaignsResponse4: Response from the API. Returns firmware
                upgrade information.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/campaigns/{accountName}/{campaignId}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('accountName')
                            .value(account_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('campaignId')
                            .value(campaign_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CampaignsResponse4.from_dictionary)
            .local_error('400', 'Unexpected error.', Campaigns400Error5Exception)
        ).execute()

    def delete_cancel_campaign(self,
                               account_name,
                               campaign_id):
        """Does a DELETE request to /campaigns/{accountName}/{campaignId}.

        This endpoint allows user to cancel a firmware campaign. A firmware
        campaign already started can not be cancelled.

        Args:
            account_name (str): Account identifier.
            campaign_id (str): Firmware upgrade information.

        Returns:
            CampaignsResponse5: Response from the API. Returns cancellation
                status.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/campaigns/{accountName}/{campaignId}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('accountName')
                            .value(account_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('campaignId')
                            .value(campaign_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CampaignsResponse5.from_dictionary)
            .local_error('400', 'Unexpected error.', Campaigns400Error5Exception)
        ).execute()
