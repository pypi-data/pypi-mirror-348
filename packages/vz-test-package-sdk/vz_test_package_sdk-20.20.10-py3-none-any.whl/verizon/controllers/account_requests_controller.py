# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.m_2_m_v_1_accounts_requests_status_response import M2mV1AccountsRequestsStatusResponse
from verizon.exceptions.m_2_m_v_1_accounts_requests_status_400_error_exception import M2mV1AccountsRequestsStatus400ErrorException


class AccountRequestsController(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(AccountRequestsController, self).__init__(config)

    def get_current_asynchronous_request_status(self,
                                                aname,
                                                request_id):
        """Does a GET request to /m2m/v1/accounts/{aname}/requests/{requestId}/status.

        Returns the current status of an asynchronous request that was made
        for a single device.

        Args:
            aname (str): Account name.
            request_id (str): UUID from synchronous response.

        Returns:
            M2mV1AccountsRequestsStatusResponse: Response from the API. The
                asynchronous request status.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/accounts/{aname}/requests/{requestId}/status')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('aname')
                            .value(aname)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('requestId')
                            .value(request_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1AccountsRequestsStatusResponse.from_dictionary)
            .local_error('400', 'Error response.', M2mV1AccountsRequestsStatus400ErrorException)
        ).execute()
