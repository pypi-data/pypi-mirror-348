# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.kpi_info_list import KPIInfoList
from verizon.models.pwn_profile_list import PWNProfileList
from verizon.models.m_2_m_v_1_devices_pwn_actions_state_activate_response import M2mV1DevicesPwnActionsStateActivateResponse
from verizon.models.m_2_m_v_1_devices_pwn_actions_state_deactivate_response import M2mV1DevicesPwnActionsStateDeactivateResponse
from verizon.models.m_2_m_v_1_devices_pwn_actions_profile_response import M2mV1DevicesPwnActionsProfileResponse
from verizon.models.m_2_m_v_1_devices_pwn_actions_ipaddress_response import M2mV1DevicesPwnActionsIpaddressResponse
from verizon.models.m_2_m_v_1_devices_pwn_performance_consent_response import M2mV1DevicesPwnPerformanceConsentResponse


class PWNController(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(PWNController, self).__init__(config)

    def kpi_list(self,
                 aname):
        """Does a GET request to /m2m/v1/devices/pwn/kpi/list/{aname}.

        Args:
            aname (str): Account name.

        Returns:
            KPIInfoList: Response from the API. Kpi list received on a
                successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/pwn/kpi/list/{aname}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('aname')
                            .value(aname)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(KPIInfoList.from_dictionary)
        ).execute()

    def get_profile_list(self,
                         aname):
        """Does a GET request to /m2m/v1/devices/pwn/profiles/list/{aname}.

        Args:
            aname (str): Account name.

        Returns:
            PWNProfileList: Response from the API. PWN profiles list received
                on a successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/pwn/profiles/list/{aname}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('aname')
                            .value(aname)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(PWNProfileList.from_dictionary)
        ).execute()

    def change_pwn_device_state_activate(self,
                                         body):
        """Does a POST request to /m2m/v1/devices/pwn/actions/state/activate.

        Args:
            body (ChangePWNDeviceStateActivateRequest): The request body
                parameter.

        Returns:
            M2mV1DevicesPwnActionsStateActivateResponse: Response from the
                API. Request ID received on a successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/pwn/actions/state/activate')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1DevicesPwnActionsStateActivateResponse.from_dictionary)
        ).execute()

    def change_pwn_device_state_deactivate(self,
                                           body):
        """Does a POST request to /m2m/v1/devices/pwn/actions/state/deactivate.

        Args:
            body (ChangePWNDeviceStateDeactivateRequest): The request body
                parameter.

        Returns:
            M2mV1DevicesPwnActionsStateDeactivateResponse: Response from the
                API. Request ID received on a successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/pwn/actions/state/deactivate')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1DevicesPwnActionsStateDeactivateResponse.from_dictionary)
        ).execute()

    def change_pwn_device_profile(self,
                                  body):
        """Does a POST request to /m2m/v1/devices/pwn/actions/profile.

        Args:
            body (ChangePWNDeviceProfileRequest): The request body parameter.

        Returns:
            M2mV1DevicesPwnActionsProfileResponse: Response from the API.
                Request ID received on a successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/pwn/actions/profile')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1DevicesPwnActionsProfileResponse.from_dictionary)
        ).execute()

    def change_pwn_device_i_paddress(self,
                                     body):
        """Does a PUT request to /m2m/v1/devices/pwn/actions/ipaddress.

        Args:
            body (ChangePWNDeviceIPaddressRequest): The request body parameter.

        Returns:
            M2mV1DevicesPwnActionsIpaddressResponse: Response from the API.
                Request ID received on a successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/pwn/actions/ipaddress')
            .http_method(HttpMethodEnum.PUT)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1DevicesPwnActionsIpaddressResponse.from_dictionary)
        ).execute()

    def get_pwn_performance_consent(self,
                                    aname):
        """Does a GET request to /m2m/v1/devices/pwn/performance/consent/{aname}.

        Args:
            aname (str): Account name.

        Returns:
            M2mV1DevicesPwnPerformanceConsentResponse: Response from the API.
                consent received on a successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/devices/pwn/performance/consent/{aname}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('aname')
                            .value(aname)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1DevicesPwnPerformanceConsentResponse.from_dictionary)
        ).execute()
