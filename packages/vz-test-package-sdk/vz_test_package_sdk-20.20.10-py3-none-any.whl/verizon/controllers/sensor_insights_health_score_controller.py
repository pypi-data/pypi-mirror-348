# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.dm_v_1_healthscore_summary_response import DmV1HealthscoreSummaryResponse
from verizon.models.dm_v_1_healthscore_network_response import DmV1HealthscoreNetworkResponse
from verizon.exceptions.m_400_management_error_exception import M400ManagementErrorException
from verizon.exceptions.management_error_exception import ManagementErrorException
from verizon.exceptions.m_403_management_error_exception import M403ManagementErrorException
from verizon.exceptions.m_500_management_error_exception import M500ManagementErrorException


class SensorInsightsHealthScoreController(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(SensorInsightsHealthScoreController, self).__init__(config)

    def sensor_insights_health_score_summary(self):
        """Does a POST request to /dm/v1/healthscore/summary.

        Returns:
            DmV1HealthscoreSummaryResponse: Response from the API. Get health
                score summary

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/dm/v1/healthscore/summary')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(DmV1HealthscoreSummaryResponse.from_dictionary)
            .local_error('400', 'Bad Request', M400ManagementErrorException)
            .local_error('401', 'UnAuthorized', ManagementErrorException)
            .local_error('403', 'Forbidden', M403ManagementErrorException)
            .local_error('406', 'Not Acceptable', ManagementErrorException)
            .local_error('415', 'Unsupported media type', ManagementErrorException)
            .local_error('429', 'Too many requests', ManagementErrorException)
            .local_error('500', 'Internal server error.', M500ManagementErrorException)
            .local_error('default', 'Unexpected error', ManagementErrorException)
        ).execute()

    def sensor_insights_get_network_health_score_response(self):
        """Does a POST request to /dm/v1/healthscore/network.

        Returns:
            DmV1HealthscoreNetworkResponse: Response from the API. Get a
                network health score

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/dm/v1/healthscore/network')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(DmV1HealthscoreNetworkResponse.from_dictionary)
            .local_error('400', 'Bad Request', M400ManagementErrorException)
            .local_error('401', 'UnAuthorized', ManagementErrorException)
            .local_error('403', 'Forbidden', M403ManagementErrorException)
            .local_error('406', 'Not Acceptable', ManagementErrorException)
            .local_error('415', 'Unsupported media type', ManagementErrorException)
            .local_error('429', 'Too many requests', ManagementErrorException)
            .local_error('500', 'Internal server error.', M500ManagementErrorException)
            .local_error('default', 'Unexpected error', ManagementErrorException)
        ).execute()
