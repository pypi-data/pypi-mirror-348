# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class Certificate1(object):

    """Implementation of the 'Certificate1' model.

    Attributes:
        cert_pem (str): The string containing the certificate
        key_pem (str): The string containing the private key
        ca_pem (str): The string containing the CA certificate
        expiration_time (datetime): The string describing the expiration
            timestamp of the certificate

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cert_pem": 'cert.pem',
        "key_pem": 'key.pem',
        "ca_pem": 'ca.pem',
        "expiration_time": 'ExpirationTime'
    }

    def __init__(self,
                 cert_pem=None,
                 key_pem=None,
                 ca_pem=None,
                 expiration_time=None):
        """Constructor for the Certificate1 class"""

        # Initialize members of the class
        self.cert_pem = cert_pem 
        self.key_pem = key_pem 
        self.ca_pem = ca_pem 
        self.expiration_time = APIHelper.apply_datetime_converter(expiration_time, APIHelper.RFC3339DateTime) if expiration_time else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        cert_pem = dictionary.get("cert.pem") if dictionary.get("cert.pem") else None
        key_pem = dictionary.get("key.pem") if dictionary.get("key.pem") else None
        ca_pem = dictionary.get("ca.pem") if dictionary.get("ca.pem") else None
        expiration_time = APIHelper.RFC3339DateTime.from_value(dictionary.get("ExpirationTime")).datetime if dictionary.get("ExpirationTime") else None
        # Return an object of this model
        return cls(cert_pem,
                   key_pem,
                   ca_pem,
                   expiration_time)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'cert_pem={self.cert_pem!r}, '
                f'key_pem={self.key_pem!r}, '
                f'ca_pem={self.ca_pem!r}, '
                f'expiration_time={self.expiration_time!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'cert_pem={self.cert_pem!s}, '
                f'key_pem={self.key_pem!s}, '
                f'ca_pem={self.ca_pem!s}, '
                f'expiration_time={self.expiration_time!s})')
