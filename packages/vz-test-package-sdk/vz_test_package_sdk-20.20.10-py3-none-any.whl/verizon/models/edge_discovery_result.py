# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper
from verizon.models.data_1 import Data1


class EdgeDiscoveryResult(object):

    """Implementation of the 'EdgeDiscoveryResult' model.

    Base type for all errors.

    Attributes:
        status (str): HTTP status code or status of response.
        message (str): Error details.
        data (Data1): The model property of type Data1.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "status": 'status',
        "message": 'message',
        "data": 'data'
    }

    _optionals = [
        'data',
    ]

    def __init__(self,
                 status=None,
                 message=None,
                 data=APIHelper.SKIP):
        """Constructor for the EdgeDiscoveryResult class"""

        # Initialize members of the class
        self.status = status 
        self.message = message 
        if data is not APIHelper.SKIP:
            self.data = data 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        status = dictionary.get("status") if dictionary.get("status") else None
        message = dictionary.get("message") if dictionary.get("message") else None
        data = Data1.from_dictionary(dictionary.get('data')) if 'data' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(status,
                   message,
                   data)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'status={self.status!r}, '
                f'message={self.message!r}, '
                f'data={(self.data if hasattr(self, "data") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'status={self.status!s}, '
                f'message={self.message!s}, '
                f'data={(self.data if hasattr(self, "data") else None)!s})')
