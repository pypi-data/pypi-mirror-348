# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class SharePlan(object):

    """Implementation of the 'SharePlan' model.

    Attributes:
        from_carrier_code (str): The model property of type str.
        to_carrier_code (str): The model property of type str.
        criteria_percentage (int): The model property of type int.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "from_carrier_code": 'fromCarrierCode',
        "to_carrier_code": 'toCarrierCode',
        "criteria_percentage": 'criteriaPercentage'
    }

    _optionals = [
        'from_carrier_code',
        'to_carrier_code',
        'criteria_percentage',
    ]

    def __init__(self,
                 from_carrier_code=APIHelper.SKIP,
                 to_carrier_code=APIHelper.SKIP,
                 criteria_percentage=APIHelper.SKIP):
        """Constructor for the SharePlan class"""

        # Initialize members of the class
        if from_carrier_code is not APIHelper.SKIP:
            self.from_carrier_code = from_carrier_code 
        if to_carrier_code is not APIHelper.SKIP:
            self.to_carrier_code = to_carrier_code 
        if criteria_percentage is not APIHelper.SKIP:
            self.criteria_percentage = criteria_percentage 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        from_carrier_code = dictionary.get("fromCarrierCode") if dictionary.get("fromCarrierCode") else APIHelper.SKIP
        to_carrier_code = dictionary.get("toCarrierCode") if dictionary.get("toCarrierCode") else APIHelper.SKIP
        criteria_percentage = dictionary.get("criteriaPercentage") if dictionary.get("criteriaPercentage") else APIHelper.SKIP
        # Return an object of this model
        return cls(from_carrier_code,
                   to_carrier_code,
                   criteria_percentage)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'from_carrier_code={(self.from_carrier_code if hasattr(self, "from_carrier_code") else None)!r}, '
                f'to_carrier_code={(self.to_carrier_code if hasattr(self, "to_carrier_code") else None)!r}, '
                f'criteria_percentage={(self.criteria_percentage if hasattr(self, "criteria_percentage") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'from_carrier_code={(self.from_carrier_code if hasattr(self, "from_carrier_code") else None)!s}, '
                f'to_carrier_code={(self.to_carrier_code if hasattr(self, "to_carrier_code") else None)!s}, '
                f'criteria_percentage={(self.criteria_percentage if hasattr(self, "criteria_percentage") else None)!s})')
