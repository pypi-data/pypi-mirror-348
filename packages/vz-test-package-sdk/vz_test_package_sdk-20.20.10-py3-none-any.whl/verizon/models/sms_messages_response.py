# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper
from verizon.models.gio_sms_message import GIOSmsMessage


class SmsMessagesResponse(object):

    """Implementation of the 'SmsMessagesResponse' model.

    Attributes:
        messages (List[GIOSmsMessage]): The model property of type
            List[GIOSmsMessage].
        has_more_data (bool): The model property of type bool.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "messages": 'messages',
        "has_more_data": 'hasMoreData'
    }

    _optionals = [
        'messages',
        'has_more_data',
    ]

    def __init__(self,
                 messages=APIHelper.SKIP,
                 has_more_data=APIHelper.SKIP):
        """Constructor for the SmsMessagesResponse class"""

        # Initialize members of the class
        if messages is not APIHelper.SKIP:
            self.messages = messages 
        if has_more_data is not APIHelper.SKIP:
            self.has_more_data = has_more_data 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        messages = None
        if dictionary.get('messages') is not None:
            messages = [GIOSmsMessage.from_dictionary(x) for x in dictionary.get('messages')]
        else:
            messages = APIHelper.SKIP
        has_more_data = dictionary.get("hasMoreData") if "hasMoreData" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(messages,
                   has_more_data)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'messages={(self.messages if hasattr(self, "messages") else None)!r}, '
                f'has_more_data={(self.has_more_data if hasattr(self, "has_more_data") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'messages={(self.messages if hasattr(self, "messages") else None)!s}, '
                f'has_more_data={(self.has_more_data if hasattr(self, "has_more_data") else None)!s})')
