# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class ResourceOnBoardSensor(object):

    """Implementation of the 'resource.OnBoardSensor' model.

    Attributes:
        appeui (str): global application ID in IEEE EUI64 address space that
            uniquely identifies the entity able to process the JoinReq frame
        appkey (str): an encryption key used for messages during every over
            the air activation
        mclass (str): Class of the sensor device. Valid values are Class A
            (A), Class B (B), and Class C (C). All LoRaWAN devices must
            implement Class A
        kind (str): The kind of sensor device
        customdata (Dict[str, Any]): Name/value pair, where the value is
            client defined.  The purpose is to keep track of current state per
            device action.
        deveui (str): the IEEE EUI64 address space used to identify a device.
            It is supplied by the device manufacturer

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "appeui": 'appeui',
        "appkey": 'appkey',
        "mclass": 'class',
        "kind": 'kind',
        "deveui": 'deveui',
        "customdata": 'customdata'
    }

    _optionals = [
        'customdata',
    ]

    def __init__(self,
                 appeui=None,
                 appkey=None,
                 mclass=None,
                 kind=None,
                 deveui=None,
                 customdata=APIHelper.SKIP):
        """Constructor for the ResourceOnBoardSensor class"""

        # Initialize members of the class
        self.appeui = appeui 
        self.appkey = appkey 
        self.mclass = mclass 
        self.kind = kind 
        if customdata is not APIHelper.SKIP:
            self.customdata = customdata 
        self.deveui = deveui 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        appeui = dictionary.get("appeui") if dictionary.get("appeui") else None
        appkey = dictionary.get("appkey") if dictionary.get("appkey") else None
        mclass = dictionary.get("class") if dictionary.get("class") else None
        kind = dictionary.get("kind") if dictionary.get("kind") else None
        deveui = dictionary.get("deveui") if dictionary.get("deveui") else None
        customdata = dictionary.get("customdata") if dictionary.get("customdata") else APIHelper.SKIP
        # Return an object of this model
        return cls(appeui,
                   appkey,
                   mclass,
                   kind,
                   deveui,
                   customdata)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'appeui={self.appeui!r}, '
                f'appkey={self.appkey!r}, '
                f'mclass={self.mclass!r}, '
                f'kind={self.kind!r}, '
                f'customdata={(self.customdata if hasattr(self, "customdata") else None)!r}, '
                f'deveui={self.deveui!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'appeui={self.appeui!s}, '
                f'appkey={self.appkey!s}, '
                f'mclass={self.mclass!s}, '
                f'kind={self.kind!s}, '
                f'customdata={(self.customdata if hasattr(self, "customdata") else None)!s}, '
                f'deveui={self.deveui!s})')
