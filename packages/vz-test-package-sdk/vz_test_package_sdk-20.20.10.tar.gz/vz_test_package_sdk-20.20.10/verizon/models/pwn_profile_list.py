# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper
from verizon.models.pwn_profile import PWNProfile


class PWNProfileList(object):

    """Implementation of the 'PWNProfileList' model.

    Attributes:
        profiles (List[PWNProfile]): The model property of type
            List[PWNProfile].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "profiles": 'profiles'
    }

    _optionals = [
        'profiles',
    ]

    def __init__(self,
                 profiles=APIHelper.SKIP):
        """Constructor for the PWNProfileList class"""

        # Initialize members of the class
        if profiles is not APIHelper.SKIP:
            self.profiles = profiles 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        profiles = None
        if dictionary.get('profiles') is not None:
            profiles = [PWNProfile.from_dictionary(x) for x in dictionary.get('profiles')]
        else:
            profiles = APIHelper.SKIP
        # Return an object of this model
        return cls(profiles)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'profiles={(self.profiles if hasattr(self, "profiles") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'profiles={(self.profiles if hasattr(self, "profiles") else None)!s})')
