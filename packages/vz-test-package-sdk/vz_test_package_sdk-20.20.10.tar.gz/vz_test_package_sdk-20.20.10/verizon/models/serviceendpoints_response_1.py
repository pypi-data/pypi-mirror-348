# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class ServiceendpointsResponse1(object):

    """Implementation of the 'Serviceendpoints Response1' model.

    Attributes:
        service_endpoints_id (str): A system-defined string identifier
            representing one or more registered Service Endpoints.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "service_endpoints_id": 'serviceEndpointsId'
    }

    _optionals = [
        'service_endpoints_id',
    ]

    def __init__(self,
                 service_endpoints_id=APIHelper.SKIP):
        """Constructor for the ServiceendpointsResponse1 class"""

        # Initialize members of the class
        if service_endpoints_id is not APIHelper.SKIP:
            self.service_endpoints_id = service_endpoints_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        service_endpoints_id = dictionary.get("serviceEndpointsId") if dictionary.get("serviceEndpointsId") else APIHelper.SKIP
        # Return an object of this model
        return cls(service_endpoints_id)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'service_endpoints_id={(self.service_endpoints_id if hasattr(self, "service_endpoints_id") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'service_endpoints_id={(self.service_endpoints_id if hasattr(self, "service_endpoints_id") else None)!s})')
