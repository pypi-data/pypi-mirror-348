# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.models.device_list_ip import DeviceListIP


class ChangePWNDeviceIPaddressRequest(object):

    """Implementation of the 'ChangePWNDeviceIPaddressRequest' model.

    Attributes:
        account_name (str): The model property of type str.
        device_list (List[DeviceListIP]): The model property of type
            List[DeviceListIP].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_name": 'accountName',
        "device_list": 'deviceList'
    }

    def __init__(self,
                 account_name=None,
                 device_list=None):
        """Constructor for the ChangePWNDeviceIPaddressRequest class"""

        # Initialize members of the class
        self.account_name = account_name 
        self.device_list = device_list 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        account_name = dictionary.get("accountName") if dictionary.get("accountName") else None
        device_list = None
        if dictionary.get('deviceList') is not None:
            device_list = [DeviceListIP.from_dictionary(x) for x in dictionary.get('deviceList')]
        # Return an object of this model
        return cls(account_name,
                   device_list)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'account_name={self.account_name!r}, '
                f'device_list={self.device_list!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'account_name={self.account_name!s}, '
                f'device_list={self.device_list!s})')
