# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class DtoNotificationGroupRequestEntity(object):

    """Implementation of the 'dto.NotificationGroupRequestEntity' model.

    Attributes:
        description (str): a short description
        groupemail (str): Contact email for the group
        name (str): User defined name of the record

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "description": 'description',
        "groupemail": 'groupemail',
        "name": 'name'
    }

    _optionals = [
        'description',
        'groupemail',
        'name',
    ]

    def __init__(self,
                 description=APIHelper.SKIP,
                 groupemail=APIHelper.SKIP,
                 name=APIHelper.SKIP):
        """Constructor for the DtoNotificationGroupRequestEntity class"""

        # Initialize members of the class
        if description is not APIHelper.SKIP:
            self.description = description 
        if groupemail is not APIHelper.SKIP:
            self.groupemail = groupemail 
        if name is not APIHelper.SKIP:
            self.name = name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        groupemail = dictionary.get("groupemail") if dictionary.get("groupemail") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        # Return an object of this model
        return cls(description,
                   groupemail,
                   name)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'description={(self.description if hasattr(self, "description") else None)!r}, '
                f'groupemail={(self.groupemail if hasattr(self, "groupemail") else None)!r}, '
                f'name={(self.name if hasattr(self, "name") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'description={(self.description if hasattr(self, "description") else None)!s}, '
                f'groupemail={(self.groupemail if hasattr(self, "groupemail") else None)!s}, '
                f'name={(self.name if hasattr(self, "name") else None)!s})')
