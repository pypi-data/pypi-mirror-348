# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper
from verizon.models.device_list_2 import DeviceList2


class ProfileRequest2(object):

    """Implementation of the 'ProfileRequest2' model.

    Attributes:
        devices (List[DeviceList2]): The model property of type
            List[DeviceList2].
        account_name (str): The model property of type str.
        carrier_name (str): The model property of type str.
        reason_code (str): The model property of type str.
        etf_waiver (bool): The model property of type bool.
        check_fallback_profile (bool): The model property of type bool.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "devices": 'devices',
        "account_name": 'accountName',
        "carrier_name": 'carrierName',
        "reason_code": 'reasonCode',
        "etf_waiver": 'etfWaiver',
        "check_fallback_profile": 'checkFallbackProfile'
    }

    _optionals = [
        'devices',
        'account_name',
        'carrier_name',
        'reason_code',
        'etf_waiver',
        'check_fallback_profile',
    ]

    def __init__(self,
                 devices=APIHelper.SKIP,
                 account_name=APIHelper.SKIP,
                 carrier_name=APIHelper.SKIP,
                 reason_code=APIHelper.SKIP,
                 etf_waiver=True,
                 check_fallback_profile=False):
        """Constructor for the ProfileRequest2 class"""

        # Initialize members of the class
        if devices is not APIHelper.SKIP:
            self.devices = devices 
        if account_name is not APIHelper.SKIP:
            self.account_name = account_name 
        if carrier_name is not APIHelper.SKIP:
            self.carrier_name = carrier_name 
        if reason_code is not APIHelper.SKIP:
            self.reason_code = reason_code 
        self.etf_waiver = etf_waiver 
        self.check_fallback_profile = check_fallback_profile 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        devices = None
        if dictionary.get('devices') is not None:
            devices = [DeviceList2.from_dictionary(x) for x in dictionary.get('devices')]
        else:
            devices = APIHelper.SKIP
        account_name = dictionary.get("accountName") if dictionary.get("accountName") else APIHelper.SKIP
        carrier_name = dictionary.get("carrierName") if dictionary.get("carrierName") else APIHelper.SKIP
        reason_code = dictionary.get("reasonCode") if dictionary.get("reasonCode") else APIHelper.SKIP
        etf_waiver = dictionary.get("etfWaiver") if dictionary.get("etfWaiver") else True
        check_fallback_profile = dictionary.get("checkFallbackProfile") if dictionary.get("checkFallbackProfile") else False
        # Return an object of this model
        return cls(devices,
                   account_name,
                   carrier_name,
                   reason_code,
                   etf_waiver,
                   check_fallback_profile)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'devices={(self.devices if hasattr(self, "devices") else None)!r}, '
                f'account_name={(self.account_name if hasattr(self, "account_name") else None)!r}, '
                f'carrier_name={(self.carrier_name if hasattr(self, "carrier_name") else None)!r}, '
                f'reason_code={(self.reason_code if hasattr(self, "reason_code") else None)!r}, '
                f'etf_waiver={(self.etf_waiver if hasattr(self, "etf_waiver") else None)!r}, '
                f'check_fallback_profile={(self.check_fallback_profile if hasattr(self, "check_fallback_profile") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'devices={(self.devices if hasattr(self, "devices") else None)!s}, '
                f'account_name={(self.account_name if hasattr(self, "account_name") else None)!s}, '
                f'carrier_name={(self.carrier_name if hasattr(self, "carrier_name") else None)!s}, '
                f'reason_code={(self.reason_code if hasattr(self, "reason_code") else None)!s}, '
                f'etf_waiver={(self.etf_waiver if hasattr(self, "etf_waiver") else None)!s}, '
                f'check_fallback_profile={(self.check_fallback_profile if hasattr(self, "check_fallback_profile") else None)!s})')
