# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper
from verizon.models.fields_4 import Fields4


class ResourceDevice(object):

    """Implementation of the 'resource.Device' model.

    Attributes:
        accountclientid (str): Not used in this release, future functionality
        billingaccountid (str): The billing account ID. This is the same value
            as the Account ID
        chipset (str): The Identifier of chipset used by the device
        createdon (datetime): Timestamp of the record
        customdata (Dict[str, Any]): Name/value pair, where the value is
            client defined.  The purpose is to keep track of current state per
            device action.
        description (str): a short description
        esn (int): The Electronic Serial Number (ESN) of the device
        fields (Fields4): The model property of type Fields4.
        foreignid (str): UUID of the ECPD account the user belongs to
        hardwareversion (str): The manufacturer's hardware version of the
            device
        iccid (str): The 20-digit Integrated Circuit Card ID (SIM card ID)
        id (str): UUID of the user record, assigned at creation
        imei (int): The 15-digit International Mobile Equipment ID
        imsi (int): The 64-bit International Mobile Subscriber Identity
        lastupdated (datetime): Timestamp of the record
        licenses (List[str]): licenses assigned to the device
        mac (str): The Media Access Control address of the device, listed on
            the device in the format XX-XX-XX-XX-XX-XX or XX:XX:XX:XX:XX:XX
        manufacturer (str): The manufacturer of the device
        meid (str): The 56-bit Mobile Equipment ID
        msisdn (str): The Mobile Station International Subscriber Directory
            Number. In the USA, this is 1+ a 10-digit phone number
        name (str): User defined name of the record
        parentdeviceid (str): this field is applicable for BLE sensors. This
            represents the value of parent gateway device
        productmodel (str): The device model name
        providerid (str): The id of the provider who is responible for talking
            to the device
        qrcode (str): The numeric value of the Quick Response (QR) code
        refid (str): The device reference ID
        refidtype (str): The type of value represented by `refid`
        serial (str): The device's serial number
        services (List[str]): The model property of type List[str].
        sku (str): The Stock Keeping Unit (SKU) number of the device
        softwareversion (str): the current device software version
        state (str): The current status of the device or transaction and will
            be `success` or `failed`
        version (str): The resource version
        versionid (str): The UUID of the resource version

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "createdon": 'createdon',
        "foreignid": 'foreignid',
        "lastupdated": 'lastupdated',
        "state": 'state',
        "versionid": 'versionid',
        "accountclientid": 'accountclientid',
        "billingaccountid": 'billingaccountid',
        "chipset": 'chipset',
        "customdata": 'customdata',
        "description": 'description',
        "esn": 'esn',
        "fields": 'fields',
        "hardwareversion": 'hardwareversion',
        "iccid": 'iccid',
        "id": 'id',
        "imei": 'imei',
        "imsi": 'imsi',
        "licenses": 'licenses',
        "mac": 'mac',
        "manufacturer": 'manufacturer',
        "meid": 'meid',
        "msisdn": 'msisdn',
        "name": 'name',
        "parentdeviceid": 'parentdeviceid',
        "productmodel": 'productmodel',
        "providerid": 'providerid',
        "qrcode": 'qrcode',
        "refid": 'refid',
        "refidtype": 'refidtype',
        "serial": 'serial',
        "services": 'services',
        "sku": 'sku',
        "softwareversion": 'softwareversion',
        "version": 'version'
    }

    _optionals = [
        'accountclientid',
        'billingaccountid',
        'chipset',
        'customdata',
        'description',
        'esn',
        'fields',
        'hardwareversion',
        'iccid',
        'id',
        'imei',
        'imsi',
        'licenses',
        'mac',
        'manufacturer',
        'meid',
        'msisdn',
        'name',
        'parentdeviceid',
        'productmodel',
        'providerid',
        'qrcode',
        'refid',
        'refidtype',
        'serial',
        'services',
        'sku',
        'softwareversion',
        'version',
    ]

    def __init__(self,
                 createdon=None,
                 foreignid=None,
                 lastupdated=None,
                 state=None,
                 versionid=None,
                 accountclientid=APIHelper.SKIP,
                 billingaccountid=APIHelper.SKIP,
                 chipset=APIHelper.SKIP,
                 customdata=APIHelper.SKIP,
                 description=APIHelper.SKIP,
                 esn=APIHelper.SKIP,
                 fields=APIHelper.SKIP,
                 hardwareversion=APIHelper.SKIP,
                 iccid=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 imei=APIHelper.SKIP,
                 imsi=APIHelper.SKIP,
                 licenses=APIHelper.SKIP,
                 mac=APIHelper.SKIP,
                 manufacturer=APIHelper.SKIP,
                 meid=APIHelper.SKIP,
                 msisdn=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 parentdeviceid=APIHelper.SKIP,
                 productmodel=APIHelper.SKIP,
                 providerid=APIHelper.SKIP,
                 qrcode=APIHelper.SKIP,
                 refid=APIHelper.SKIP,
                 refidtype=APIHelper.SKIP,
                 serial=APIHelper.SKIP,
                 services=APIHelper.SKIP,
                 sku=APIHelper.SKIP,
                 softwareversion=APIHelper.SKIP,
                 version=APIHelper.SKIP):
        """Constructor for the ResourceDevice class"""

        # Initialize members of the class
        if accountclientid is not APIHelper.SKIP:
            self.accountclientid = accountclientid 
        if billingaccountid is not APIHelper.SKIP:
            self.billingaccountid = billingaccountid 
        if chipset is not APIHelper.SKIP:
            self.chipset = chipset 
        self.createdon = APIHelper.apply_datetime_converter(createdon, APIHelper.RFC3339DateTime) if createdon else None 
        if customdata is not APIHelper.SKIP:
            self.customdata = customdata 
        if description is not APIHelper.SKIP:
            self.description = description 
        if esn is not APIHelper.SKIP:
            self.esn = esn 
        if fields is not APIHelper.SKIP:
            self.fields = fields 
        self.foreignid = foreignid 
        if hardwareversion is not APIHelper.SKIP:
            self.hardwareversion = hardwareversion 
        if iccid is not APIHelper.SKIP:
            self.iccid = iccid 
        if id is not APIHelper.SKIP:
            self.id = id 
        if imei is not APIHelper.SKIP:
            self.imei = imei 
        if imsi is not APIHelper.SKIP:
            self.imsi = imsi 
        self.lastupdated = APIHelper.apply_datetime_converter(lastupdated, APIHelper.RFC3339DateTime) if lastupdated else None 
        if licenses is not APIHelper.SKIP:
            self.licenses = licenses 
        if mac is not APIHelper.SKIP:
            self.mac = mac 
        if manufacturer is not APIHelper.SKIP:
            self.manufacturer = manufacturer 
        if meid is not APIHelper.SKIP:
            self.meid = meid 
        if msisdn is not APIHelper.SKIP:
            self.msisdn = msisdn 
        if name is not APIHelper.SKIP:
            self.name = name 
        if parentdeviceid is not APIHelper.SKIP:
            self.parentdeviceid = parentdeviceid 
        if productmodel is not APIHelper.SKIP:
            self.productmodel = productmodel 
        if providerid is not APIHelper.SKIP:
            self.providerid = providerid 
        if qrcode is not APIHelper.SKIP:
            self.qrcode = qrcode 
        if refid is not APIHelper.SKIP:
            self.refid = refid 
        if refidtype is not APIHelper.SKIP:
            self.refidtype = refidtype 
        if serial is not APIHelper.SKIP:
            self.serial = serial 
        if services is not APIHelper.SKIP:
            self.services = services 
        if sku is not APIHelper.SKIP:
            self.sku = sku 
        if softwareversion is not APIHelper.SKIP:
            self.softwareversion = softwareversion 
        self.state = state 
        if version is not APIHelper.SKIP:
            self.version = version 
        self.versionid = versionid 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        createdon = APIHelper.RFC3339DateTime.from_value(dictionary.get("createdon")).datetime if dictionary.get("createdon") else None
        foreignid = dictionary.get("foreignid") if dictionary.get("foreignid") else None
        lastupdated = APIHelper.RFC3339DateTime.from_value(dictionary.get("lastupdated")).datetime if dictionary.get("lastupdated") else None
        state = dictionary.get("state") if dictionary.get("state") else None
        versionid = dictionary.get("versionid") if dictionary.get("versionid") else None
        accountclientid = dictionary.get("accountclientid") if dictionary.get("accountclientid") else APIHelper.SKIP
        billingaccountid = dictionary.get("billingaccountid") if dictionary.get("billingaccountid") else APIHelper.SKIP
        chipset = dictionary.get("chipset") if dictionary.get("chipset") else APIHelper.SKIP
        customdata = dictionary.get("customdata") if dictionary.get("customdata") else APIHelper.SKIP
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        esn = dictionary.get("esn") if dictionary.get("esn") else APIHelper.SKIP
        fields = Fields4.from_dictionary(dictionary.get('fields')) if 'fields' in dictionary.keys() else APIHelper.SKIP
        hardwareversion = dictionary.get("hardwareversion") if dictionary.get("hardwareversion") else APIHelper.SKIP
        iccid = dictionary.get("iccid") if dictionary.get("iccid") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        imei = dictionary.get("imei") if dictionary.get("imei") else APIHelper.SKIP
        imsi = dictionary.get("imsi") if dictionary.get("imsi") else APIHelper.SKIP
        licenses = dictionary.get("licenses") if dictionary.get("licenses") else APIHelper.SKIP
        mac = dictionary.get("mac") if dictionary.get("mac") else APIHelper.SKIP
        manufacturer = dictionary.get("manufacturer") if dictionary.get("manufacturer") else APIHelper.SKIP
        meid = dictionary.get("meid") if dictionary.get("meid") else APIHelper.SKIP
        msisdn = dictionary.get("msisdn") if dictionary.get("msisdn") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        parentdeviceid = dictionary.get("parentdeviceid") if dictionary.get("parentdeviceid") else APIHelper.SKIP
        productmodel = dictionary.get("productmodel") if dictionary.get("productmodel") else APIHelper.SKIP
        providerid = dictionary.get("providerid") if dictionary.get("providerid") else APIHelper.SKIP
        qrcode = dictionary.get("qrcode") if dictionary.get("qrcode") else APIHelper.SKIP
        refid = dictionary.get("refid") if dictionary.get("refid") else APIHelper.SKIP
        refidtype = dictionary.get("refidtype") if dictionary.get("refidtype") else APIHelper.SKIP
        serial = dictionary.get("serial") if dictionary.get("serial") else APIHelper.SKIP
        services = dictionary.get("services") if dictionary.get("services") else APIHelper.SKIP
        sku = dictionary.get("sku") if dictionary.get("sku") else APIHelper.SKIP
        softwareversion = dictionary.get("softwareversion") if dictionary.get("softwareversion") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else APIHelper.SKIP
        # Return an object of this model
        return cls(createdon,
                   foreignid,
                   lastupdated,
                   state,
                   versionid,
                   accountclientid,
                   billingaccountid,
                   chipset,
                   customdata,
                   description,
                   esn,
                   fields,
                   hardwareversion,
                   iccid,
                   id,
                   imei,
                   imsi,
                   licenses,
                   mac,
                   manufacturer,
                   meid,
                   msisdn,
                   name,
                   parentdeviceid,
                   productmodel,
                   providerid,
                   qrcode,
                   refid,
                   refidtype,
                   serial,
                   services,
                   sku,
                   softwareversion,
                   version)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'accountclientid={(self.accountclientid if hasattr(self, "accountclientid") else None)!r}, '
                f'billingaccountid={(self.billingaccountid if hasattr(self, "billingaccountid") else None)!r}, '
                f'chipset={(self.chipset if hasattr(self, "chipset") else None)!r}, '
                f'createdon={self.createdon!r}, '
                f'customdata={(self.customdata if hasattr(self, "customdata") else None)!r}, '
                f'description={(self.description if hasattr(self, "description") else None)!r}, '
                f'esn={(self.esn if hasattr(self, "esn") else None)!r}, '
                f'fields={(self.fields if hasattr(self, "fields") else None)!r}, '
                f'foreignid={self.foreignid!r}, '
                f'hardwareversion={(self.hardwareversion if hasattr(self, "hardwareversion") else None)!r}, '
                f'iccid={(self.iccid if hasattr(self, "iccid") else None)!r}, '
                f'id={(self.id if hasattr(self, "id") else None)!r}, '
                f'imei={(self.imei if hasattr(self, "imei") else None)!r}, '
                f'imsi={(self.imsi if hasattr(self, "imsi") else None)!r}, '
                f'lastupdated={self.lastupdated!r}, '
                f'licenses={(self.licenses if hasattr(self, "licenses") else None)!r}, '
                f'mac={(self.mac if hasattr(self, "mac") else None)!r}, '
                f'manufacturer={(self.manufacturer if hasattr(self, "manufacturer") else None)!r}, '
                f'meid={(self.meid if hasattr(self, "meid") else None)!r}, '
                f'msisdn={(self.msisdn if hasattr(self, "msisdn") else None)!r}, '
                f'name={(self.name if hasattr(self, "name") else None)!r}, '
                f'parentdeviceid={(self.parentdeviceid if hasattr(self, "parentdeviceid") else None)!r}, '
                f'productmodel={(self.productmodel if hasattr(self, "productmodel") else None)!r}, '
                f'providerid={(self.providerid if hasattr(self, "providerid") else None)!r}, '
                f'qrcode={(self.qrcode if hasattr(self, "qrcode") else None)!r}, '
                f'refid={(self.refid if hasattr(self, "refid") else None)!r}, '
                f'refidtype={(self.refidtype if hasattr(self, "refidtype") else None)!r}, '
                f'serial={(self.serial if hasattr(self, "serial") else None)!r}, '
                f'services={(self.services if hasattr(self, "services") else None)!r}, '
                f'sku={(self.sku if hasattr(self, "sku") else None)!r}, '
                f'softwareversion={(self.softwareversion if hasattr(self, "softwareversion") else None)!r}, '
                f'state={self.state!r}, '
                f'version={(self.version if hasattr(self, "version") else None)!r}, '
                f'versionid={self.versionid!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'accountclientid={(self.accountclientid if hasattr(self, "accountclientid") else None)!s}, '
                f'billingaccountid={(self.billingaccountid if hasattr(self, "billingaccountid") else None)!s}, '
                f'chipset={(self.chipset if hasattr(self, "chipset") else None)!s}, '
                f'createdon={self.createdon!s}, '
                f'customdata={(self.customdata if hasattr(self, "customdata") else None)!s}, '
                f'description={(self.description if hasattr(self, "description") else None)!s}, '
                f'esn={(self.esn if hasattr(self, "esn") else None)!s}, '
                f'fields={(self.fields if hasattr(self, "fields") else None)!s}, '
                f'foreignid={self.foreignid!s}, '
                f'hardwareversion={(self.hardwareversion if hasattr(self, "hardwareversion") else None)!s}, '
                f'iccid={(self.iccid if hasattr(self, "iccid") else None)!s}, '
                f'id={(self.id if hasattr(self, "id") else None)!s}, '
                f'imei={(self.imei if hasattr(self, "imei") else None)!s}, '
                f'imsi={(self.imsi if hasattr(self, "imsi") else None)!s}, '
                f'lastupdated={self.lastupdated!s}, '
                f'licenses={(self.licenses if hasattr(self, "licenses") else None)!s}, '
                f'mac={(self.mac if hasattr(self, "mac") else None)!s}, '
                f'manufacturer={(self.manufacturer if hasattr(self, "manufacturer") else None)!s}, '
                f'meid={(self.meid if hasattr(self, "meid") else None)!s}, '
                f'msisdn={(self.msisdn if hasattr(self, "msisdn") else None)!s}, '
                f'name={(self.name if hasattr(self, "name") else None)!s}, '
                f'parentdeviceid={(self.parentdeviceid if hasattr(self, "parentdeviceid") else None)!s}, '
                f'productmodel={(self.productmodel if hasattr(self, "productmodel") else None)!s}, '
                f'providerid={(self.providerid if hasattr(self, "providerid") else None)!s}, '
                f'qrcode={(self.qrcode if hasattr(self, "qrcode") else None)!s}, '
                f'refid={(self.refid if hasattr(self, "refid") else None)!s}, '
                f'refidtype={(self.refidtype if hasattr(self, "refidtype") else None)!s}, '
                f'serial={(self.serial if hasattr(self, "serial") else None)!s}, '
                f'services={(self.services if hasattr(self, "services") else None)!s}, '
                f'sku={(self.sku if hasattr(self, "sku") else None)!s}, '
                f'softwareversion={(self.softwareversion if hasattr(self, "softwareversion") else None)!s}, '
                f'state={self.state!s}, '
                f'version={(self.version if hasattr(self, "version") else None)!s}, '
                f'versionid={self.versionid!s})')
