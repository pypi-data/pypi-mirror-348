# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper
from verizon.models.account_group_share_individual import AccountGroupShareIndividual


class AccountGroupShare(object):

    """Implementation of the 'AccountGroupShare' model.

    Attributes:
        account_group_share_individual (AccountGroupShareIndividual): The
            model property of type AccountGroupShareIndividual.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_group_share_individual": 'accountGroupShareIndividual'
    }

    _optionals = [
        'account_group_share_individual',
    ]

    def __init__(self,
                 account_group_share_individual=APIHelper.SKIP):
        """Constructor for the AccountGroupShare class"""

        # Initialize members of the class
        if account_group_share_individual is not APIHelper.SKIP:
            self.account_group_share_individual = account_group_share_individual 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        account_group_share_individual = AccountGroupShareIndividual.from_dictionary(dictionary.get('accountGroupShareIndividual')) if 'accountGroupShareIndividual' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(account_group_share_individual)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'account_group_share_individual={(self.account_group_share_individual if hasattr(self, "account_group_share_individual") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'account_group_share_individual={(self.account_group_share_individual if hasattr(self, "account_group_share_individual") else None)!s})')
