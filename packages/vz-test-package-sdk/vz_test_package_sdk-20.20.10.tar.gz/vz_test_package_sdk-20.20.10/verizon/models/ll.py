# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.models.node_ll import NodeLL


class Ll(object):

    """Implementation of the 'Ll' model.

    Attributes:
        nodes (List[NodeLL]): The NodeSetLL data frame consists of a list of
            NodeLL entries using LL offsets.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "nodes": 'nodes'
    }

    def __init__(self,
                 nodes=None):
        """Constructor for the Ll class"""

        # Initialize members of the class
        self.nodes = nodes 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        nodes = None
        if dictionary.get('nodes') is not None:
            nodes = [NodeLL.from_dictionary(x) for x in dictionary.get('nodes')]
        # Return an object of this model
        return cls(nodes)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'nodes={self.nodes!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'nodes={self.nodes!s})')
