# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class Removesensor(object):

    """Implementation of the 'Removesensor' model.

    Attributes:
        deveui (str): the IEEE EUI64 address space used to identify a device.
            It is supplied by the device manufacturer

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "deveui": 'deveui'
    }

    _optionals = [
        'deveui',
    ]

    def __init__(self,
                 deveui=APIHelper.SKIP):
        """Constructor for the Removesensor class"""

        # Initialize members of the class
        if deveui is not APIHelper.SKIP:
            self.deveui = deveui 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        deveui = dictionary.get("deveui") if dictionary.get("deveui") else APIHelper.SKIP
        # Return an object of this model
        return cls(deveui)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'deveui={(self.deveui if hasattr(self, "deveui") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'deveui={(self.deveui if hasattr(self, "deveui") else None)!s})')
