# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.subscriptions_response_1 import SubscriptionsResponse1
from verizon.exceptions.subscriptions_400_error_3_exception import Subscriptions400Error3Exception


class SoftwareManagementSubscriptionsV3Controller(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(SoftwareManagementSubscriptionsV3Controller, self).__init__(config)

    def get_account_subscription_status_2(self,
                                          acc):
        """Does a GET request to /subscriptions/{acc}.

        This endpoint retrieves a FOTA subscription by account.

        Args:
            acc (str): Account identifier.

        Returns:
            SubscriptionsResponse1: Response from the API. FOTA Subscription.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/subscriptions/{acc}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('acc')
                            .value(acc)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SubscriptionsResponse1.from_dictionary)
            .local_error('400', 'Unexpected error.', Subscriptions400Error3Exception)
        ).execute()
