# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.m_2_m_v_1_session_login_response import M2mV1SessionLoginResponse
from verizon.models.m_2_m_v_1_session_logout_response import M2mV1SessionLogoutResponse
from verizon.models.m_2_m_v_1_session_password_actions_reset_response import M2mV1SessionPasswordActionsResetResponse
from verizon.exceptions.m_2_m_v_1_session_login_400_error_exception import M2mV1SessionLogin400ErrorException
from verizon.exceptions.m_2_m_v_1_session_logout_400_error_exception import M2mV1SessionLogout400ErrorException
from verizon.exceptions.m_2_m_v_1_session_password_actions_reset_400_error_exception import M2mV1SessionPasswordActionsReset400ErrorException


class SessionManagementController(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(SessionManagementController, self).__init__(config)

    def start_connectivity_management_session(self,
                                              body=None):
        """Does a POST request to /m2m/v1/session/login.

        Initiates a Connectivity Management session and returns a VZ-M2M
        session token that is required in subsequent API requests.

        Args:
            body (M2mV1SessionLoginRequest, optional): Request to initiate a
                session.

        Returns:
            M2mV1SessionLoginResponse: Response from the API. VZ-M2M session
                token.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/session/login')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('thingspace_oauth'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1SessionLoginResponse.from_dictionary)
            .local_error('400', 'Error response.', M2mV1SessionLogin400ErrorException)
        ).execute()

    def end_connectivity_management_session(self):
        """Does a POST request to /m2m/v1/session/logout.

        Ends a Connectivity Management session.

        Returns:
            M2mV1SessionLogoutResponse: Response from the API. VZ-M2M session
                token.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/session/logout')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1SessionLogoutResponse.from_dictionary)
            .local_error('400', 'Error response.', M2mV1SessionLogout400ErrorException)
        ).execute()

    def reset_connectivity_management_password(self,
                                               body):
        """Does a PUT request to /m2m/v1/session/password/actions/reset.

        The new password is effective immediately. Passwords do not expire,
        but Verizon recommends changing your password every 90 days.

        Args:
            body (M2mV1SessionPasswordActionsResetRequest): Request with
                current password that needs to be reset.

        Returns:
            M2mV1SessionPasswordActionsResetResponse: Response from the API.
                Returns a new, randomly generated password for the current
                username.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/session/password/actions/reset')
            .http_method(HttpMethodEnum.PUT)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1SessionPasswordActionsResetResponse.from_dictionary)
            .local_error('400', 'Error response.', M2mV1SessionPasswordActionsReset400ErrorException)
        ).execute()
