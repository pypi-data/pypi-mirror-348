# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.m_2_m_v_1_intelligence_network_conditions_response import M2mV1IntelligenceNetworkConditionsResponse
from verizon.models.m_2_m_v_1_intelligence_wireless_coverage_response import M2mV1IntelligenceWirelessCoverageResponse
from verizon.models.m_2_m_v_1_intelligence_site_proximity_action_list_response import M2mV1IntelligenceSiteProximityActionListResponse
from verizon.models.m_2_m_v_1_intelligence_device_experience_history_30_days_response import M2mV1IntelligenceDeviceExperienceHistory30DaysResponse
from verizon.models.m_2_m_v_1_intelligence_device_experience_bulk_latest_response import M2mV1IntelligenceDeviceExperienceBulkLatestResponse
from verizon.exceptions.m_2_m_v_1_intelligence_network_conditions_0_error_exception import M2mV1IntelligenceNetworkConditions0ErrorException
from verizon.exceptions.m_2_m_v_1_intelligence_wireless_coverage_0_error_exception import M2mV1IntelligenceWirelessCoverage0ErrorException
from verizon.exceptions.m_2_m_v_1_intelligence_site_proximity_action_list_0_error_exception import M2mV1IntelligenceSiteProximityActionList0ErrorException
from verizon.exceptions.m_2_m_v_1_intelligence_device_experience_history_30_days_0_error_exception import M2mV1IntelligenceDeviceExperienceHistory30Days0ErrorException
from verizon.exceptions.m_2_m_v_1_intelligence_device_experience_bulk_latest_0_error_exception import M2mV1IntelligenceDeviceExperienceBulkLatest0ErrorException


class WirelessNetworkPerformanceController(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(WirelessNetworkPerformanceController, self).__init__(config)

    def near_real_time_network_conditions(self,
                                          body):
        """Does a POST request to /m2m/v1/intelligence/network-conditions.

        WNP Query for current network condition.

        Args:
            body (M2mV1IntelligenceNetworkConditionsRequest): Request for
                current network health.

        Returns:
            M2mV1IntelligenceNetworkConditionsResponse: Response from the API.
                Request ID

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/intelligence/network-conditions')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1IntelligenceNetworkConditionsResponse.from_dictionary)
            .local_error('default', 'Error response', M2mV1IntelligenceNetworkConditions0ErrorException)
        ).execute()

    def domestic_4_g_and_5_g_nationwide_network_coverage(self,
                                                         body):
        """Does a POST request to /m2m/v1/intelligence/wireless-coverage.

        Run a report to determine network types available and available
        coverage. Network types covered include: CAT-M, NB-IOT, LTE, LTE-AWS,
        5GNW and C-BAND.

        Args:
            body (M2mV1IntelligenceWirelessCoverageRequest): Request for
                network coverage details.

        Returns:
            M2mV1IntelligenceWirelessCoverageResponse: Response from the API.
                Request ID

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/intelligence/wireless-coverage')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1IntelligenceWirelessCoverageResponse.from_dictionary)
            .local_error('default', 'Error response', M2mV1IntelligenceWirelessCoverage0ErrorException)
        ).execute()

    def site_proximity(self,
                       body):
        """Does a POST request to /m2m/v1/intelligence/site-proximity/action/list.

        Identify the direction and general distance of nearby cell sites and
        the technology supported by the equipment.

        Args:
            body (M2mV1IntelligenceSiteProximityActionListRequest): Request
                for cell site proximity.

        Returns:
            M2mV1IntelligenceSiteProximityActionListResponse: Response from
                the API. Request ID

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/intelligence/site-proximity/action/list')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1IntelligenceSiteProximityActionListResponse.from_dictionary)
            .local_error('default', 'Error response', M2mV1IntelligenceSiteProximityActionList0ErrorException)
        ).execute()

    def device_experience_30_days_history(self,
                                          body):
        """Does a POST request to /m2m/v1/intelligence/device-experience/history/30-days.

        A report of a specific device's service scores over a 30 day period.

        Args:
            body (M2mV1IntelligenceDeviceExperienceHistory30DaysRequest):
                Request for a device's 30 day experience.

        Returns:
            M2mV1IntelligenceDeviceExperienceHistory30DaysResponse: Response
                from the API. Request ID

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/intelligence/device-experience/history/30-days')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1IntelligenceDeviceExperienceHistory30DaysResponse.from_dictionary)
            .local_error('default', 'Error response', M2mV1IntelligenceDeviceExperienceHistory30Days0ErrorException)
        ).execute()

    def device_experience_bulk_latest(self,
                                      body):
        """Does a POST request to /m2m/v1/intelligence/device-experience/bulk/latest.

        Run a report to view the latest device experience score for specific
        devices.

        Args:
            body (M2mV1IntelligenceDeviceExperienceBulkLatestRequest): Request
                for bulk latest history details.

        Returns:
            M2mV1IntelligenceDeviceExperienceBulkLatestResponse: Response from
                the API. Request ID

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/m2m/v1/intelligence/device-experience/bulk/latest')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M2mV1IntelligenceDeviceExperienceBulkLatestResponse.from_dictionary)
            .local_error('default', 'Error response', M2mV1IntelligenceDeviceExperienceBulkLatest0ErrorException)
        ).execute()
