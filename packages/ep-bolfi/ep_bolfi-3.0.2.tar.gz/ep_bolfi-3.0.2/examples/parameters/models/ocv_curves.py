"""!@file
This file contains several OCV curves.
"""

# from numpy import exp, tanh, cosh
from pybamm import exp, tanh, cosh

# Reset the PyBaMM colour scheme.
import matplotlib.pyplot as plt
plt.style.use("default")


def OCV_graphite(SOC):
    """! OCV curve of graphite as used in "Thick electrodes". """
    return (
        0.6379
        + 0.5416 * exp(-305.5309 * SOC)
        + 0.0440 * tanh(-(SOC - 0.1958) / 0.1088)
        - 0.1978 * tanh((SOC - 1.0571) / 0.0854)
        - 0.6875 * tanh((SOC - 0.0117) / 0.0529)
        - 0.0175 * tanh((SOC - 0.5692) / 0.0875)
    )


def d_OCV_graphite_d_SOC(SOC):
    """! Derivative of the prior OCV curve. """
    return (
        0.5416 * -305.5309 * exp(-305.5309 * SOC)
        + 0.0440 * -1.0 / 0.1088 / (cosh(-(SOC - 0.1958) / 0.1088)) ** 2
        - 0.1978 * +1.0 / 0.0854 / (cosh(+(SOC - 1.0571) / 0.0854)) ** 2
        - 0.6875 * +1.0 / 0.0529 / (cosh(+(SOC - 0.0117) / 0.0529)) ** 2
        - 0.0175 * +1.0 / 0.0875 / (cosh(+(SOC - 0.5692) / 0.0875)) ** 2
    )


def d2_OCV_graphite_d_SOC2(SOC):
    """! 2nd derivative of the prior OCV curve. """
    return (
        0.5416 * 305.5309**2 * exp(-305.5309 * SOC)
        - 2
        * 0.0440
        / 0.1088**2
        * tanh(-(SOC - 0.1958) / 0.1088)
        / (cosh(-(SOC - 0.1958) / 0.1088)) ** 2
        + 2
        * 0.1978
        / 0.0854**2
        * tanh((SOC - 1.0571) / 0.0854)
        / (cosh(+(SOC - 1.0571) / 0.0854)) ** 2
        + 2
        * 0.6875
        / 0.0529**2
        * tanh((SOC - 0.0117) / 0.0529)
        / (cosh(+(SOC - 0.0117) / 0.0529)) ** 2
        + 2
        * 0.0175
        / 0.0875**2
        * tanh((SOC - 0.5692) / 0.0875)
        / (cosh(+(SOC - 0.5692) / 0.0875)) ** 2
    )


def OCV_NMC_111(SOC):
    """! OCV curve of NMC as used in "Thick electrodes". """
    return (
        7.9760
        - 5.5419 * SOC
        + 5.2824 * SOC**1.0700
        - 4.0446 * SOC**0.0766
        - 1.0556e-4 * exp(124.7407 * SOC - 114.2593)
    )


def d_OCV_NMC_111_d_SOC(SOC):
    """! Derivative of the prior OCV curve. """
    return (
        -5.5419
        + 5.2824 * 1.0700 * SOC**0.0700
        - 4.0446 * 0.0766 * SOC ** (-0.9234)
        - 1.0556e-4 * 124.7407 * exp(124.7407 * SOC - 114.2593)
    )


def OCV_NMC_thick_electrodes(SOC):
    """! OCV curve fitted to the GITT measurement in "Thick electrodes". """
    return (
        (SOC < 0.04447236180904523)
        * (
            (115.15650738699037 * SOC + -15.335279811198902) * SOC
            + 4.93411784548265
        )
        + (SOC >= 0.04447236180904523)
        * (SOC < 0.07402010050251256)
        * (
            (34.57940815644952 * SOC + -8.168371990190963) * SOC
            + 4.774753186648679
        )
        + (SOC >= 0.07402010050251256)
        * (SOC < 0.13311557788944725)
        * (
            (9.873309213433743 * SOC + -4.510876136616886) * SOC
            + 4.6393890813141425
        )
        + (SOC >= 0.13311557788944725)
        * (SOC < 0.2562311557788945)
        * (
            (2.423463481370817 * SOC + -2.527495096995306) * SOC
            + 4.507379624682043
        )
        + (SOC >= 0.2562311557788945)
        * (SOC < 0.502462311557789)
        * (
            (1.6963497310802431 * SOC + -2.1548767037559404) * SOC
            + 4.459641403899942
        )
        + (SOC >= 0.502462311557789)
        * (SOC < 0.7486934673366834)
        * (
            (-0.05809621311587421 * SOC + -0.3917907745080029) * SOC
            + 4.016699288157476
        )
        + (SOC >= 0.7486934673366834)
        * (SOC < 0.8718090452261307)
        * (
            (-4.0190366872893435 * SOC + 5.539269740538344) * SOC
            + 1.7964261571606244
        )
        + (SOC >= 0.8718090452261307)
        * (SOC < 0.9309045226130653)
        * (
            (-13.398904448771304 * SOC + 21.894176855508476) * SOC
            + -5.332751821171485
        )
        + (SOC >= 0.9309045226130653)
        * (SOC < 0.9604522613065327)
        * (
            (-48.22845250204068 * SOC + 86.74014446222282) * SOC
            + -35.51545408032666
        )
        + (SOC >= 0.9604522613065327)
        * (
            (-124.73417137637352 * SOC + 233.70032585369336) * SOC
            + -106.08957335005425
        )
    )


def d_OCV_NMC_thick_electrodes_d_SOC(SOC):
    """! Derivative of the prior OCV curve. """
    return (
        (SOC < 0.04447236180904523)
        * (2 * 115.15650738699037 * SOC + -15.335279811198902)
        + (SOC >= 0.04447236180904523)
        * (SOC < 0.07402010050251256)
        * (2 * 34.57940815644952 * SOC + -8.168371990190963)
        + (SOC >= 0.07402010050251256)
        * (SOC < 0.13311557788944725)
        * (2 * 9.873309213433743 * SOC + -4.510876136616886)
        + (SOC >= 0.13311557788944725)
        * (SOC < 0.2562311557788945)
        * (2 * 2.423463481370817 * SOC + -2.527495096995306)
        + (SOC >= 0.2562311557788945)
        * (SOC < 0.502462311557789)
        * (2 * 1.6963497310802431 * SOC + -2.1548767037559404)
        + (SOC >= 0.502462311557789)
        * (SOC < 0.7486934673366834)
        * (2 * -0.05809621311587421 * SOC + -0.3917907745080029)
        + (SOC >= 0.7486934673366834)
        * (SOC < 0.8718090452261307)
        * (2 * -4.0190366872893435 * SOC + 5.539269740538344)
        + (SOC >= 0.8718090452261307)
        * (SOC < 0.9309045226130653)
        * (2 * -13.398904448771304 * SOC + 21.894176855508476)
        + (SOC >= 0.9309045226130653)
        * (SOC < 0.9604522613065327)
        * (2 * -48.22845250204068 * SOC + 86.74014446222282)
        + (SOC >= 0.9604522613065327)
        * (2 * -124.73417137637352 * SOC + 233.70032585369336)
    )


def OCV_graphite_precise(SOC):
    """! OCV curve for graphite as seen in "A Parametric OCV Model". """
    return (
        (SOC < 0.0049839679358717436)
        * (
            (1871.6054394858402 * SOC + -40.372835438366714) * SOC
            + 0.8294391674436975
        )
        + (SOC >= 0.0049839679358717436)
        * (SOC < 0.008967935871743486)
        * (
            (1029.906653054506 * SOC + -31.982835911894924) * SOC
            + 0.80853142313274
        )
        + (SOC >= 0.008967935871743486)
        * (SOC < 0.016935871743486975)
        * (
            (306.9773407111552 * SOC + -19.016468486097367) * SOC
            + 0.7503906473507321
        )
        + (SOC >= 0.016935871743486975)
        * (SOC < 0.03287174348697395)
        * (
            (52.808351615653464 * SOC + -10.40732168511104) * SOC
            + 0.6774889443295539
        )
        + (SOC >= 0.03287174348697395)
        * (SOC < 0.04880761523046093)
        * (
            (55.64682404789602 * SOC + -10.59393276048607) * SOC
            + 0.6805560600303321
        )
        + (SOC >= 0.04880761523046093)
        * (SOC < 0.0647434869739479)
        * (
            (118.49687813361328 * SOC + -16.729055274544773) * SOC
            + 0.8302764095592897
        )
        + (SOC >= 0.0647434869739479)
        * (SOC < 0.09661523046092185)
        * (
            (11.767461240166142 * SOC + -2.9089860497888793) * SOC
            + 0.3828966736432695
        )
        + (SOC >= 0.09661523046092185)
        * (SOC < 0.12649498997995992)
        * (
            (3.1136066538851708 * SOC + -1.236797739331184) * SOC
            + 0.3021172441488046
        )
        + (SOC >= 0.12649498997995992)
        * (SOC < 0.18824649298597196)
        * (
            (0.6521212178052025 * SOC + -0.6140665881856844) * SOC
            + 0.26273105878662495
        )
        + (SOC >= 0.18824649298597196)
        * (SOC < 0.24999799599198397)
        * (
            (-1.4320456098983918 * SOC + 0.1706076040401161) * SOC
            + 0.18887497637507134
        )
        + (SOC >= 0.24999799599198397)
        * (SOC < 0.28186973947895794)
        * (
            (6.931135110518376 * SOC + -4.010949236405864) * SOC
            + 0.7115653914941045
        )
        + (SOC >= 0.28186973947895794)
        * (SOC < 0.31374148296593185)
        * (
            (0.6481543997291652 * SOC + -0.46898496420292446) * SOC
            + 0.21237911816929333
        )
        + (SOC >= 0.31374148296593185)
        * (SOC < 0.3754929859719439)
        * (
            (0.24514999263576875 * SOC + -0.21610656355634106) * SOC
            + 0.17270989595483877
        )
        + (SOC >= 0.3754929859719439)
        * (SOC < 0.49899599198396793)
        * (
            (-0.040095365277850625 * SOC + -0.0018913012011005925) * SOC
            + 0.13249173170357287
        )
        + (SOC >= 0.49899599198396793)
        * (SOC < 0.5627394789579159)
        * (
            (-0.41742320080259887 * SOC + 0.37467885398057277) * SOC
            + 0.03853823263535627
        )
        + (SOC >= 0.5627394789579159)
        * (SOC < 0.5786753507014029)
        * (
            (-24.43492887370718 * SOC + 27.405876110458735) * SOC
            + -7.567222697224246
        )
        + (SOC >= 0.5786753507014029)
        * (SOC < 0.5946112224448898)
        * (
            (13.556627748031701 * SOC + -16.563678593095148) * SOC
            + 5.154826046907559
        )
        + (SOC >= 0.5946112224448898)
        * (SOC < 0.6244909819639278)
        * (
            (6.0108065297982805 * SOC + -7.590018635246373) * SOC
            + 2.4869065882369474
        )
        + (SOC >= 0.6244909819639278)
        * (SOC < 0.747993987975952)
        * (
            (0.17721101798876493 * SOC + -0.3039630561458102) * SOC
            + 0.21186858661881147
        )
        + (SOC >= 0.747993987975952)
        * (SOC < 0.871496993987976)
        * (
            (-0.03345688538172764 * SOC + 0.011193594215444413) * SOC
            + 0.09400094674838266
        )
        + (SOC >= 0.871496993987976)
        * (SOC < 0.933248496993988)
        * (
            (-0.2560572477469343 * SOC + 0.3991846875392646) * SOC
            + -0.07506558901452465
        )
        + (SOC >= 0.933248496993988)
        * (SOC < 0.9491843687374749)
        * (
            (-1.328542399333486 * SOC + 2.400974999072332) * SOC
            + -1.0091494887821852
        )
        + (SOC >= 0.9491843687374749)
        * (SOC < 0.9651202404809619)
        * (
            (-0.77508838431595 * SOC + 1.3503151993330675) * SOC
            + -0.510514559395574
        )
        + (SOC >= 0.9651202404809619)
        * (SOC < 0.9730881763527054)
        * (
            (-13.420826248978187 * SOC + 25.759630337337285) * SOC
            + -12.289476607378674
        )
        + (SOC >= 0.9730881763527054)
        * (SOC < 0.9810561122244489)
        * (
            (11.438142448151552 * SOC + -22.620306693661178) * SOC
            + 11.249495741397709
        )
        + (SOC >= 0.9810561122244489)
        * (SOC < 0.9890240480961924)
        * (
            (-77.51096883174966 * SOC + 151.90783190249897) * SOC
            + -74.36145282106139
        )
        + (SOC >= 0.9890240480961924)
        * (
            (-1536.829709500849 * SOC + 3038.5104886208787) * SOC
            + -1501.821175217479
        )
    )


def d_OCV_graphite_precise_d_SOC(SOC):
    """! Derivative of the prior OCV curve. """
    return (
        (SOC < 0.0049839679358717436)
        * (1871.6054394858402 * SOC + -40.372835438366714)
        + (SOC >= 0.0049839679358717436)
        * (SOC < 0.008967935871743486)
        * (1029.906653054506 * SOC + -31.982835911894924)
        + (SOC >= 0.008967935871743486)
        * (SOC < 0.016935871743486975)
        * (306.9773407111552 * SOC + -19.016468486097367)
        + (SOC >= 0.016935871743486975)
        * (SOC < 0.03287174348697395)
        * (52.808351615653464 * SOC + -10.40732168511104)
        + (SOC >= 0.03287174348697395)
        * (SOC < 0.04880761523046093)
        * (55.64682404789602 * SOC + -10.59393276048607)
        + (SOC >= 0.04880761523046093)
        * (SOC < 0.0647434869739479)
        * (118.49687813361328 * SOC + -16.729055274544773)
        + (SOC >= 0.0647434869739479)
        * (SOC < 0.09661523046092185)
        * (11.767461240166142 * SOC + -2.9089860497888793)
        + (SOC >= 0.09661523046092185)
        * (SOC < 0.12649498997995992)
        * (3.1136066538851708 * SOC + -1.236797739331184)
        + (SOC >= 0.12649498997995992)
        * (SOC < 0.18824649298597196)
        * (0.6521212178052025 * SOC + -0.6140665881856844)
        + (SOC >= 0.18824649298597196)
        * (SOC < 0.24999799599198397)
        * (-1.4320456098983918 * SOC + 0.1706076040401161)
        + (SOC >= 0.24999799599198397)
        * (SOC < 0.28186973947895794)
        * (6.931135110518376 * SOC + -4.010949236405864)
        + (SOC >= 0.28186973947895794)
        * (SOC < 0.31374148296593185)
        * (0.6481543997291652 * SOC + -0.46898496420292446)
        + (SOC >= 0.31374148296593185)
        * (SOC < 0.3754929859719439)
        * (0.24514999263576875 * SOC + -0.21610656355634106)
        + (SOC >= 0.3754929859719439)
        * (SOC < 0.49899599198396793)
        * (-0.040095365277850625 * SOC + -0.0018913012011005925)
        + (SOC >= 0.49899599198396793)
        * (SOC < 0.5627394789579159)
        * (-0.41742320080259887 * SOC + 0.37467885398057277)
        + (SOC >= 0.5627394789579159)
        * (SOC < 0.5786753507014029)
        * (-24.43492887370718 * SOC + 27.405876110458735)
        + (SOC >= 0.5786753507014029)
        * (SOC < 0.5946112224448898)
        * (13.556627748031701 * SOC + -16.563678593095148)
        + (SOC >= 0.5946112224448898)
        * (SOC < 0.6244909819639278)
        * (6.0108065297982805 * SOC + -7.590018635246373)
        + (SOC >= 0.6244909819639278)
        * (SOC < 0.747993987975952)
        * (0.17721101798876493 * SOC + -0.3039630561458102)
        + (SOC >= 0.747993987975952)
        * (SOC < 0.871496993987976)
        * (-0.03345688538172764 * SOC + 0.011193594215444413)
        + (SOC >= 0.871496993987976)
        * (SOC < 0.933248496993988)
        * (-0.2560572477469343 * SOC + 0.3991846875392646)
        + (SOC >= 0.933248496993988)
        * (SOC < 0.9491843687374749)
        * (-1.328542399333486 * SOC + 2.400974999072332)
        + (SOC >= 0.9491843687374749)
        * (SOC < 0.9651202404809619)
        * (-0.77508838431595 * SOC + 1.3503151993330675)
        + (SOC >= 0.9651202404809619)
        * (SOC < 0.9730881763527054)
        * (-13.420826248978187 * SOC + 25.759630337337285)
        + (SOC >= 0.9730881763527054)
        * (SOC < 0.9810561122244489)
        * (11.438142448151552 * SOC + -22.620306693661178)
        + (SOC >= 0.9810561122244489)
        * (SOC < 0.9890240480961924)
        * (-77.51096883174966 * SOC + 151.90783190249897)
        + (SOC >= 0.9890240480961924)
        * (-1536.829709500849 * SOC + 3038.5104886208787)
    )


def d2_OCV_graphite_precise_d2_SOC(SOC):
    """! 2nd derivative of the prior OCV curve. """
    return (
        (SOC < 0.0049839679358717436) * (1871.6054394858402)
        + (SOC >= 0.0049839679358717436)
        * (SOC < 0.008967935871743486)
        * (1029.906653054506)
        + (SOC >= 0.008967935871743486)
        * (SOC < 0.016935871743486975)
        * (306.9773407111552)
        + (SOC >= 0.016935871743486975)
        * (SOC < 0.03287174348697395)
        * (52.808351615653464)
        + (SOC >= 0.03287174348697395)
        * (SOC < 0.04880761523046093)
        * (55.64682404789602)
        + (SOC >= 0.04880761523046093)
        * (SOC < 0.0647434869739479)
        * (118.49687813361328)
        + (SOC >= 0.0647434869739479)
        * (SOC < 0.09661523046092185)
        * (11.767461240166142)
        + (SOC >= 0.09661523046092185)
        * (SOC < 0.12649498997995992)
        * (3.1136066538851708)
        + (SOC >= 0.12649498997995992)
        * (SOC < 0.18824649298597196)
        * (0.6521212178052025)
        + (SOC >= 0.18824649298597196)
        * (SOC < 0.24999799599198397)
        * (-1.4320456098983918)
        + (SOC >= 0.24999799599198397)
        * (SOC < 0.28186973947895794)
        * (6.931135110518376)
        + (SOC >= 0.28186973947895794)
        * (SOC < 0.31374148296593185)
        * (0.6481543997291652)
        + (SOC >= 0.31374148296593185)
        * (SOC < 0.3754929859719439)
        * (0.24514999263576875)
        + (SOC >= 0.3754929859719439)
        * (SOC < 0.49899599198396793)
        * (-0.040095365277850625)
        + (SOC >= 0.49899599198396793)
        * (SOC < 0.5627394789579159)
        * (-0.41742320080259887)
        + (SOC >= 0.5627394789579159)
        * (SOC < 0.5786753507014029)
        * (-24.43492887370718)
        + (SOC >= 0.5786753507014029)
        * (SOC < 0.5946112224448898)
        * (13.556627748031701)
        + (SOC >= 0.5946112224448898)
        * (SOC < 0.6244909819639278)
        * (6.0108065297982805)
        + (SOC >= 0.6244909819639278)
        * (SOC < 0.747993987975952)
        * (0.17721101798876493)
        + (SOC >= 0.747993987975952)
        * (SOC < 0.871496993987976)
        * (-0.03345688538172764)
        + (SOC >= 0.871496993987976)
        * (SOC < 0.933248496993988)
        * (-0.2560572477469343)
        + (SOC >= 0.933248496993988)
        * (SOC < 0.9491843687374749)
        * (-1.328542399333486)
        + (SOC >= 0.9491843687374749)
        * (SOC < 0.9651202404809619)
        * (-0.77508838431595)
        + (SOC >= 0.9651202404809619)
        * (SOC < 0.9730881763527054)
        * (-13.420826248978187)
        + (SOC >= 0.9730881763527054)
        * (SOC < 0.9810561122244489)
        * (11.438142448151552)
        + (SOC >= 0.9810561122244489)
        * (SOC < 0.9890240480961924)
        * (-77.51096883174966)
        + (SOC >= 0.9890240480961924) * (-1536.829709500849)
    )


def OCV_graphite_charge_precise(SOC):
    """! OCV curve for graphite as seen in "A Parametric OCV Model". """
    return (
        (SOC < 0.0049839679358717436)
        * (
            (3305.0129115857235 * SOC + -52.261012703466655) * SOC
            + 0.7910468480206763
        )
        + (SOC >= 0.0049839679358717436)
        * (SOC < 0.008967935871743486)
        * (
            (716.7861135415806 * SOC + -26.461733959034675) * SOC
            + 0.7267554590052432
        )
        + (SOC >= 0.008967935871743486)
        * (SOC < 0.016935871743486975)
        * (
            (348.45647955411096 * SOC + -19.85542088450992) * SOC
            + 0.6971329630047438
        )
        + (SOC >= 0.016935871743486975)
        * (SOC < 0.03287174348697395)
        * (
            (50.361391264892404 * SOC + -9.758420519250624) * SOC
            + 0.6116322114147577
        )
        + (SOC >= 0.03287174348697395)
        * (SOC < 0.04880761523046093)
        * (
            (85.52545330057245 * SOC + -12.070228573644435) * SOC
            + 0.6496287920923345
        )
        + (SOC >= 0.04880761523046093)
        * (SOC < 0.0647434869739479)
        * (
            (84.38017931460908 * SOC + -11.958432389563738) * SOC
            + 0.6469005395239122
        )
        + (SOC >= 0.0647434869739479)
        * (SOC < 0.12649498997995992)
        * (
            (5.148076306638718 * SOC + -1.698907131533696) * SOC
            + 0.3147818195728333
        )
        + (SOC >= 0.12649498997995992)
        * (SOC < 0.18824649298597196)
        * (
            (-1.621526984395981 * SOC + 0.01373466940177881) * SOC
            + 0.2064615158485365
        )
        + (SOC >= 0.18824649298597196)
        * (SOC < 0.2201182364729459)
        * (
            (0.9609582737345619 * SOC + -0.9585529166603131) * SOC
            + 0.29797637997353
        )
        + (SOC >= 0.2201182364729459)
        * (SOC < 0.24999799599198397)
        * (
            (8.086797378461412 * SOC + -4.095607190905182) * SOC
            + 0.643237807256877
        )
        + (SOC >= 0.24999799599198397)
        * (SOC < 0.49899599198396793)
        * (
            (0.027187441389169065 * SOC + -0.06583452541489387) * SOC
            + 0.1395202619189544
        )
        + (SOC >= 0.49899599198396793)
        * (SOC < 0.5308677354709419)
        * (
            (-0.6689722852458644 * SOC + 0.6289273013281758) * SOC
            + -0.03382142154517176
        )
        + (SOC >= 0.5308677354709419)
        * (SOC < 0.5627394789579159)
        * (
            (-4.918386792079517 * SOC + 5.140681413968508) * SOC
            + -1.2313937659347083
        )
        + (SOC >= 0.5627394789579159)
        * (SOC < 0.5786753507014029)
        * (
            (-8.089249158177324 * SOC + 8.709420285458748) * SOC
            + -2.235528892474349
        )
        + (SOC >= 0.5786753507014029)
        * (SOC < 0.5946112224448898)
        * (
            (16.9071330470654 * SOC + -20.22016019231154) * SOC
            + 6.134888671834737
        )
        + (SOC >= 0.5946112224448898)
        * (SOC < 0.6244909819639278)
        * (
            (0.7671863128415559 * SOC + -1.0261732766469933) * SOC
            + 0.42840866007748524
        )
        + (SOC >= 0.6244909819639278)
        * (SOC < 0.747993987975952)
        * (
            (0.15182599382636663 * SOC + -0.2575993368801526) * SOC
            + 0.18842491289904006
        )
        + (SOC >= 0.747993987975952)
        * (SOC < 0.871496993987976)
        * (
            (-0.04781704558743716 * SOC + 0.04106424956539101) * SOC
            + 0.07672562935473826
        )
        + (SOC >= 0.871496993987976)
        * (SOC < 0.90336873747495)
        * (
            (-0.1496444014942142 * SOC + 0.21854871872237425) * SOC
            + -0.0006129613201970585
        )
        + (SOC >= 0.90336873747495)
        * (SOC < 0.933248496993988)
        * (
            (-0.33915144362471494 * SOC + 0.5609381935064732) * SOC
            + -0.15526493510040495
        )
        + (SOC >= 0.933248496993988)
        * (SOC < 0.9491843687374749)
        * (
            (-0.9556622592323833 * SOC + 1.711653777599281) * SOC
            + -0.6922167297614692
        )
        + (SOC >= 0.9491843687374749)
        * (SOC < 0.9651202404809619)
        * (
            (-1.0335111665508805 * SOC + 1.8594397094992416) * SOC
            + -0.7623547780008408
        )
        + (SOC >= 0.9651202404809619)
        * (SOC < 0.9810561122244489)
        * (
            (-7.264891764311301 * SOC + 13.88750279157722) * SOC
            + -6.56661834514847
        )
        + (SOC >= 0.9810561122244489)
        * (SOC < 0.9890240480961924)
        * (
            (-46.329255245194645 * SOC + 90.53616791773356) * SOC
            + -44.16493905307897
        )
        + (SOC >= 0.9890240480961924)
        * (
            (-1958.1121836891184 * SOC + 3872.1347498593395) * SOC
            + -1914.2109079464324
        )
    )


def d_OCV_graphite_charge_precise_d_SOC(SOC):
    """! Derivative of the prior OCV curve. """
    return (
        (SOC < 0.0049839679358717436)
        * (3305.0129115857235 * SOC + -52.261012703466655)
        + (SOC >= 0.0049839679358717436)
        * (SOC < 0.008967935871743486)
        * (716.7861135415806 * SOC + -26.461733959034675)
        + (SOC >= 0.008967935871743486)
        * (SOC < 0.016935871743486975)
        * (348.45647955411096 * SOC + -19.85542088450992)
        + (SOC >= 0.016935871743486975)
        * (SOC < 0.03287174348697395)
        * (50.361391264892404 * SOC + -9.758420519250624)
        + (SOC >= 0.03287174348697395)
        * (SOC < 0.04880761523046093)
        * (85.52545330057245 * SOC + -12.070228573644435)
        + (SOC >= 0.04880761523046093)
        * (SOC < 0.0647434869739479)
        * (84.38017931460908 * SOC + -11.958432389563738)
        + (SOC >= 0.0647434869739479)
        * (SOC < 0.12649498997995992)
        * (5.148076306638718 * SOC + -1.698907131533696)
        + (SOC >= 0.12649498997995992)
        * (SOC < 0.18824649298597196)
        * (-1.621526984395981 * SOC + 0.01373466940177881)
        + (SOC >= 0.18824649298597196)
        * (SOC < 0.2201182364729459)
        * (0.9609582737345619 * SOC + -0.9585529166603131)
        + (SOC >= 0.2201182364729459)
        * (SOC < 0.24999799599198397)
        * (8.086797378461412 * SOC + -4.095607190905182)
        + (SOC >= 0.24999799599198397)
        * (SOC < 0.49899599198396793)
        * (0.027187441389169065 * SOC + -0.06583452541489387)
        + (SOC >= 0.49899599198396793)
        * (SOC < 0.5308677354709419)
        * (-0.6689722852458644 * SOC + 0.6289273013281758)
        + (SOC >= 0.5308677354709419)
        * (SOC < 0.5627394789579159)
        * (-4.918386792079517 * SOC + 5.140681413968508)
        + (SOC >= 0.5627394789579159)
        * (SOC < 0.5786753507014029)
        * (-8.089249158177324 * SOC + 8.709420285458748)
        + (SOC >= 0.5786753507014029)
        * (SOC < 0.5946112224448898)
        * (16.9071330470654 * SOC + -20.22016019231154)
        + (SOC >= 0.5946112224448898)
        * (SOC < 0.6244909819639278)
        * (0.7671863128415559 * SOC + -1.0261732766469933)
        + (SOC >= 0.6244909819639278)
        * (SOC < 0.747993987975952)
        * (0.15182599382636663 * SOC + -0.2575993368801526)
        + (SOC >= 0.747993987975952)
        * (SOC < 0.871496993987976)
        * (-0.04781704558743716 * SOC + 0.04106424956539101)
        + (SOC >= 0.871496993987976)
        * (SOC < 0.90336873747495)
        * (-0.1496444014942142 * SOC + 0.21854871872237425)
        + (SOC >= 0.90336873747495)
        * (SOC < 0.933248496993988)
        * (-0.33915144362471494 * SOC + 0.5609381935064732)
        + (SOC >= 0.933248496993988)
        * (SOC < 0.9491843687374749)
        * (-0.9556622592323833 * SOC + 1.711653777599281)
        + (SOC >= 0.9491843687374749)
        * (SOC < 0.9651202404809619)
        * (-1.0335111665508805 * SOC + 1.8594397094992416)
        + (SOC >= 0.9651202404809619)
        * (SOC < 0.9810561122244489)
        * (-7.264891764311301 * SOC + 13.88750279157722)
        + (SOC >= 0.9810561122244489)
        * (SOC < 0.9890240480961924)
        * (-46.329255245194645 * SOC + 90.53616791773356)
        + (SOC >= 0.9890240480961924)
        * (-1958.1121836891184 * SOC + 3872.1347498593395)
    )


def OCV_graphite_discharge_precise(SOC):
    """! OCV curve for graphite as seen in "A Parametric OCV Model". """
    return (
        (SOC < 0.008967935871743486)
        * (
            (1180.304797082029 * SOC + -34.36439183295876) * SOC
            + 0.8683103636476212
        )
        + (SOC >= 0.008967935871743486)
        * (SOC < 0.016935871743486975)
        * (
            (222.50145224187054 * SOC + -17.185353884422867) * SOC
            + 0.7912801083172625
        )
        + (SOC >= 0.016935871743486975)
        * (SOC < 0.024903807615230464)
        * (
            (119.71105927010876 * SOC + -13.70366406075803) * SOC
            + 0.7617973821651665
        )
        + (SOC >= 0.024903807615230464)
        * (SOC < 0.03287174348697395)
        * (
            (28.117484153256555 * SOC + -9.141606513755605) * SOC
            + 0.7049910804250865
        )
        + (SOC >= 0.03287174348697395)
        * (SOC < 0.04880761523046093)
        * (
            (22.79740103169968 * SOC + -8.791845698353193) * SOC
            + 0.6992424565222352
        )
        + (SOC >= 0.04880761523046093)
        * (SOC < 0.0647434869739479)
        * (
            (151.86606110078702 * SOC + -21.390912696279543) * SOC
            + 1.0067076636710293
        )
        + (SOC >= 0.0647434869739479)
        * (SOC < 0.09661523046092185)
        * (
            (16.60358475400284 * SOC + -3.8761839454356224) * SOC
            + 0.4397253573047828
        )
        + (SOC >= 0.09661523046092185)
        * (SOC < 0.12649498997995992)
        * (
            (4.285474863953908 * SOC + -1.4959498936955518) * SOC
            + 0.3247419265748821
        )
        + (SOC >= 0.12649498997995992)
        * (SOC < 0.24999799599198397)
        * (
            (0.422183686301981 * SOC + -0.5185759360820597) * SOC
            + 0.26292547208738576
        )
        + (SOC >= 0.24999799599198397)
        * (SOC < 0.28186973947895794)
        * (
            (-3.876602339779396 * SOC + 1.6307998473553127) * SOC
            + -0.005744347159136964
        )
        + (SOC >= 0.28186973947895794)
        * (SOC < 0.31374148296593185)
        * (
            (5.610450996543207 * SOC + -3.7174266573091543) * SOC
            + 0.7480072586129776
        )
        + (SOC >= 0.31374148296593185)
        * (SOC < 0.3456132264529058)
        * (
            (2.8277985064155615 * SOC + -1.9713596196461651) * SOC
            + 0.47410042773582006
        )
        + (SOC >= 0.3456132264529058)
        * (SOC < 0.3754929859719439)
        * (
            (-0.1769195012095537 * SOC + 0.10558095074676288) * SOC
            + 0.11519136189360113
        )
        + (SOC >= 0.3754929859719439)
        * (SOC < 0.49899599198396793)
        * (
            (0.021604693942320452 * SOC + -0.04350793490374372) * SOC
            + 0.1431822773176713
        )
        + (SOC >= 0.49899599198396793)
        * (SOC < 0.5627394789579159)
        * (
            (-0.21630735354572295 * SOC + 0.19392638137871998) * SOC
            + 0.08394289122547072
        )
        + (SOC >= 0.5627394789579159)
        * (SOC < 0.5786753507014029)
        * (
            (-10.114674944156462 * SOC + 11.334330822327104) * SOC
            + -3.05062980401442
        )
        + (SOC >= 0.5786753507014029)
        * (SOC < 0.5946112224448898)
        * (
            (-19.42393847396221 * SOC + 22.108413498091323) * SOC
            + -6.1679778394562845
        )
        + (SOC >= 0.5946112224448898)
        * (SOC < 0.6244909819639278)
        * (
            (14.93008700638423 * SOC + -18.746164675451983) * SOC
            + 5.978317495664175
        )
        + (SOC >= 0.6244909819639278)
        * (SOC < 0.747993987975952)
        * (
            (0.2420361046673123 * SOC + -0.4010540139532921) * SOC
            + 0.25013941004604345
        )
        + (SOC >= 0.747993987975952)
        * (SOC < 0.871496993987976)
        * (
            (-0.03482951654671229 * SOC + 0.01313362633734183) * SOC
            + 0.09523447763037263
        )
        + (SOC >= 0.871496993987976)
        * (SOC < 0.933248496993988)
        * (
            (-0.23258896739052837 * SOC + 0.3578271602235432) * SOC
            + -0.05496521168408286
        )
        + (SOC >= 0.933248496993988)
        * (SOC < 0.9651202404809619)
        * (
            (-1.45470399402177 * SOC + 2.638901183738298) * SOC
            + -1.1193696636726713
        )
        + (SOC >= 0.9651202404809619)
        * (SOC < 0.9810561122244489)
        * (
            (-5.38636617995536 * SOC + 10.227954692494507) * SOC
            + -4.781544237369502
        )
        + (SOC >= 0.9810561122244489)
        * (SOC < 0.9890240480961924)
        * (
            (-68.42057970815029 * SOC + 133.90815561468798) * SOC
            + -65.4501527753024
        )
        + (SOC >= 0.9890240480961924)
        * (
            (-1438.3335558320523 * SOC + 2843.661909985816) * SOC
            + -1405.4559665212962
        )
    )


def d_OCV_graphite_discharge_precise_d_SOC(SOC):
    """! Derivative of the prior OCV curve. """
    return (
        (SOC < 0.008967935871743486)
        * (1180.304797082029 * SOC + -34.36439183295876)
        + (SOC >= 0.008967935871743486)
        * (SOC < 0.016935871743486975)
        * (222.50145224187054 * SOC + -17.185353884422867)
        + (SOC >= 0.016935871743486975)
        * (SOC < 0.024903807615230464)
        * (119.71105927010876 * SOC + -13.70366406075803)
        + (SOC >= 0.024903807615230464)
        * (SOC < 0.03287174348697395)
        * (28.117484153256555 * SOC + -9.141606513755605)
        + (SOC >= 0.03287174348697395)
        * (SOC < 0.04880761523046093)
        * (22.79740103169968 * SOC + -8.791845698353193)
        + (SOC >= 0.04880761523046093)
        * (SOC < 0.0647434869739479)
        * (151.86606110078702 * SOC + -21.390912696279543)
        + (SOC >= 0.0647434869739479)
        * (SOC < 0.09661523046092185)
        * (16.60358475400284 * SOC + -3.8761839454356224)
        + (SOC >= 0.09661523046092185)
        * (SOC < 0.12649498997995992)
        * (4.285474863953908 * SOC + -1.4959498936955518)
        + (SOC >= 0.12649498997995992)
        * (SOC < 0.24999799599198397)
        * (0.422183686301981 * SOC + -0.5185759360820597)
        + (SOC >= 0.24999799599198397)
        * (SOC < 0.28186973947895794)
        * (-3.876602339779396 * SOC + 1.6307998473553127)
        + (SOC >= 0.28186973947895794)
        * (SOC < 0.31374148296593185)
        * (5.610450996543207 * SOC + -3.7174266573091543)
        + (SOC >= 0.31374148296593185)
        * (SOC < 0.3456132264529058)
        * (2.8277985064155615 * SOC + -1.9713596196461651)
        + (SOC >= 0.3456132264529058)
        * (SOC < 0.3754929859719439)
        * (-0.1769195012095537 * SOC + 0.10558095074676288)
        + (SOC >= 0.3754929859719439)
        * (SOC < 0.49899599198396793)
        * (0.021604693942320452 * SOC + -0.04350793490374372)
        + (SOC >= 0.49899599198396793)
        * (SOC < 0.5627394789579159)
        * (-0.21630735354572295 * SOC + 0.19392638137871998)
        + (SOC >= 0.5627394789579159)
        * (SOC < 0.5786753507014029)
        * (-10.114674944156462 * SOC + 11.334330822327104)
        + (SOC >= 0.5786753507014029)
        * (SOC < 0.5946112224448898)
        * (-19.42393847396221 * SOC + 22.108413498091323)
        + (SOC >= 0.5946112224448898)
        * (SOC < 0.6244909819639278)
        * (14.93008700638423 * SOC + -18.746164675451983)
        + (SOC >= 0.6244909819639278)
        * (SOC < 0.747993987975952)
        * (0.2420361046673123 * SOC + -0.4010540139532921)
        + (SOC >= 0.747993987975952)
        * (SOC < 0.871496993987976)
        * (-0.03482951654671229 * SOC + 0.01313362633734183)
        + (SOC >= 0.871496993987976)
        * (SOC < 0.933248496993988)
        * (-0.23258896739052837 * SOC + 0.3578271602235432)
        + (SOC >= 0.933248496993988)
        * (SOC < 0.9651202404809619)
        * (-1.45470399402177 * SOC + 2.638901183738298)
        + (SOC >= 0.9651202404809619)
        * (SOC < 0.9810561122244489)
        * (-5.38636617995536 * SOC + 10.227954692494507)
        + (SOC >= 0.9810561122244489)
        * (SOC < 0.9890240480961924)
        * (-68.42057970815029 * SOC + 133.90815561468798)
        + (SOC >= 0.9890240480961924)
        * (-1438.3335558320523 * SOC + 2843.661909985816)
    )


def OCV_BASF_GITT_Test_cathode(SOC):
    """!
    Estimated OCV for the cathode in the "BASF GITT Test"-data.
    E₀: [3.9863272907672287, 3.9770716502364394, 3.908636968226356,
         3.7234749637590765, 3.673179452264688, 3.6408841257157816]
    a: [-26.627154259595873, -1.292777296589606, -0.1638198787655928,
        -0.777064236034688, -4.268952015290985, -2.8557091327913606]
    Δx: [0.024115021125137043, 0.041854701383275045, 0.7000584168144725,
         0.0990843265896007, 0.01814215130772722, 0.11674538277978741]
    """
    return (
        (SOC < 0.01984924623115578)
        * (
            (333.0496938075703 * SOC + -21.080897932496384) * SOC
            + 4.7498873861616815
        )
        + (SOC >= 0.01984924623115578)
        * (SOC < 0.029698492462311557)
        * (
            (124.59263988527528 * SOC + -12.805467148646812) * SOC
            + 4.667756854512925
        )
        + (SOC >= 0.029698492462311557)
        * (SOC < 0.04447236180904523)
        * (
            (60.383121401385324 * SOC + -8.991615347241918) * SOC
            + 4.611124030024724
        )
        + (SOC >= 0.04447236180904523)
        * (SOC < 0.07402010050251256)
        * (
            (22.48743795919836 * SOC + -5.620994257157776) * SOC
            + 4.536174289705013
        )
        + (SOC >= 0.07402010050251256)
        * (SOC < 0.1035678391959799)
        * (
            (8.69988759914122 * SOC + -3.5798825304881348) * SOC
            + 4.4606326421325395
        )
        + (SOC >= 0.1035678391959799)
        * (SOC < 0.13311557788944725)
        * (
            (6.005413185517341 * SOC + -3.021760744912285) * SOC
            + 4.431730908462402
        )
        + (SOC >= 0.13311557788944725)
        * (SOC < 0.2562311557788945)
        * (
            (2.8038871012608126 * SOC + -2.169414755244347) * SOC
            + 4.375000643974197
        )
        + (SOC >= 0.2562311557788945)
        * (SOC < 0.275929648241206)
        * (
            (4.80302402342204 * SOC + -3.193897083495358) * SOC
            + 4.5062527894956474
        )
        + (SOC >= 0.275929648241206)
        * (SOC < 0.2907035175879397)
        * (
            (17.6320482510273 * SOC + -10.27371336829674) * SOC
            + 5.483018398034346
        )
        + (SOC >= 0.2907035175879397)
        * (SOC < 0.32025125628140705)
        * (
            (-9.89808376503629 * SOC + 5.732499065162187) * SOC
            + 3.1564872692012074
        )
        + (SOC >= 0.32025125628140705)
        * (SOC < 0.3793467336683417)
        * (
            (-1.2425282366077681 * SOC + 0.18859400157708706) * SOC
            + 4.04420854986023
        )
        + (SOC >= 0.3793467336683417)
        * (SOC < 0.4433668341708543)
        * (
            (-0.9961339960939881 * SOC + 0.0016563009099854753) * SOC
            + 4.0796656529339685
        )
        + (SOC >= 0.4433668341708543)
        * (SOC < 0.502462311557789)
        * (
            (0.05432724724954596 * SOC + -0.9298230508509846) * SOC
            + 4.286159178576881
        )
        + (SOC >= 0.502462311557789)
        * (SOC < 0.6255778894472362)
        * (
            (0.9843501493071471 * SOC + -1.864425965190037) * SOC
            + 4.5209605489406
        )
        + (SOC >= 0.6255778894472362)
        * (SOC < 0.6600502512562815)
        * (
            (-0.35737862629639494 * SOC + -0.18571425388472562) * SOC
            + 3.9958780842663373
        )
        + (SOC >= 0.6600502512562815)
        * (SOC < 0.6895979899497487)
        * (
            (-0.4251901558748159 * SOC + -0.09619621961178382) * SOC
            + 3.966334883759373
        )
        + (SOC >= 0.6895979899497487)
        * (SOC < 0.7486934673366834)
        * (
            (2.26117752072264 * SOC + -3.801223719706968) * SOC
            + 5.24382464214645
        )
        + (SOC >= 0.7486934673366834)
        * (SOC < 0.812713567839196)
        * (
            (1.361184402706499 * SOC + -2.4535857834938497) * SOC
            + 4.739340782557406
        )
        + (SOC >= 0.812713567839196)
        * (SOC < 0.8718090452261307)
        * (
            (-0.4806551482113264 * SOC + 0.5401902021335445) * SOC
            + 3.52279960126225
        )
        + (SOC >= 0.8718090452261307)
        * (SOC < 0.9013567839195981)
        * (
            (-10.332189042607297 * SOC + 17.71750291910621) * SOC
            + -3.964868698404871
        )
        + (SOC >= 0.9013567839195981)
        * (SOC < 0.9309045226130653)
        * (
            (-27.056661031497242 * SOC + 47.86693548842322) * SOC
            + -17.552566487245713
        )
        + (SOC >= 0.9309045226130653)
        * (SOC < 0.9456783919597991)
        * (
            (-15.956196407296375 * SOC + 27.199990044877268) * SOC
            + -7.933089996246963
        )
        + (SOC >= 0.9456783919597991)
        * (SOC < 0.9604522613065327)
        * (
            (-39.52119531019889 * SOC + 71.76981058294041) * SOC
            + -29.007448104433934
        )
        + (SOC >= 0.9604522613065327)
        * (SOC < 0.9752261306532664)
        * (
            (-68.66564304507119 * SOC + 127.75351204591425) * SOC
            + -55.892284437646595
        )
        + (SOC >= 0.9752261306532664)
        * (SOC < 0.9850753768844221)
        * (
            (-231.3874904454642 * SOC + 445.1347072719873) * SOC
            + -210.65150191886642
        )
        + (SOC >= 0.9850753768844221)
        * (
            (-393.56737895228434 * SOC + 764.6535368598998) * SOC
            + -368.0265676578274
        )
    )
