# coding: utf-8

"""
    FiftyTen Service Contracts

    Common API contracts for FiftyTen microservices

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fiftyten_service_contracts.models.data_update_event import DataUpdateEvent

class TestDataUpdateEvent(unittest.TestCase):
    """DataUpdateEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataUpdateEvent:
        """Test DataUpdateEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataUpdateEvent`
        """
        model = DataUpdateEvent()
        if include_optional:
            return DataUpdateEvent(
                event = 'data_update_completed',
                context = fiftyten_service_contracts.models.data_update_event_context.DataUpdateEvent_context(
                    exchange_type = '', 
                    symbol = '', 
                    interval = '', ),
                metadata = fiftyten_service_contracts.models.event_metadata.EventMetadata(
                    load_type = 'initial', 
                    data_quality = { }, 
                    completion_rate = 0, 
                    item_count = 56, 
                    timestamp = 56, ),
                timestamp = 56
            )
        else:
            return DataUpdateEvent(
                event = 'data_update_completed',
                context = fiftyten_service_contracts.models.data_update_event_context.DataUpdateEvent_context(
                    exchange_type = '', 
                    symbol = '', 
                    interval = '', ),
                metadata = fiftyten_service_contracts.models.event_metadata.EventMetadata(
                    load_type = 'initial', 
                    data_quality = { }, 
                    completion_rate = 0, 
                    item_count = 56, 
                    timestamp = 56, ),
                timestamp = 56,
        )
        """

    def testDataUpdateEvent(self):
        """Test DataUpdateEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
