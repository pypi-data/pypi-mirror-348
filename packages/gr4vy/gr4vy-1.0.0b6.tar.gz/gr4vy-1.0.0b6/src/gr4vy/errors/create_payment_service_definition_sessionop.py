"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .error403 import Error403Data
from .error403active import Error403ActiveData
from .error403forbidden import Error403ForbiddenData
from gr4vy import utils
from typing import Union
from typing_extensions import TypeAliasType


Response403CreatePaymentServiceDefinitionSessionUnion = TypeAliasType(
    "Response403CreatePaymentServiceDefinitionSessionUnion",
    Union[Error403Data, Error403ForbiddenData, Error403ActiveData],
)
r"""The credentials were invalid or the caller did not have permission to act on the resource."""


class Response403CreatePaymentServiceDefinitionSession(Exception):
    r"""The credentials were invalid or the caller did not have permission to act on the resource."""

    data: Response403CreatePaymentServiceDefinitionSessionUnion

    def __init__(self, data: Response403CreatePaymentServiceDefinitionSessionUnion):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, Response403CreatePaymentServiceDefinitionSessionUnion
        )
