# bartz/pyproject.toml
#
# Copyright (c) 2024-2025, Giacomo Petrillo
#
# This file is part of bartz.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

[build-system]
requires = ["uv_build>=0.7.3,<0.8.0"]
build-backend = "uv_build"

[project]
name = "bartz"
version = "0.5.0"
description = "Super-fast BART (Bayesian Additive Regression Trees) in Python"
authors = [
    {name = "Giacomo Petrillo", email = "info@giacomopetrillo.com"},
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10"
packages = [
    { include = "bartz", from = "src" },
]
dependencies = [
    "jax >=0.4.35,<1",
    "jaxlib >=0.4.35,<1",
    "numpy >=1.25.2,<3",
    "scipy >=1.11.4,<2",
]

[project.urls]
Homepage = "https://github.com/Gattocrucco/bartz"
Documentation = "https://gattocrucco.github.io/bartz/docs-dev"
Issues = "https://github.com/Gattocrucco/bartz/issues"

[dependency-groups]
only-local = [
    "appnope>=0.1.4",
    "ipython>=8.36.0",
    "matplotlib>=3.10.3",
    "matplotlib-label-lines>=0.8.1",
    "polars[pandas,pyarrow]>=1.29.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.9",
    "scikit-learn>=1.6.1",
    "tomli>=2.2.1",
    "virtualenv>=20.31.2",
    "xgboost>=3.0.0",
]
ci = [
    "asv>=0.6.4",
    "coverage>=7.8.0",
    "myst-parser>=4.0.1",
    "numpydoc>=1.8.0",
    "packaging>=25.0",
    "pytest>=8.3.5",
    "pytest-timeout>=2.4.0",
    "sphinx>=8.1.3",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    'error:scatter inputs have incompatible types.*',
]
addopts = [
    "-r xXfE",
    "--pdbcls=IPython.terminal.debugger:TerminalPdb",
    "--durations=3",
]
timeout = 32
timeout_method = "thread"  # when jax hangs, signals do not work

# I wanted to use `--import-mode=importlib`, but it breaks importing submodules,
# in particular `from . import util`.

[tool.coverage.run]
branch = true
source = ["bartz"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
show_contexts = true

[tool.coverage.paths]
# the first path in each list must be the source directory in the machine that's
# generating the coverage report

github = [
    '/home/runner/work/bartz/bartz/src/bartz/',
    '/Users/runner/work/bartz/bartz/src/bartz/',
    'D:\a\bartz\bartz\src\bartz\',
    '/Library/Frameworks/Python.framework/Versions/*/lib/python*/site-packages/bartz/',
    '/Users/runner/hostedtoolcache/Python/*/*/lib/python*/site-packages/bartz/',
    '/opt/hostedtoolcache/Python/*/*/lib/python*/site-packages/bartz/',
    'C:\hostedtoolcache\windows\Python\*\*\Lib\site-packages\bartz\',
]

local = [
    'src/bartz/',
    '/home/runner/work/bartz/bartz/src/bartz/',
    '/Users/runner/work/bartz/bartz/src/bartz/',
    'D:\a\bartz\bartz\src\bartz\',
    '/Library/Frameworks/Python.framework/Versions/*/lib/python*/site-packages/bartz/',
    '/Users/runner/hostedtoolcache/Python/*/*/lib/python*/site-packages/bartz/',
    '/opt/hostedtoolcache/Python/*/*/lib/python*/site-packages/bartz/',
    'C:\hostedtoolcache\windows\Python\*\*\Lib\site-packages\bartz\',
]

[tool.ruff]
exclude = [".asv", "*.ipynb"]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = [
    "B", # bugbear: grab bag of additional stuff
    "UP", # pyupgrade: fix some outdated idioms
    "I", # isort: sort and reformat import statements
    "F", # flake8
]
ignore = [
    "B028", # warn with stacklevel = 2
]

[tool.uv]
python-downloads = "never"
python-preference = "only-system"
