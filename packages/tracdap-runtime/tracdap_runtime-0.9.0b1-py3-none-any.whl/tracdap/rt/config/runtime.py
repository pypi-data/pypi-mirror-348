# Code generated by TRAC

import typing as _tp  # noqa
import dataclasses as _dc  # noqa
import enum as _enum  # noqa

from .common import *  # noqa



@_dc.dataclass
class RuntimeConfig:

    config: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)

    storage: "StorageConfig" = _dc.field(default_factory=lambda: StorageConfig())

    repositories: "_tp.Dict[str, PluginConfig]" = _dc.field(default_factory=dict)

    sparkSettings: "SparkSettings" = _dc.field(default_factory=lambda: SparkSettings())

    runtimeApi: "ServiceConfig" = _dc.field(default_factory=lambda: ServiceConfig())

    properties: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)


@_dc.dataclass
class SparkSettings:

    sparkProps: "_tp.Dict[str, str]" = _dc.field(default_factory=dict)
