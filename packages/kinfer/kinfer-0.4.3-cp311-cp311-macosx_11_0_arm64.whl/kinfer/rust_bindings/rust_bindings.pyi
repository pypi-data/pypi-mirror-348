# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import numpy
import numpy.typing
import typing

class ModelProviderABC:
    def __new__(cls) -> ModelProviderABC: ...
    def get_joint_angles(self, joint_names:typing.Sequence[builtins.str]) -> numpy.typing.NDArray[numpy.float32]: ...
    def get_joint_angular_velocities(self, joint_names:typing.Sequence[builtins.str]) -> numpy.typing.NDArray[numpy.float32]: ...
    def get_projected_gravity(self) -> numpy.typing.NDArray[numpy.float32]: ...
    def get_accelerometer(self) -> numpy.typing.NDArray[numpy.float32]: ...
    def get_gyroscope(self) -> numpy.typing.NDArray[numpy.float32]: ...
    def get_command(self) -> numpy.typing.NDArray[numpy.float32]: ...
    def get_time(self) -> numpy.typing.NDArray[numpy.float32]: ...
    def take_action(self, joint_names:typing.Sequence[builtins.str], action:numpy.typing.NDArray[numpy.float32]) -> None: ...

class PyModelProvider:
    ...

class PyModelRunner:
    def __new__(cls, model_path:builtins.str, provider:ModelProviderABC) -> PyModelRunner: ...
    def init(self) -> numpy.typing.NDArray[numpy.float32]: ...
    def step(self, carry:numpy.typing.NDArray[numpy.float32]) -> tuple[numpy.typing.NDArray[numpy.float32], numpy.typing.NDArray[numpy.float32]]: ...
    def take_action(self, action:numpy.typing.NDArray[numpy.float32]) -> None: ...

class PyModelRuntime:
    def __new__(cls, model_runner:PyModelRunner, dt:builtins.int) -> PyModelRuntime: ...
    def set_slowdown_factor(self, slowdown_factor:builtins.int) -> None: ...
    def set_magnitude_factor(self, magnitude_factor:builtins.float) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...

def get_version() -> builtins.str: ...

