[project]
name = "dariko"
version = "0.3.1"
description = "LLMの出力をPydanticモデルで型安全に扱うためのPythonライブラリ"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Yuto Nose", email = "yuto.nose@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "pydantic>=2.0.0",
    "requests>=2.31.0",
]
keywords = ["llm", "pydantic", "type-safety", "openai", "gpt"]

[project.urls]
Homepage = "https://github.com/YutoNose/dariko"
Repository = "https://github.com/YutoNose/dariko.git"
Documentation = "https://github.com/YutoNose/dariko#readme"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["dariko"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.lint]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle error
    "W",   # pycodestyle warning
    "I",   # isort
    "B",   # flake8-bugbear
    "RUF", # Ruff-specific rules
    "UP",  # pyupgrade
]

ignore = [
    "E501",  # line too long
    "ANN",   # flake8-annotations
    "D",     # pydocstyle
    "PL",    # Pylint
]

[tool.ruff.lint.isort]
known-first-party = ["dariko"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[project.optional-dependencies]
develop = [
    "pytest",
    "ruff",
    "pre-commit",
    "dotenv"
]
