[tox]
# pyenv versions
# pyenv install --list
# pyenv global 3.9.16 3.10.14 3.11.9 3.12.4 pypy3.10-7.3.16
# echo "$(pyenv versions --bare)" > {toxworkdir}{/}.python-version
#
# rm -rf build/lib; cd .tox && tox -r --root=.. -c ../tox-test.ini -e py312-linux --workdir=.; cd - &>/dev/null
isolated_build=True
env_list =
    py{py39,py310,39,310,311,312,313}-{linux,macos,windows}

[gh-actions]
# `PYVERSIONS <https://pypi.org/project/tox-gh/>`_
# `Example with pypy3.10 <https://github.com/celery/kombu/blob/main/tox.ini>`_
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313
    pypy3-9: pypy39
    pypy3-10: pypy310

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
usedevelop = False
download = True
extras =
    toml

deps =
    -r requirements/pip.lock
    -r requirements/dev.lock
    build

# Windows can't update the pip version with pip running, so use Python
# to install things.
install_command = python -m pip install -I {opts} {packages}

passenv = *
setenv =
    #PYTHONWARNINGS=ignore:removed in Python 3.14; use ast.Constant:DeprecationWarning
    # Disable CPython's color output
    PYTHON_COLORS=0
    TOXINIDIR = {toxinidir}

# migrate build --> cibuildwheel
# https://github.com/pypa/wheel/issues/573
commands =
    python -c 'import build; print(build.__path__)'
    python igor.py build_next "tag"
    python -m pip install --disable-pip-version-check -q .
    coverage run --omit="*.txt" -m unittest discover -t. -s tests -p "test_*.py" --verbose --locals
    coverage report --fail-under=98
