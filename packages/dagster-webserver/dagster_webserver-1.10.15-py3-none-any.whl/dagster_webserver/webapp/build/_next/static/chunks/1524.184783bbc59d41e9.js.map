{"version":3,"file":"static/chunks/1524.184783bbc59d41e9.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-core/src/integrations/IntegrationTag.tsx","webpack://_N_E/../ui-core/src/integrations/IntegrationIcon.tsx","webpack://_N_E/../ui-core/src/integrations/IntegrationTopcard.tsx","webpack://_N_E/../ui-core/src/integrations/MarketplaceHome.tsx","webpack://_N_E/../ui-core/src/integrations/MarketplaceRoot.tsx","webpack://_N_E/../ui-core/src/integrations/MarkdownSupport.tsx","webpack://_N_E/../ui-core/src/integrations/IntegrationPage.tsx","webpack://_N_E/../ui-core/src/integrations/SingleIntegrationRoot.tsx","webpack://_N_E/../ui-core/src/integrations/IntegrationsRoot.tsx","webpack://_N_E/../ui-core/src/integrations/css/IntegrationPage.module.css?c6cd","webpack://_N_E/../ui-core/src/integrations/css/IntegrationTopcard.module.css?b137","webpack://_N_E/../ui-core/src/integrations/css/MarkdownSupport.module.css?f4d7","webpack://_N_E/../ui-core/src/integrations/css/MarketplaceHome.module.css?90d3"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import {Box, Colors, Icon, IconName, Tag} from '@dagster-io/ui-components';\n\nexport enum IntegrationTag {\n  Alerting = 'alerting',\n  BiTools = 'bi',\n  CommunitySupported = 'community-supported',\n  Compute = 'compute',\n  DagsterSupported = 'dagster-supported',\n  EtlTools = 'etl',\n  Metadata = 'metadata',\n  Monitoring = 'monitoring',\n  Storage = 'storage',\n}\n\nexport const IntegrationTagKeys: string[] = Object.values(IntegrationTag);\n\nexport const IntegrationTagLabel: Record<IntegrationTag, string> = {\n  [IntegrationTag.Alerting]: 'Alerting',\n  [IntegrationTag.BiTools]: 'BI',\n  [IntegrationTag.CommunitySupported]: 'Community Supported',\n  [IntegrationTag.Compute]: 'Compute',\n  [IntegrationTag.DagsterSupported]: 'Built by Dagster Labs',\n  [IntegrationTag.EtlTools]: 'ETL',\n  [IntegrationTag.Metadata]: 'Metadata',\n  [IntegrationTag.Monitoring]: 'Monitoring',\n  [IntegrationTag.Storage]: 'Storage',\n};\n\nexport const IntegrationTagIcon: Record<IntegrationTag, IconName> = {\n  [IntegrationTag.Alerting]: 'alert',\n  [IntegrationTag.BiTools]: 'chart_bar',\n  [IntegrationTag.CommunitySupported]: 'people',\n  [IntegrationTag.Compute]: 'speed',\n  [IntegrationTag.DagsterSupported]: 'dagster_solid',\n  [IntegrationTag.EtlTools]: 'transform',\n  [IntegrationTag.Metadata]: 'metadata',\n  [IntegrationTag.Monitoring]: 'visibility',\n  [IntegrationTag.Storage]: 'download',\n};\n\nexport const BuiltByDagsterLabs = () => (\n  <Box\n    flex={{direction: 'row', alignItems: 'center', gap: 4}}\n    style={{fontSize: 12, color: Colors.textLight()}}\n  >\n    <Icon name=\"shield_check\" size={12} color={Colors.textLight()} />\n    Built by Dagster Labs\n  </Box>\n);\n\nexport const IntegrationTags = ({tags}: {tags: string[]}) => (\n  <>\n    {tags\n      .filter(\n        (tag): tag is IntegrationTag =>\n          IntegrationTagKeys.includes(tag) && tag !== IntegrationTag.DagsterSupported,\n      )\n      .map((tag) => (\n        <Tag key={tag} icon={IntegrationTagIcon[tag] ?? undefined}>\n          {IntegrationTagLabel[tag]}\n        </Tag>\n      ))}\n  </>\n);\n","import {Box, Icon, IconWrapper} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nconst INTEGRATIONS_ORIGIN_AND_PATH = 'https://integration-registry.dagster.io/logos';\n\ninterface Props {\n  name: string;\n  logoFilename: string | null;\n}\n\nexport const IntegrationIcon = ({name, logoFilename}: Props) => {\n  const icon = () => {\n    if (logoFilename === null) {\n      return <Icon name=\"workspace\" size={24} />;\n    }\n\n    return (\n      <IntegrationIconWrapper\n        role=\"img\"\n        $size={32}\n        $img={`${INTEGRATIONS_ORIGIN_AND_PATH}/${logoFilename}`}\n        $color={null}\n        $rotation={null}\n        aria-label={name}\n      />\n    );\n  };\n\n  return (\n    <Box\n      flex={{alignItems: 'center', justifyContent: 'center'}}\n      border=\"all\"\n      style={{borderRadius: 8, height: 48, width: 48}}\n      padding={8}\n    >\n      {icon()}\n    </Box>\n  );\n};\n\nconst IntegrationIconWrapper = styled(IconWrapper)`\n  mask-size: contain;\n  mask-repeat: no-repeat;\n  mask-position: center;\n  -webkit-mask-size: contain;\n  -webkit-mask-repeat: no-repeat;\n  -webkit-mask-position: center;\n`;\n","import {Box, Button, Icon} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\n\nimport {IntegrationIcon} from './IntegrationIcon';\nimport {BuiltByDagsterLabs, IntegrationTag, IntegrationTags} from './IntegrationTag';\nimport styles from './css/IntegrationTopcard.module.css';\nimport {IntegrationFrontmatter} from './types';\n\nexport const IntegrationTopcard = ({integration}: {integration: IntegrationFrontmatter}) => {\n  const {id, name, title, tags, logoFilename, pypi, source} = integration;\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n      <Link\n        to={`/integrations/${id}`}\n        className={styles.itemLink}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <Box flex={{direction: 'row', gap: 16, alignItems: 'flex-start'}}>\n          <IntegrationIcon name={name} logoFilename={logoFilename} />\n          <Box\n            flex={{direction: 'column', gap: 4, justifyContent: 'center'}}\n            style={{minHeight: 48}}\n          >\n            <div style={{fontSize: 16, fontWeight: 600}}>{name || title}</div>\n            {tags.includes(IntegrationTag.DagsterSupported) ? <BuiltByDagsterLabs /> : null}\n          </Box>\n        </Box>\n      </Link>\n      <Box flex={{direction: 'row', gap: 16, alignItems: 'center'}}>\n        <IntegrationTags tags={tags} />\n        <Box flex={{direction: 'row', gap: 8}}>\n          {pypi ? (\n            <a\n              href={pypi}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className={styles.externalLink}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <Button icon={<Icon name=\"python\" size={16} />} />\n            </a>\n          ) : null}\n          {source ? (\n            <a\n              href={source}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className={styles.externalLink}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <Button icon={<Icon name=\"github\" size={16} />} />\n            </a>\n          ) : null}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import {Box, Button, Colors, Heading, Icon, TextInput} from '@dagster-io/ui-components';\nimport {useHistory} from 'react-router-dom';\n\nimport {IntegrationTag, IntegrationTagIcon, IntegrationTagLabel} from './IntegrationTag';\nimport {IntegrationTopcard} from './IntegrationTopcard';\nimport styles from './css/MarketplaceHome.module.css';\nimport {IntegrationFrontmatter} from './types';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\ninterface Props {\n  integrations: IntegrationFrontmatter[];\n}\n\nexport const MarketplaceHome = (props: Props) => {\n  const {integrations} = props;\n  const history = useHistory();\n\n  const [searchQuery, setSearchQuery] = useQueryPersistedState<string>({\n    queryKey: 'search',\n    defaults: {search: ''},\n  });\n  const [filters, setFilters] = useQueryPersistedState<IntegrationTag[] | null>({\n    encode: (tags) => ({tags: tags?.length ? tags.join(',') : undefined}),\n    decode: (qs) => {\n      if (typeof qs.tags === 'string') {\n        return qs.tags\n          ? qs.tags\n              .split(',')\n              .filter((k) => Object.values(IntegrationTag).includes(k as IntegrationTag))\n              .map((k) => k as IntegrationTag)\n          : null;\n      }\n      return null;\n    },\n  });\n\n  const filteredByTag = integrations.filter((integration) => {\n    const {tags} = integration;\n    return filters === null || filters.every((filter) => tags.includes(filter));\n  });\n\n  const filteredIntegrations = filteredByTag.filter((integration) => {\n    return integration.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n\n  return (\n    <Box flex={{direction: 'column', gap: 12}}>\n      <Box margin={{bottom: 8}}>\n        <Heading>Integrations Marketplace</Heading>\n      </Box>\n      <div className={styles.searchInput}>\n        <TextInput\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          placeholder=\"Search for integrations\"\n          icon=\"search\"\n        />\n      </div>\n      <Box\n        flex={{direction: 'row', gap: 12, alignItems: 'center', wrap: 'wrap'}}\n        margin={{bottom: 12}}\n      >\n        <div style={{fontSize: 14}}>Filters</div>\n        {Object.values(IntegrationTag).map((tag) => (\n          <Button\n            key={tag}\n            icon={<Icon name={IntegrationTagIcon[tag]} />}\n            onClick={() =>\n              setFilters(\n                filters?.includes(tag)\n                  ? filters.filter((f) => f !== tag)\n                  : [...(filters || []), tag],\n              )\n            }\n            style={{\n              backgroundColor: filters?.includes(tag) ? Colors.backgroundBlue() : 'transparent',\n            }}\n          >\n            {IntegrationTagLabel[tag]}\n          </Button>\n        ))}\n      </Box>\n      <Box flex={{direction: 'column', gap: 12}}>\n        {filteredIntegrations.map((integration) => {\n          return (\n            <Box\n              border=\"all\"\n              padding={{vertical: 16, horizontal: 24}}\n              style={{borderRadius: 8, overflow: 'hidden'}}\n              className={styles.itemCard}\n              key={integration.id}\n              onClick={() => history.push(`/integrations/${integration.id}`)}\n            >\n              <IntegrationTopcard integration={integration} />\n              <div className={styles.description}>{integration.description}</div>\n            </Box>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n","import {Box, Colors, Page} from '@dagster-io/ui-components';\nimport {useEffect, useState} from 'react';\n\nimport {MarketplaceHome} from './MarketplaceHome';\nimport {IntegrationFrontmatter} from './types';\n\nconst INTEGRATIONS_URL = 'https://integration-registry.dagster.io/api/integrations/index.json';\n\nexport const MarketplaceRoot = () => {\n  const [integrations, setIntegrations] = useState<IntegrationFrontmatter[]>([]);\n\n  useEffect(() => {\n    const fetchIntegrations = async () => {\n      const res = await fetch(INTEGRATIONS_URL);\n      let data: IntegrationFrontmatter[] = await res.json();\n\n      // Filter out articles and sub-pages that do not have integration names\n      data = data.filter((d) => !!d.name);\n\n      setIntegrations(data);\n    };\n    fetchIntegrations();\n  }, []);\n\n  return (\n    <Page style={{backgroundColor: Colors.backgroundLight()}}>\n      <Box\n        padding={{vertical: 32}}\n        style={{width: '80vw', maxWidth: '1200px', minWidth: '800px', margin: '0 auto'}}\n      >\n        <MarketplaceHome integrations={integrations} />\n      </Box>\n    </Page>\n  );\n};\n","import {Alert, Box, Colors, Tab, Table, Tabs} from '@dagster-io/ui-components';\nimport clsx from 'clsx';\nimport {useLayoutEffect, useRef, useState} from 'react';\nimport {Components} from 'react-markdown/lib/ast-to-react';\n\nimport {CopyIconButton} from '../ui/CopyButton';\nimport styles from './css/MarkdownSupport.module.css';\n\nconst DOCS_ORIGIN = 'https://docs.dagster.io';\n\n/**\n * On the docs site, we render Markdown using Docasaurus, which supports GFM (the\n * Github extensions), partials, directives, and freeform embedded React components. (MDX)\n *\n * The generate.ts script that pre-processes the docs markdown for the marketplace API\n * removes MDX partials and converts <CodeExample file={...} /> to code blocks with inline\n * content, since the referenced files would be unavailable in the app.\n *\n * We can't execute inline JSX within the markdown because it would require parsing JSX and\n * then evaling the code. However, we can use `rehype-raw` to parse the inline components\n * as HTML, and then register React components with `ast-to-react` to be used to render\n * those HTML tags.\n *\n * This is lightweight and works well for our use case, but there are a few subtle gotchas:\n *\n * - `<PyObject decorator />` yields a `decorator=true` prop in JSX but below we get\n *   `decorator=''` because the \"props\" these components receive are HTML attributes.\n *\n * - Childless nodes like `<Beta />` are passed the subsequent nodes as children and we\n *   need to use a fragment to render them. This seems to be a behavior of rehype-raw.\n *\n * In general, we're trying to make this markdown match the app (eg: same table styling,\n * same tabs) instead of styling it to be identical to the docs.\n *\n */\nexport const MDXAnchor: Components['a'] = (props) => {\n  const {children, href, ...rest} = props;\n  const finalHref = href?.startsWith('/') ? `${DOCS_ORIGIN}${href}` : href;\n  return (\n    <a href={finalHref} target=\"_blank\" rel=\"noreferrer\" {...rest}>\n      {children}\n    </a>\n  );\n};\n\nexport const MDXCode: Components['code'] = (props) => {\n  const {children, className, inline, ...rest} = props;\n\n  const codeRef = useRef<HTMLElement>(null);\n  const [value, setValue] = useState('');\n\n  useLayoutEffect(() => {\n    setValue(codeRef.current?.textContent?.trim() ?? '');\n  }, [children]);\n\n  if (inline) {\n    return (\n      <code className={clsx(className, styles.inlineCode)} {...rest}>\n        {children}\n      </code>\n    );\n  }\n\n  return (\n    <div className={styles.codeBlock}>\n      <code className={className} {...rest} ref={codeRef}>\n        {children}\n      </code>\n      <div className={styles.copyButton}>\n        <CopyIconButton value={value} iconSize={16} iconColor={Colors.accentPrimary()} />\n      </div>\n    </div>\n  );\n};\n\nexport const MDXBeta = ({children}: {children: React.ReactNode}) => (\n  <>\n    <Alert\n      intent=\"warning\"\n      title=\"Warning\"\n      description=\"This feature is considered in a beta stage. It is still being tested and may change.\"\n    />\n    {children}\n  </>\n);\n\nexport const MDXDeprecated = ({children}: {children: React.ReactNode}) => (\n  <>\n    <Alert\n      intent=\"warning\"\n      title=\"Warning\"\n      description=\"This feature is considered deprecated and is still available, but will be removed in the future. It is recommended to avoid new usage.\"\n    />\n    {children}\n  </>\n);\n\nexport const MDXTabs = ({children}: {children: React.ReactNode}) => {\n  const [tabId, setTabId] = useState<string | null>(null);\n\n  const tabitems: React.ReactElement<{value: string}>[] = (\n    Array.isArray(children) ? children : [children]\n  ).filter(\n    (node) => node && typeof node === 'object' && 'type' in node && node.type === MDXTabItem,\n  );\n\n  const selected = tabitems.find((t) => t.props.value === tabId) || tabitems[0];\n\n  return (\n    <Box\n      background={Colors.popoverBackground()}\n      padding={{horizontal: 16, bottom: 8}}\n      style={{borderRadius: 8}}\n    >\n      <Box border=\"bottom\">\n        <Tabs selectedTabId={selected?.props.value} onChange={setTabId}>\n          {tabitems.map((t) => (\n            <Tab key={t.props.value} id={t.props.value} title={t.props.value} />\n          ))}\n        </Tabs>\n      </Box>\n      {selected ? (\n        <div role=\"tabpanel\" key={selected.props.value}>\n          {selected}\n        </div>\n      ) : null}\n    </Box>\n  );\n};\n\nexport const MDXTabItem = ({children}: {value: string; children: React.ReactNode}) => {\n  return children;\n};\n\nexport const MDXPyObject = ({\n  section,\n  object,\n  displayText,\n  module = 'dagster',\n  pluralize,\n  decorator,\n  children,\n}: {\n  section: string;\n  module: string;\n  object: string;\n  displayText?: string;\n  pluralize?: boolean;\n  decorator?: boolean;\n  children?: React.ReactNode;\n}) => {\n  let textValue = displayText || object;\n  if (pluralize !== undefined) {\n    textValue += 's';\n  }\n\n  if (decorator !== undefined) {\n    if (module === 'dagster') {\n      textValue = '@dg.' + textValue;\n    } else {\n      textValue = '@' + module + '.' + textValue;\n    }\n  }\n\n  let href = `/api/dagster/${section}#${module}.${object}`;\n  if (section === 'libraries' || section === 'dagster_dg') {\n    const _package = module.replace(/_/g, '-');\n    href = `/api/${section}/${_package}#${module}.${object}`;\n  }\n\n  return (\n    <>\n      <a href={`${DOCS_ORIGIN}${href}`} target=\"_blank\" rel=\"noreferrer\">\n        <code className={styles.inlineCode} style={{paddingLeft: '4px', paddingRight: '4px'}}>\n          {textValue}\n        </code>\n      </a>\n      {children}\n    </>\n  );\n};\n\nexport const MDXComponents = {\n  beta: MDXBeta,\n  deprecated: MDXDeprecated,\n  pyobject: MDXPyObject,\n  table: Table,\n  code: MDXCode,\n  tabs: MDXTabs,\n  tabitem: MDXTabItem,\n  a: MDXAnchor,\n} as Components;\n","import {Box} from '@dagster-io/ui-components';\nimport bash from 'highlight.js/lib/languages/bash';\nimport yaml from 'highlight.js/lib/languages/yaml';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeHighlight from 'rehype-highlight';\nimport rehypeRaw from 'rehype-raw';\nimport remarkDirective from 'remark-directive';\nimport remarkGfm from 'remark-gfm';\n\nimport {IntegrationTopcard} from './IntegrationTopcard';\nimport {MDXComponents} from './MarkdownSupport';\nimport styles from './css/IntegrationPage.module.css';\nimport {IntegrationConfig} from './types';\n\ninterface Props {\n  integration: IntegrationConfig;\n}\n\nexport const IntegrationPage = ({integration}: Props) => {\n  const {frontmatter, content} = integration;\n\n  return (\n    <div>\n      <Box padding={{vertical: 24}} flex={{direction: 'column', gap: 12}}>\n        <IntegrationTopcard integration={frontmatter} />\n\n        <div className={styles.markdownOutput}>\n          <ReactMarkdown\n            className={styles.integrationPage}\n            components={MDXComponents}\n            remarkPlugins={[remarkDirective, remarkGfm]}\n            remarkRehypeOptions={{allowDangerousHtml: true}}\n            rehypePlugins={[\n              rehypeRaw,\n              [rehypeHighlight, {ignoreMissing: true, languages: [bash, yaml]}],\n            ]}\n          >\n            {content}\n          </ReactMarkdown>\n        </div>\n      </Box>\n    </div>\n  );\n};\n","import {\n  Box,\n  Heading,\n  Icon,\n  NonIdealState,\n  PageHeader,\n  SpinnerWithText,\n} from '@dagster-io/ui-components';\nimport {useEffect, useState} from 'react';\nimport {Link, useParams} from 'react-router-dom';\n\nimport {IntegrationPage} from './IntegrationPage';\nimport {IntegrationConfig} from './types';\nimport {AnchorButton} from '../ui/AnchorButton';\n\nconst INTEGRATIONS_ORIGIN_AND_PATH = 'https://integration-registry.dagster.io/api/integrations';\n\nexport const SingleIntegrationRoot = () => {\n  const {integrationName} = useParams<{integrationName: string}>();\n  const [loading, setLoading] = useState(true);\n  const [integration, setIntegration] = useState<IntegrationConfig | null>(null);\n\n  useEffect(() => {\n    const fetchIntegration = async () => {\n      const url = `${INTEGRATIONS_ORIGIN_AND_PATH}/${integrationName}.json`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setIntegration(data);\n      setLoading(false);\n    };\n    fetchIntegration();\n  }, [integrationName]);\n\n  const content = () => {\n    if (loading) {\n      return (\n        <Box padding={64} flex={{direction: 'column', gap: 12, alignItems: 'center'}}>\n          <SpinnerWithText label=\"Loading integration…\" />\n        </Box>\n      );\n    }\n\n    if (!integration) {\n      return (\n        <Box padding={64} flex={{direction: 'column', gap: 12}}>\n          <NonIdealState\n            icon=\"search\"\n            title=\"Integration not found\"\n            description=\"This integration could not be found.\"\n            action={\n              <AnchorButton to=\"/integrations\" icon={<Icon name=\"arrow_back\" />}>\n                Back to Integrations Marketplace\n              </AnchorButton>\n            }\n          />\n        </Box>\n      );\n    }\n\n    return <IntegrationPage integration={integration} />;\n  };\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <PageHeader\n        title={\n          <Heading>\n            <Box flex={{direction: 'row', gap: 8}}>\n              <Link to=\"/integrations\">Integrations Marketplace</Link>\n              {integration?.frontmatter ? (\n                <>\n                  <span> / </span>\n                  <div>{integration.frontmatter.name}</div>\n                </>\n              ) : null}\n            </Box>\n          </Heading>\n        }\n      />\n      <div style={{flex: 1, overflowY: 'auto'}}>\n        <div\n          style={{\n            width: '80vw',\n            maxWidth: '1100px',\n            minWidth: '900px',\n            margin: '0 auto',\n          }}\n        >\n          {content()}\n        </div>\n      </div>\n    </Box>\n  );\n};\n","import {Redirect, Route, Switch} from 'react-router';\n\nimport {MarketplaceRoot} from './MarketplaceRoot';\nimport {SingleIntegrationRoot} from './SingleIntegrationRoot';\nimport {useFeatureFlags} from '../app/Flags';\n\nconst IntegrationsRoot = () => {\n  const {flagMarketplace} = useFeatureFlags();\n\n  if (!flagMarketplace) {\n    return <Redirect to=\"/deployment\" />;\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/integrations\" component={MarketplaceRoot} exact />\n      <Route path=\"/integrations/:integrationName\" component={SingleIntegrationRoot} />\n    </Switch>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default IntegrationsRoot;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"integrationPage\":\"IntegrationPage_integrationPage__huQYC\",\"markdownOutput\":\"IntegrationPage_markdownOutput__68wqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemLink\":\"IntegrationTopcard_itemLink__pwbEh\",\"externalLink\":\"IntegrationTopcard_externalLink__CJlCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inlineCode\":\"MarkdownSupport_inlineCode__5dyJJ\",\"codeBlock\":\"MarkdownSupport_codeBlock__Tn2_u\",\"copyButton\":\"MarkdownSupport_copyButton__D55zq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemCard\":\"MarketplaceHome_itemCard__0_eN9\",\"description\":\"MarketplaceHome_description__lMjLW\",\"searchInput\":\"MarketplaceHome_searchInput__jNg9M\"};"],"names":["Page","styled","div","withConfig","IntegrationTag","IntegrationTagKeys","Object","values","IntegrationTagLabel","IntegrationTagIcon","BuiltByDagsterLabs","jsx_runtime","jsxs","Box","flex","direction","alignItems","gap","style","fontSize","color","Colors","jsx","Icon","name","size","IntegrationTags","tags","param","Fragment","filter","includes","tag","map","Tag","icon","undefined","IntegrationIcon","logoFilename","justifyContent","border","borderRadius","height","width","padding","IntegrationIconWrapper","role","$size","$img","concat","$color","$rotation","aria-label","IconWrapper","IntegrationTopcard","integration","id","title","pypi","source","Link","to","className","styles","onClick","e","stopPropagation","minHeight","fontWeight","DagsterSupported","a","href","target","rel","Button","MarketplaceHome","integrations","props","history","useHistory","searchQuery","setSearchQuery","useQueryPersistedState","queryKey","defaults","search","filters","setFilters","encode","length","join","decode","qs","split","k","filteredIntegrations","filteredByTag","every","toLowerCase","margin","bottom","Heading","TextInput","value","onChange","placeholder","wrap","f","backgroundColor","vertical","horizontal","overflow","push","description","MarketplaceRoot","setIntegrations","useState","useEffect","fetchIntegrations","res","fetch","data","json","d","maxWidth","minWidth","DOCS_ORIGIN","MDXTabItem","children","MDXComponents","beta","Alert","intent","deprecated","pyobject","section","object","displayText","module","pluralize","decorator","textValue","_package","replace","code","paddingLeft","paddingRight","table","Table","inline","rest","codeRef","useRef","setValue","useLayoutEffect","current","textContent","trim","clsx","ref","CopyIconButton","iconSize","iconColor","tabs","tabId","setTabId","tabitems","Array","isArray","node","type","selected","find","t","background","Tabs","selectedTabId","Tab","tabitem","finalHref","startsWith","IntegrationPage","frontmatter","content","ReactMarkdown","components","remarkPlugins","remarkDirective","remarkGfm","remarkRehypeOptions","allowDangerousHtml","rehypePlugins","rehypeRaw","rehypeHighlight","ignoreMissing","languages","bash","yaml","SingleIntegrationRoot","integrationName","useParams","loading","setLoading","setIntegration","fetchIntegration","url","PageHeader","span","overflowY","SpinnerWithText","label","NonIdealState","action","AnchorButton","integrations_IntegrationsRoot","flagMarketplace","useFeatureFlags","Switch","Route","path","component","exact","Redirect","exports"],"sourceRoot":""}