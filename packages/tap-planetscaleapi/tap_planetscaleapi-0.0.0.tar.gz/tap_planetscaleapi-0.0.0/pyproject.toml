[project]
name = "tap-planetscaleapi"
version = "0.0.0"
description = "Singer tap for PlanetScaleAPI, built with the Meltano Singer SDK."
authors = [{ name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" }]
requires-python = ">=3.9"
readme = "README.md"
license = "Apache-2.0"
keywords = [
    "ELT",
    "PlanetScaleAPI",
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
dependencies = [
    "singer-sdk~=0.46.0",
    "requests~=2.32.0",
    "toolz~=1.0.0",
]

[project.optional-dependencies]
s3 = ["fs-s3fs~=1.1.1"]

[project.urls]
Homepage = "https://github.com/edgarrmondragon/tap-planetscalepi"
Documentation = "https://github.com/edgarrmondragon/tap-planetscalepi#"
"Issue Tracker" = "https://github.com/edgarrmondragon/tap-planetscalepi/issues"
Repository = "https://github.com/edgarrmondragon/tap-planetscalepi"

[project.scripts]
tap-planetscaleapi = "tap_planetscaleapi.tap:TapPlanetScaleAPI.cli"

[dependency-groups]
dev = [
    "mypy~=1.15.0",
    "pytest>=7.4.0",
    "requests-cache>=1.1.1,<1.3.0",
    "singer-sdk[testing]~=0.46.0",
    "types-requests~=2.31.0.6",
]

[tool.mypy]
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "toolz.*",  # https://github.com/pytoolz/toolz/issues/496
]

[tool.ruff]
src = ["tap_planetscaleapi"]

[tool.ruff.lint]
ignore = [
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["tap_planetscaleapi"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
style = "pep440"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "default:Fields in transformed catalog but not in records:UserWarning",
    "ignore:No records returned in stream:UserWarning",
    "ignore:No records were available to test:UserWarning",
    "default:'asyncio.iscoroutinefunction' is deprecated:DeprecationWarning",
    "default:'_UnionGenericAlias' is deprecated and slated for removal in Python 3.17:DeprecationWarning",
]
xfail_strict = true
