Metadata-Version: 2.4
Name: feagi_bytes
Version: 0.1.0
Summary: Binary serialization for FEAGI protocols
Home-page: https://github.com/feagi/feagi_bytes
Author: Neuraville Inc.
Author-email: feagi@neuraville.com
Project-URL: Bug Tracker, https://github.com/feagi/feagi_bytes/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.20.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# FEAGI Bytes

Binary serialization for FEAGI communication protocols using custom byte structures.

## Overview

This package provides optimized serialization and deserialization for FEAGI communication protocols using custom byte structures. It's designed to be extremely performant for high-throughput neural data transmission.

## Features

- Custom binary serialization optimized for neural data
- Versioned protocol support with capability negotiation
- Support for JSON, images, and various neuron data formats
- Compression support for large payloads
- Compatible with both FEAGI server and clients

## Installation

```bash
pip install feagi_bytes
```

## Usage

```python
from feagi_bytes import ByteStructureEncoder, ByteStructureDecoder, ByteStructureTranslator

# Create an encoder
encoder = ByteStructureEncoder()

# Encode some JSON data
json_data = {"message": "hello", "value": 42}
encoded_bytes = encoder.encode_json(json_data)

# Create a decoder
decoder = ByteStructureDecoder()

# Decode the data
decoded_data = decoder.decode_json(encoded_bytes)

# Use the translator for higher-level operations
translator = ByteStructureTranslator()
message = translator.create_message({"command": "start", "parameters": {"speed": 10}})
```

## License

Apache License 2.0 
