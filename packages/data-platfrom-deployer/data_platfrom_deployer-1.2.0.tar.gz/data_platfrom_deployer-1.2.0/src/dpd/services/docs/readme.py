from dpd.models import Config
from directory_tree import DisplayTree


class ReadmeService:
    @staticmethod
    def generate_file(conf: Config):
        minio_src = [s for s in conf.sources if s.type == "s3"][0]
        psql_src = [s for s in conf.sources if s.type == "postgres"]

        text = f"""
# {conf.project.name} - Data Platfrom Deployer

## Description
This project generated by  Data Platfrom Deployer (DPD) is a template for building data pipelines. It includes services for data ingestion, storage, and visualization.

## Services
- ClickHouse: {conf.storage.clickhouse.name}
- S3 (Minio): {minio_src.name}, UI: http://localhost:{minio_src.port or 9001}
- Postgres sources: {", ".join([s.name for s in psql_src])}
- SuperSet: {conf.bi.superset.name}, UI: http://localhost:{conf.bi.superset.port or 8088}
- AKHQ (Kafka UI): http://localhost:8086
- Kafka: number of brokers - {conf.streaming.kafka.num_brokers}, names: {", ".join([f"kafka-{b}" for b in range(conf.streaming.kafka.num_brokers)])}
- Kafka Connect URL: http://localhost:8083

**All environment variables are stored in the `.env` file. You can change the values of the environment variables in the `.env` file.**


## How to run
Enter the command below to start the services:
```bash
docker-compose up -d
```
## How to stop
Enter the command below to stop the services:
```bash
docker-compose down
```

## Directory Structure:
```
{DisplayTree(conf.project.name, stringRep=True, showHidden=True)}```
"""
        with open(f"{conf.project.name}/README.md", "w") as f:
            f.write(text)
        return text
