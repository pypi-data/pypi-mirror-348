[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "arc-memory"
version = "0.7.4"
description = "Arc Memory - Local bi-temporal knowledge graph for code repositories"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "Jarrod Barnes", email = "jbarnes850@gmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
]
dependencies = [
    # Core database and graph dependencies
    "networkx>=3.0,<4.0.0",        # Graph algorithms and data structures
    "apsw>=3.40.0,<4.0.0",         # SQLite database wrapper with advanced features

    # API and data handling
    "requests>=2.28.0,<3.0.0",     # HTTP requests for GitHub API
    "pydantic>=2.0.0,<3.0.0",      # Data validation and settings management
    "gql>=3.4.0,<4.0.0",           # GraphQL client for GitHub API
    "aiohttp>=3.8.0,<4.0.0",       # Async HTTP client for GraphQL

    # CLI and user interface
    "typer>=0.9.0,<0.10.0",        # Command-line interface
    "rich>=13.0.0,<14.0.0",        # Rich text and formatting in terminal
    "tqdm>=4.65.0,<5.0.0",         # Progress bars
    "matplotlib>=3.5.0,<4.0.0",    # Required for CLI plotting and RL visualization

    # Authentication and security
    "pyjwt>=2.6.0,<3.0.0",         # JWT token handling for GitHub auth
    "cryptography>=43.0.0,<44.0.0", # Required for PyJWT's RS256 algorithm
    "keyring>=23.13.1,<24.0.0",    # Secure credential storage

    # Data formats and parsing
    "pyyaml>=6.0,<7.0.0",          # YAML parsing for ADRs
    "markdown-it-py>=2.2.0,<3.0.0", # Markdown parsing for ADRs

    # Compression
    "zstandard>=0.20.0,<0.21.0",   # Database compression

    # Git integration
    "gitpython>=3.1.30,<4.0.0",    # Git repository interaction

    # Environment and configuration
    "python-dotenv>=1.0.0,<2.0.0", # Environment variable loading
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.3.1,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",  # For testing async code
    "mypy>=1.3.0,<2.0.0",
    "black>=23.3.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "pre-commit>=3.3.2,<4.0.0",
    "responses>=0.23.1,<0.24.0",  # For mocking API responses in tests
    "ruff>=0.0.272,<0.1.0",       # Fast Python linter
]

# Testing dependencies (subset of dev dependencies)
test = [
    "pytest>=7.3.1,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",  # For testing async code
    "responses>=0.23.1,<0.24.0",  # For mocking API responses in tests
]

# CLI-only dependencies (for users who only need the command-line interface)
cli = [
    "typer>=0.9.0,<0.10.0",
    "rich>=13.0.0,<14.0.0",
    "tqdm>=4.65.0,<5.0.0",
    "keyring>=23.13.1,<24.0.0",  # For storing GitHub credentials
]

# Documentation dependencies
docs = [
    "mkdocs>=1.4.0,<2.0.0",
    "mkdocs-material>=9.0.0,<10.0.0",
    "mkdocstrings>=0.20.0,<0.21.0",
]

# Telemetry dependencies
telemetry = [
    "posthog>=3.0.1,<4.0.0",  # Analytics and telemetry
]

# Reinforcement Learning dependencies
rl = [
    "numpy>=1.23.0,<2.0.0",          # Numerical computations
    "matplotlib>=3.5.0,<4.0.0",      # Plotting training metrics
]

# Framework adapter dependencies (all adapters)
frameworks = [
    "langchain>=0.0.267,<0.1.0",          # For LangChain adapter (legacy)
    "langchain-core>=0.1.0,<0.2.0",       # Core LangChain functionality
    "langchain-openai>=0.0.1,<0.1.0",     # LangChain OpenAI integration
    "langgraph>=0.0.15,<0.1.0",           # LangGraph integration
    "openai>=1.0.0,<2.0.0",               # OpenAI API client
]

# LangChain adapter dependencies
langchain = [
    "langchain>=0.0.267,<0.1.0",          # For LangChain adapter (legacy)
    "langchain-core>=0.1.0,<0.2.0",       # Core LangChain functionality
    "langchain-openai>=0.0.1,<0.1.0",     # LangChain OpenAI integration
]

# OpenAI adapter dependencies
openai = [
    "openai>=1.0.0,<2.0.0",               # OpenAI API client
]

# LangGraph adapter dependencies
langgraph = [
    "langgraph>=0.0.15,<0.1.0",           # LangGraph integration
    "langchain-core>=0.1.0,<0.2.0",       # Required for LangGraph
    "langchain-openai>=0.0.1,<0.1.0",     # LangChain OpenAI integration
]

[project.urls]
"Homepage" = "https://www.arc.computer"
"Repository" = "https://github.com/Arc-Computer/arc-memory"
"Bug Tracker" = "https://github.com/Arc-Computer/arc-memory/issues"

[project.scripts]
arc = "arc_memory.cli:app"

[project.entry-points."arc_memory.plugins.frameworks"]
langchain = "arc_memory.sdk.adapters.langchain:LangChainAdapter"
openai = "arc_memory.sdk.adapters.openai:OpenAIAdapter"

[tool.hatch.build.targets.wheel]
packages = ["arc_memory"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel.shared-data]
"LICENSE" = "arc_memory-0.7.4.dist-info/licenses/LICENSE"

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
markers = [
    "asyncio: mark a test as an asyncio test",
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
asyncio_default_test_loop_scope = "function"
