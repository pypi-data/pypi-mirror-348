# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: 2. Create Release

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      product_version:
        description: "Product Version"
        value: ${{ jobs.build_distribution_job.outputs.product_version }}
  
jobs:
  build_distribution_job:
    uses: ./.github/workflows/build_distribution.yml
  
  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - build_distribution_job
    env:
        PROJECT_VERSION: ${{needs.build_distribution_job.outputs.product_version}}
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Project Version
      run: | 
        echo "Porduct Version:"
        echo ${{env.PROJECT_VERSION}}
        echo ${{needs.build_distribution_job.outputs.product_version}}
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: | 
        gh release create ${{env.PROJECT_VERSION}} --repo '${{ github.repository }}' --notes ""
    - name: Upload artifact signatures to GitHub Release
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{env.PROJECT_VERSION}}' dist/**
        --repo '${{ github.repository }}'

  
