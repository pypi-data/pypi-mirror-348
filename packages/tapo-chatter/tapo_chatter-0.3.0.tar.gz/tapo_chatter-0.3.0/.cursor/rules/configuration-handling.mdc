---
description: How the application loads and validates configuration
globs: 
alwaysApply: false
---
---
rule-type: file-hint
display-name: Configuration Handling
priority: 900
enable-rule: true
description: How the application loads and validates configuration
file-pattern: src/tapo_chatter/config.py
---

# Configuration Handling

The [config.py](mdc:src/tapo_chatter/config.py) module manages application configuration through environment variables.

## TapoConfig Class

The `TapoConfig` class is responsible for:

1. Loading and validating environment variables:
   - `TAPO_USERNAME`: Email address for Tapo account
   - `TAPO_PASSWORD`: Password for Tapo account
   - `TAPO_IP_ADDRESS`: IP address of the Tapo H100 hub

2. Providing validation methods:
   - `is_valid_ip`: Ensures IP addresses are properly formatted
   - `is_valid_email`: Ensures usernames are valid email addresses

3. Factory method:
   - `from_env`: Creates a validated configuration object from environment variables
   - Provides helpful error messages when validation fails

## Environment Variable Loading

The module uses `python-dotenv` to load environment variables from a `.env` file.

## Usage Example

```python
from tapo_chatter.config import TapoConfig

# Load and validate configuration
config = TapoConfig.from_env()

# Access configuration values
username = config.username
password = config.password
ip_address = config.ip_address
```
