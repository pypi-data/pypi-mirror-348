[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tapo_chatter"
version = "0.3.0"
description = "A comprehensive Python application for managing, monitoring, and discovering TP-Link Tapo smart home devices."
readme = "README.md"
requires-python = ">=3.13, <3.14"
license = { text = "Apache-2.0" } # Example license
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    "tapo>=0.2.0",  # Core Tapo library for device interaction
    "python-dotenv>=1.0.0",  # For loading environment variables
    "rich>=13.7.0",  # For beautiful console output
    "platformdirs>=4.0.0", # For platform-specific user directories
    "netifaces>=0.11.0",  # For network interface discovery
]

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pytest-cov",
    # Add other dev tools like type checkers (mypy) if desired
]

[project.urls]
Homepage = "https://github.com/yourusername/tapo_chatter" # Optional: Update URL
Repository = "https://github.com/yourusername/tapo_chatter" # Optional: Update URL

[project.scripts]
# Main unified command with subcommands
tapo-chatter = "tapo_chatter.cli:main_cli"

# Keep original commands for backward compatibility
tapo-monitor = "tapo_chatter.main:main_cli"
tapo-discover = "tapo_chatter.discover:discover_cli"

# Use hatch to manage version based on __init__.py
[tool.hatch.version]
path = "src/tapo_chatter/__init__.py"

# Example Ruff configuration (adjust as needed)
[tool.ruff]
src = ["src", "tests"]
line-length = 88
indent-width = 4
target-version = "py313" # e.g., py311

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B", "A", "RUF"] # Sensible defaults
ignore = ["E501"] # Handled by formatter
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["tapo_chatter"]
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"] # Allow 'assert' in tests

# Example Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=tapo_chatter --cov-report=term-missing"
testpaths = ["tests"]
python_files = "test_*.py"
