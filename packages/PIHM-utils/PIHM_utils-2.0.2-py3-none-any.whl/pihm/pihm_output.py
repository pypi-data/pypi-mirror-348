OUTPUT = {
    # PIHM output
    'unsat': lambda extension: 'Unsaturated zone storage (m)',
    'surf': lambda extension: 'Surface water (m)',
    'gw': lambda extension: 'Groundwater storage (m)',
    'river.stage': lambda extension: 'River stage (m)',
    'snow': lambda extension: 'Water equivalent snow depth (m)',
    'is': lambda extension: 'Interception storage (m)',
    'infil': lambda extension: 'Infiltration (m s$^{-1}$)',
    'recharge': lambda extension: 'Recharge (m s$^{-1}$)',
    'ec': lambda extension: 'Canopy evaporation (m s$^{-1}$)',
    'ett': lambda extension: 'Transpiration (m s$^{-1}$)',
    'edir': lambda extension: 'Soil evaporation (m s$^{-1}$)',
    'river.flx': lambda extension: f'River flux {extension[9:]} (m$^3$ s$^{-1}$)',
    'subflx': lambda extension: f'Subsurface flux {extension[6:]} (m$^3$ s$^{-1}$)',
    'surfflx': lambda extension: f'Surface flux {extension[7:]} (m$^3$ s$^{-1}$)',
    # Flux module output
    't1': lambda extension: 'Land surface temperature (K)',
    'stc': lambda extension: f'Soil temperature (Layer {extension[3:] + 1}) (K)',
    'smc': lambda extension: f'Soil moisture content (Layer {extension[3:] + 1}) (m$^3$ m$^{-3}$)',
    'swc': lambda extension: f'Soil water content (Layer {extension[3:] + 1}) (m$^3$ m$^{-3}$)',
    'snowh': lambda extension: 'Snow depth (m)',
    'iceh': lambda extension: 'Ice depth (m)',
    'albedo': lambda extension: 'Albedo (-)',
    'le': lambda extension: 'Latent heat flux (W m$^{-2}$)',
    'sh': lambda extension: 'Sensible heat flux (W m$^{-2}$)',
    'g': lambda extension: 'Ground heat flux (W m$^{-2}$)',
    'etp': lambda extension: 'Potential evaporation (W m$^{-2}$)',
    'esnow': lambda extension: 'Snow sublimation (W m$^{-2}$)',
    'rootw': lambda extension: 'Root zone available soil moisture (-)',
    'soilm': lambda extension: 'Total soil moisture (m)',
    'solar': lambda extension: 'Solar radiation (W m$^{-2}$)',
    'ch': lambda extension: 'Surface exchange coefficient (m s$^{-1}$)',
    # BGC module output
    'lai': lambda extension: 'LAI (m$^2$ m$^{-2}$)',
    'npp': lambda extension: 'NPP (kgC m$^{-2}$ day$^{-1}$)',
    'nep': lambda extension: 'NEP (kgC m$^{-2}$ day$^{-1}$)',
    'nee': lambda extension: 'NEE (kgC m$^{-2}$ day$^{-1}$)',
    'gpp': lambda extension: 'GPP (kgC m$^{-2}$ day$^{-1}$)',
    'mr': lambda extension: 'Maintenance respiration (kgC m$^{-2}$ day$^{-1}$)',
    'gr': lambda extension: 'Growth respiration (kgC m$^{-2}$ day$^{-1}$)',
    'hr': lambda extension: 'Heterotrophic respiration (kgC m$^{-2}$ day$^{-1}$)',
    'fire': lambda extension: 'Fire losses (kgC m$^{-2}$ day$^{-1}$)',
    'litfallc': lambda extension: 'Litter fall (kgC m$^{-2}$ day$^{-1}$)',
    'vegc': lambda extension: 'Vegetation carbon (kgC m$^{-2}$)',
    'agc': lambda extension: 'Aboveground carbon (kgC m$^{-2}$)',
    'litrc': lambda extension: 'Litter carbon (kgC m$^{-2}$)',
    'soilc': lambda extension: 'Soil carbon (kgC m$^{-2}$)',
    'totalc': lambda extension: 'Total carbon (kgC m$^{-2}$)',
    'sminn': lambda extension: 'Soil mineral nitrogen (kgN m$^{-2}$)',
    # Cycles output
    'eres': lambda extension: 'Residue evaporation (m s$^{-1}$)',
    'grain_yield': lambda extension: f'{extension[12:]} grain yield (Mg ha$^{-1}$)',
    'forage_yield': lambda extension: f'{extension[13:]} forage yield (Mg ha$^{-1}$)',
    'shoot': lambda extension: f'{extension[6:]} shoot biomass (Mg ha$^{-1}$)',
    'root': lambda extension: f'{extension[5:]} root biomass (Mg ha$^{-1}$)',
    'radintcp': lambda extension: f'{extension[9:]} radiation interception (-)',
    'wstress': lambda extension: f'{extension[8:]} water stress (-)',
    'nstress': lambda extension: f'{extension[8:]} N stress (-)',
    'transp': lambda extension: f'{extension[7:]} transpiration (mm day$^{-1}$)',
    'pottransp': lambda extension: f'{extension[10:]} potential transpiration (mm day$^{-1}$)',
    'no3': lambda extension: 'Soil profile NO$_3^-$ (Mg ha$^{-1}$)',
    'nh4': lambda extension: 'Soil profile NH$_4^+$ (Mg ha$^{-1}$)',
    'river.no3': lambda extension: 'River NO$_3^-$ (Mg ha$^{-1}$)',
    'river.nh4': lambda extension: 'River NH$_4^+$ (Mg ha$^{-1}$)',
    'denitrif': lambda extension: 'Denitrification (Mg ha$^{-1}$ day$^{-1}$)',
    'nitrif': lambda extension: 'Nitrification (Mg ha$^{-1}$ day$^{-1}$)',
    'immobil': lambda extension: 'N immobilization (Mg ha$^{-1}$ day$^{-1}$)',
    'mineral': lambda extension: 'N mineralization (Mg ha$^{-1}$ day$^{-1}$)',
    'volatil': lambda extension: 'N volatilization (Mg ha$^{-1}$ day$^{-1}$)',
    'no3leaching': lambda extension: 'NO$_3^-$ leaching (Mg ha$^{-1}$ day$^{-1}$)',
    'nh4leaching': lambda extension: 'NH$_4^+$ leaching (Mg ha$^{-1}$ day$^{-1}$)',
    'soc': lambda extension: 'Soil organic carbon (Mg ha$^{-1}$)',
    'n2o_nitrif': lambda extension: 'N$_2$O emission from nitrification (Mg ha$^{-1}$ day$^{-1}$)',
    'n2o_denitrif': lambda extension: 'N$_2$O emission from denitrification (Mg ha$^{-1}$ day$^{-1}$)',
    'n_harvest': lambda extension: 'N in harvest (Mg ha$^{-1}$ day$^{-1}$)',
    'n_fert': lambda extension: 'N from fertilization (Mg ha$^{-1}$ day$^{-1}$)',
    'n_auto': lambda extension: 'N auto added (Mg ha$^{-1}$ day$^{-1}$)',
    'n_fix': lambda extension: 'N fixation (Mg ha$^{-1}$ day$^{-1}$)',
    # Deep groundwater module output
    'deep.unsat': lambda extension: 'Deep zone unsaturated storage (m)',
    'deep.gw': lambda extension: 'Deep groundwater storage (m)',
    'deep.infil': lambda extension: 'Deep zone infiltration (m s$^{-1}$)',
    'deep.recharge': lambda extension: 'Deep zone recharge (m s$^{-1}$)',
    'deep.flow': lambda extension: f'Deep layer lateral flow {extension[9:]} (m$^3$ s$^{-1}$)',
    # RT module output
    'conc': lambda extension: f'{extension[5:]} concentration (mol L$^{-1}$)',
    'deep.conc': lambda extension: f'Deep zone {extension[10:]} concentration (mol L$^{-1}$)',
    'river.conc': lambda extension: f'Stream {extension[11:]} concentration (mol L$^{-1}$)',
    'river.chflx': lambda extension: f'River {extension[12:]} flux (kmol s$^{-1}$)',
}
