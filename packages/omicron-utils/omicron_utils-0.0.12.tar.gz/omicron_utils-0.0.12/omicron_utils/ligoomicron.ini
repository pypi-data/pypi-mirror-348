[my.description]
comment = "This is the configuration file for the LIGO job management programs"
          "Each program may have 2 sections: <program> and <condor-program> containing"
          " options for the program and arguments for the program's condor sub file"
comment2 = "The comment<n> entries are so that we can write out current config  saving comments> "
           "without special handling"


[gap_handler]
comment = "gap handler program finds segments that should have [possibly empty] trigger files then"
          "creates one or mor DAGs to fill them"
njobs = 8
min_gap = 128
max_gap = 14400

[gap_handler_condor]
output_dir = ${home}/omicron/gaps

[container]
comment = "container section holds the Condor submit entries for current omicron Conda environment"

universe = container
container_image = osdf:///igwn/cit/staging/joseph.areeda/omicron-v4.sif

[accounting]
comment = "LIGO accounting tags"
accounting_group = ligo.prod.o4.detchar.transient.omicron
accounting_group_user = joseph.areeda

[condor]
comment = "Base condor submit entries shared by all jobs"
universe = vanilla

comment2 = "condor will create and manage scitokens"
use_oauth_services = scitokens
environment = "BEARER_TOKEN_FILE=$$(CondorScratchDir)/.condor_creds/scitokens.use"

periodic_remove = (JobStatus == 4 && CurrentTime-EnteredCurrentStatus > 7200) || (RequestMemory > 7000 && JobStatus == 1)
getenv = DEFAULT_SEGMENT_SERVER ECP_IDP GWDATAFIND_SERVER HDF5_USE_FILE_LOCKING HOME KRB5CCNAME NDSSERVER
         KRB5_KTNAME CONDA_PREFIX IFO
periodic_release = (JobStatus == 5) && (CurrentTime-EnteredCurrentStatus > 900) && ((HoldReasonCode =?= 26)
                    || (HoldReasonCode =?= 7))
request_disk = 500M
notification = never
max_concurrent = 64
condor_retry = 2

[shared_accounting]
comment = "we have to tweak user if in a shared account"
accounting_group_user_if_shared = joseph.areeda
shared_accounts = detchar, detchar.dev

[find_fill_condor]
comment = "Stage one of gap filling DAG"
universe = vanilla
my.initial_memory = 2048

[certificates]
comment = "Location of auth certificates in the detchar accounts
kerberos = ${home}/active_certificates/krbcc_robot

[conda]
environment = ligo-omicron-3.10
executable = /cvmfs/software.igwn.org/conda/condabin/conda

[omicron]
comment = " options for the omicron jobs in a DAG"
my_initial_memory = 4096
max_memory = 12288
allowed_job_duration = 10800
comment2 = "we're done if we're idle and need more than max memory or held (46) because we passed  max job duration"
periodic_remove = (JobStatus == 1 && MemoryUsage >= 10000 || (HoldReasonCode =?= 46 ))
request_memory = ifthenelse(isUndefined(MemoryUsage), my_initial_memory, int(3*MemoryUsage))
periodic_release = (HoldReasonCode =?= 26 || HoldReasonCode =?= 34)  && (JobStatus == 5) && (time() - EnteredCurrentStatus > 10)

[post_process]
initial_memory = 2048

[clean]
initial_memory = 2048

[archive]
initial_memory = 2048

# options for the omicron process itself vs the condor job to run it
[process]
# how old to switch from guardian channel to dqsegdb
max_guardian = 600
# how far back for an online job
max_lookback = 43200
max_chunks_per_job = 4
# divide each group into sets of this many channels
max_channels_per_job = 10
condor_request_disk = 20G