# Warning: Dont edit here, This file was generated automatically, using a developer tool.
NoneType = type(None)
subparserkwg_lst = [{'cmdname': 'downloadutil',
  'clsname': 'DownloadUtil',
  'description': 'Download and unpack LD reference panels and other data.\n'
                 'The files that can be downloaded and unpacked with this command includes the standard reference files for PRS-CS and PRS-CSx.\n'
                 'Additional information can be found at https://github.com/getian107/PRScsx\n',
  'help': 'Download and unpack LD reference panels and other data.',
  'epilog': None,
  'modulename': 'prstools.utils',
  'groups': {'general': {'grpheader': 'Options',
                         'pkwargs': {'basics': {'args': ['-h', '--help'], 'kwargs': {'action': 'help', 'help': 'Show this help message and exit.'}},
                                     'destdir': {'args': ['--destdir'],
                                                 'kwargs': {'help': 'Directory in which all the data will be downloaded. Option required if you want the download to start.',
                                                            'type': str,
                                                            'default': 'SUPPRESS'}},
                                     'pattern': {'args': ['--pattern'],
                                                 'kwargs': {'help': 'A string pattern that retrieves every file that it matches. Matches everything by default. Without --destdir option (required to '
                                                                    'start downloading) one can see which files get matched.',
                                                            'type': str,
                                                            'default': 'ALL'}},
                                     'list': {'args': ['--list'], 'kwargs': {'help': 'Show which files can optionally be downloaded and exit.', 'type': bool, 'default': False}},
                                     'mkdir': {'args': ['--mkdir'], 'kwargs': {'help': None, 'type': bool, 'default': False}},
                                     'command': {'args': ['--command'], 'kwargs': {'help': None, 'type': NoneType, 'default': None}},
                                     'func': {'args': ['--func'], 'kwargs': {'help': None, 'type': NoneType, 'default': None}},
                                     'keeptar': {'args': ['--keeptar'],
                                                 'kwargs': {'help': 'Keep the tar.gz files in the destdir. If this option is not given they will be deleted automatically to save space.',
                                                            'type': bool,
                                                            'default': False}}}}},
  'subtype': 'PRSTCLI'},
 {'cmdname': 'combine',
  'clsname': 'Combine',
  'description': 'Yap yap yap new stuff\n',
  'help': 'Yap yap yap new stuff',
  'epilog': None,
  'modulename': 'prstools.utils',
  'groups': {'general': {'grpheader': 'Options',
                         'pkwargs': {'basics': {'args': ['-h', '--help'], 'kwargs': {'action': 'help', 'help': 'Show this help message and exit.'}},
                                     'input': {'args': ['--input'],
                                               'kwargs': {'help': 'Input files to be read and combined. Inputs assumed to be delimited text files,, for now.',
                                                          'type': str,
                                                          'default': 'SUPPRESS',
                                                          'nargs': '+',
                                                          'required': True}},
                                     'out': {'args': ['--out'], 'kwargs': {'help': 'Output file name.', 'type': str, 'default': 'SUPPRESS', 'required': True}},
                                     'reqlen': {'args': ['--reqlen'],
                                                'kwargs': {'help': 'require the number of input files to be a specific number, else procedures stops. (e.g. 22 so it combine 22 chroms)',
                                                           'type': int,
                                                           'default': 'SUPPRESS'}},
                                     'sep': {'args': ['--sep'], 'kwargs': {'help': 'Seperator for the inputs files, default is \\t (tab).', 'type': str, 'default': '\t'}},
                                     'antiglobs': {'args': ['--antiglobs'],
                                                   'kwargs': {'help': "Globs/patterns that should be removed from the input files. e.g. ['*.log'] removes files ending with .log",
                                                              'type': list,
                                                              'default': ['*.log', '*.tmp'],
                                                              'nargs': '+'}},
                                     'intype': {'args': ['--intype'],
                                                'kwargs': {'help': "Type of input file. The 'auto' default option detects this automatically based on extensions. If extension is not recognized it "
                                                                   "assumes 'headed-txt'. Other options are: 'headless-txt', 'legacyweights.tsv', 'prstweights.tsv'",
                                                           'type': str,
                                                           'default': 'auto'}},
                                     'assertunique': {'args': ['--assertunique'],
                                                      'kwargs': {'help': 'Check if the row is unique for these columns. Ignored if columns are not present. Empty list (=[]) is you want this check to '
                                                                         'not happen.',
                                                                 'type': str,
                                                                 'default': ['SNP,A1,A2'],
                                                                 'nargs': '+'}},
                                     'sortcols': {'args': ['--sortcols'],
                                                  'kwargs': {'help': 'The columns that should be used for sorting.', 'type': str, 'default': 'SUPPRESS', 'nargs': '+'}},
                                     'selectcols': {'args': ['--selectcols'],
                                                    'kwargs': {'help': 'In case not specified the columns of the input files are used.', 'type': str, 'default': 'SUPPRESS', 'nargs': '+'}},
                                     'noheader': {'args': ['--noheader'],
                                                  'kwargs': {'help': 'Dont use a header for the output file. For plink and other tools this is sometimes needed.',
                                                             'type': bool,
                                                             'default': None}},
                                     'outtype': {'args': ['--outtype'],
                                                 'kwargs': {'help': 'Specify the filetype to save. For now the option is tab separated file (tsv).', 'type': str, 'default': 'tsv'}},
                                     'pyarrow': {'args': ['--pyarrow'], 'kwargs': {'help': None, 'type': bool, 'default': True}},
                                     'verbose': {'args': ['--verbose'], 'kwargs': {'help': None, 'type': bool, 'default': True}}}}},
  'subtype': 'PRSTCLI'},
 {'cmdname': 'xprs',
  'clsname': 'XPRS',
  'description': 'XPRS: A very fast `eXPReSs` infitessimal effect-size prediction method that can estimate heritabilty on the fly.',
  'help': 'XPRS: A very fast `eXPReSs` infitessimal effect-size prediction method that can estimate heritabilty on the fly.',
  'epilog': 'Examples --> can be directly copy-pasted (:\n'
            " prst downloadutil --pattern example --destdir ./; cd example                                                        \x1b[32m# Makes 'example' dir in current path.\x1b[0m\n"
            ' prstools xprs --ref_dir ldref_1kg_pop --bim_prefix target --sst_file sumstats.tsv  --n_gwas 2565 --out_dir ./result-xprs \x1b[32m# Run the model with example data.\x1b[0m\n'
            ' prst xprs -r ldref_1kg_pop -t target -s sumstats.tsv -n 2565  -o ./result-xprs                        \x1b[32m# A shorter version of previous command.\x1b[0m\n'
            ' plink --bfile target --out prspred --keep-allele-order --score ./result-xprs_* 2 4 6                                         \x1b[32m# Make predictions from weights (plink must be '
            'installed).\x1b[0m\n',
  'module': 'prstools.models._base',
  'pkwargs': {'h2': {'args': ['--h2'], 'kwargs': {'help': 'Specify heritabilty in case desired, otherwise it is estimated by the model.', 'type': float, 'default': None}},
              'n_iter': {'args': ['--n_iter'], 'kwargs': {'help': 'Maximum number of iterations. Should be greater than or equal to 1.', 'type': int, 'default': 600}},
              'tol': {'args': ['--tol'], 'kwargs': {'help': 'Stop the algorithm if the model weights have converged.', 'type': float, 'default': 1e-06}},
              'alpha_1': {'args': ['--alpha_1'], 'kwargs': {'help': None, 'type': float, 'default': 1e-06}},
              'alpha_2': {'args': ['--alpha_2'], 'kwargs': {'help': None, 'type': float, 'default': 1e-06}},
              'lambda_1': {'args': ['--lambda_1'], 'kwargs': {'help': None, 'type': float, 'default': 1e-06}},
              'lambda_2': {'args': ['--lambda_2'], 'kwargs': {'help': None, 'type': float, 'default': 1e-06}},
              'h2start': {'args': ['--h2start'], 'kwargs': {'help': None, 'type': float, 'default': 0.02}},
              'frac': {'args': ['--frac'], 'kwargs': {'help': None, 'type': float, 'default': 0.98}},
              'algo': {'args': ['--algo'],
                       'kwargs': {'help': "The algorithm for heritability estimation in case no fixed h2 parameter is specified. Options are 'Mackay' or 'EM'. [secret string]",
                                  'type': str,
                                  'default': 'em'}},
              'varyconstraint': {'args': ['--varyconstraint'], 'kwargs': {'help': 'Add for var(y) constraining to 1, which it should be.', 'type': bool, 'default': True}},
              'groupby': {'args': ['--groupby'], 'kwargs': {'help': 'groupby is here', 'type': str, 'default': 'chrom'}},
              'local_rm': {'args': ['--local_rm'], 'kwargs': {'help': None, 'type': bool, 'default': False}},
              'pop': {'args': ['--pop'], 'kwargs': {'help': None, 'type': str, 'default': 'pop'}},
              'compute_score': {'args': ['--compute_score'], 'kwargs': {'help': None, 'type': bool, 'default': False}},
              'clear_linkdata': {'args': ['--clear_linkdata'], 'kwargs': {'help': None, 'type': bool, 'default': True}},
              'pbar': {'args': ['--pbar'], 'kwargs': {'help': None, 'type': bool, 'default': True}},
              'verbose': {'args': ['--verbose'], 'kwargs': {'help': None, 'type': bool, 'default': False}}},
  'subtype': 'BasePred'},
 {'cmdname': 'prscs2',
  'clsname': 'PRSCS2',
  'description': 'PRS-CS v2: A polygenic prediction method that infers posterior SNP effect sizes under continuous shrinkage (CS) priors.',
  'help': 'PRS-CS v2: A polygenic prediction method that infers posterior SNP effect sizes under continuous shrinkage (CS) priors.',
  'epilog': 'Examples --> can be directly copy-pasted (:\n'
            " prst downloadutil --pattern example --destdir ./; cd example                                                          \x1b[32m# Makes 'example' dir in current path.\x1b[0m\n"
            ' prstools prscs2 --ref_dir ldref_1kg_pop --bim_prefix target --sst_file sumstats.tsv  --n_gwas 2565 --out_dir ./result-prscs2 \x1b[32m# Run the model with example data.\x1b[0m\n'
            ' prst prscs2 -r ldref_1kg_pop -t target -s sumstats.tsv -n 2565  -o ./result-prscs2                        \x1b[32m# A shorter version of previous command.\x1b[0m\n'
            ' plink --bfile target --out prspred --keep-allele-order --score ./result-prscs2_* 2 4 6                                         \x1b[32m# Make predictions from weights (plink must be '
            'installed).\x1b[0m\n',
  'module': 'prstools.models._base',
  'pkwargs': {'n_iter': {'args': ['--n_iter'], 'kwargs': {'help': 'Total number of MCMC iterations, using 1 chain.', 'type': int, 'default': 1000}},
              'n_burnin': {'args': ['--n_burnin'],
                           'kwargs': {'help': 'Number of burn-in iterations if larger than 1 or fraction of n_iter if smaller then 1.', 'type': float, 'default': 0.5}},
              'n_slice': {'args': ['--n_slice'], 'kwargs': {'help': 'Thinning of the Markov chain.', 'type': int, 'default': 1}},
              'shuffle': {'args': ['--shuffle'], 'kwargs': {'help': None, 'type': bool, 'default': False}},
              'seed': {'args': ['--seed'], 'kwargs': {'help': 'Random seed for reproducibility.', 'type': int, 'default': -1}},
              'a': {'args': ['--a'], 'kwargs': {'help': 'Parameter a in the gamma-gamma prior.', 'type': float, 'default': 1.0}},
              'b': {'args': ['--b'], 'kwargs': {'help': 'Parameter b in the gamma-gamma prior.', 'type': float, 'default': 0.5}},
              'phi': {'args': ['--phi'],
                      'kwargs': {'help': 'Global shrinkage parameter phi. If phi is not specified, it will be learnt from the data using a Bayesian approach',
                                 'type': float,
                                 'default': -1.0}},
              'clip': {'args': ['--clip'], 'kwargs': {'help': 'Clip parameter. The default works best in pretty much all cases.', 'type': float, 'default': 1.0}},
              'sampler': {'args': ['--sampler'], 'kwargs': {'help': 'Sampler algorithm. Rue sampling is the original sampler, which gives good results.', 'type': str, 'default': 'Rue'}},
              'groupby': {'args': ['--groupby'], 'kwargs': {'help': None, 'type': str, 'default': 'chrom'}},
              'local_rm': {'args': ['--local_rm'], 'kwargs': {'help': None, 'type': bool, 'default': False}},
              'compute_score': {'args': ['--compute_score'], 'kwargs': {'help': None, 'type': bool, 'default': False}},
              'clear_linkdata': {'args': ['--clear_linkdata'], 'kwargs': {'help': None, 'type': bool, 'default': True}},
              'pop': {'args': ['--pop'], 'kwargs': {'help': None, 'type': str, 'default': 'pop'}},
              'pbar': {'args': ['--pbar'], 'kwargs': {'help': None, 'type': bool, 'default': True}},
              'verbose': {'args': ['--verbose'], 'kwargs': {'help': None, 'type': bool, 'default': False}}},
  'subtype': 'BasePred'}]