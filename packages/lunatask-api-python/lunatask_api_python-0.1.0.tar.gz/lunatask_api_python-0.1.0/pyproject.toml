# Schema: https://json.schemastore.org/pyproject.json
[project]
name = "lunatask-api-python"
version = "0.1.0"
description = "A Python API for Lunatask"
readme = "README.md"
authors = [
  {name = "Chris Herborth", email = "chrish@pobox.com"},
]
maintainers = [
  {name = "Chris Herborth", email = "chrish@pobox.com"},
]
license = "CC-BY-NC-ND-4.0"
license-files = [ "LICENSE" ]
keywords = [
  "api",
  "import",
  "lunatask",
  "todoist",
]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Other/Nonlisted Topic",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

requires-python = ">=3.11"
dependencies = [
    "dataclass-wizard[toml]>=0.35.0,<1",
    "requests>=2.32.3,<3",
    "todoist-api-python>=2.1.7,<3",
]

[dependency-groups]
# TODO: Add pytest-codecov when running in CI? Or handle that in the CI?
dev = [
  "pytest>=8.0.0,<9",
  "pytest-cov>=6.1.0,<7",
  "ruff>=0.11.0,<0.12",
]

# docs = [
#   "mkdocs>=1.6.1,<2.0.0",
#   "mkdocstrings[python]>=0.29.1,<1.0.0",
#   "mkdocs-material>=9.6.11,<10.0.0",
# ]

[project.urls]
documentation = "https://codeberg.org/Taffer/todoist2lunatask/src/branch/main/README.md"
homepage = "https://codeberg.org/Taffer/todoist2lunatask/"
issues = "https://codeberg.org/Taffer/todoist2lunatask/issues"
source = "https://codeberg.org/Taffer/todoist2lunatask/src/branch/main/src/lunatask"

[project.scripts]
todoist2lunatask = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = [
  "**/__pycache__",
  "**/.gitignore",  # This seems to be ignored. Mildly ironic.
  "**/*.code-workspace",
  "**/*.config",
  "**/*.egg-info",
  "/.coverage*",
  "/.git",
  "/.pytest_cache",
  "/.python-version",
  "/.ruff_cache",
  "/.venv",
  "/dist",
  "/uv.lock",
]

[tool.hatch.build.targets.wheel]
packages = [
  "src/lunatask",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.pytest.ini_options]
addopts = [
  "--cov=.",
  "--cov-report",
  "term-missing"
]

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
select = [
  "A",     # flake8-builtins
  "ANN",   # flake8-annotations
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "BLE",   # flake8-blind-except
  "C4",    # flake8-comprehensions
  "D",     # pydocstyle,
  "DTZ",   # flake8-datetimez,
  "E",     # pycodestyle errors
  "F",     # pyflakes
  "FA",    # flake8-future-annotations
  "FIX",   # flake8-fixme
  "FURB",  # refurb
  "G",     # flake8-logging-format
  "I",     # isort
  "ICN",   # flake8-import-conventions
  "INP",   # flake8-no-pep420
  "ISC",   # flake8-implicit-str-concat
  "LOG",   # flake8-logging
  "N",     # pep8-naming
  "PERF",  # perflint
  "PGH",   # pygrep-hooks
  "PIE",   # flake8-pie
  "PL",    # pylint
  "PT",    # flake8-pytest-style
  "PTH",   # flake8-user-pathlib
  "PYI",   # flake8-pyi
  "RET",   # flake8-logging-return
  "RUF",   # ruff
  "S",     # flake8-bandit
  "SIM",   # flake8-simplify
  "T20",   # flake8-print
  "TC",    # flake8-type-checking
  "TID",   # flake8-tidy-imports
  "TRY",   # tryceratops
  "UP",    # pyupgrade
  "W",     # pycodestyle warnings
]

ignore = [
    "T201", # print is fine, this is a command-line tool
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.format]
docstring-code-format = true
