[project]
name = "finecode"
version = "0.2.0"
# dynamic version from setuptools-scm is not compatible with poetry, because it requires explicit version in pyproject.toml. Will be used after migration from poetry.
# dynamic = ["version"]
description = ""
authors = [{ name = "Vladyslav Hnatiuk", email = "aders1234@gmail.com" }]
readme = "README.md"
requires-python = ">=3.11, < 3.14"
dependencies = [
    "loguru==0.7.*",
    "tomlkit==0.11.*",
    "watchdog==4.0.*",
    "click==8.1.*",
    "pydantic==2.10.*",
    "platformdirs==4.3.*",
    "pygls==2.0.0-a2",
    "finecode_extension_api==0.1.0",
    "ordered-set==4.1.*",
]

[dependency-groups]
dev_workspace = ["build==1.2.2.post1"]

[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.poetry]
packages = [{ include = "finecode", from = "src" }]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
finecode_dev_common_preset = { path = "./finecode_dev_common_preset", develop = true }
fine_python_import_linter = { git = "https://github.com/finecode-dev/finecode.git", subdirectory = "extensions/fine_python_import_linter" }
anyio = "^4.4.0"
debugpy = "^1.8.9"


[tool.finecode]
presets = [{ source = "finecode_dev_common_preset" }]

[tool.importlinter]
root_package = "finecode"
include_external_packages = true

[[tool.importlinter.contracts]]
id = "wm-layered"
name = "WM layered architecture"
type = "layers"
layers = [
    "finecode.workspace_manager.lsp_server.lsp_server",
    "finecode.workspace_manager.lsp_server.services",
    "finecode.workspace_manager.domain",
]

[[tool.importlinter.contracts]]
id = "er-layered"
name = "ER layered architecture"
type = "layers"
layers = [
    "finecode.extension_runner.lsp_server",
    "finecode.extension_runner.services",
    "finecode.extension_runner.domain",
]

[[tool.importlinter.contracts]]
# such check doesn't control whether there are no raw requests in lsp_server, currently this should
# be checked manually. We should check access to `runner.client.protocol` to avoid this?
id = "wm-use-runner-client"
name = "WM uses LSP requests only in runner_client and lsp_server, no raw requests in app"
type = "forbidden"
source_modules = ["finecode.workspace_manager"]
forbidden_modules = ["lsprotocol"]
ignore_imports = [
    "finecode.workspace_manager.runner.runner_client -> lsprotocol",
    "finecode.workspace_manager.lsp_server.lsp_server -> lsprotocol",
]


[tool.setuptools_scm]
version_file = "src/finecode/_version.py"
