[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "moodle-tools"
version = "1.1.0"
description = "A collection of tools to simplify working with Moodle quizzes."
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
authors = [
    { name = "Lennart Behme", email = "lennart.behme@tu-berlin.de" },
    { name = "Gereon Dusella", email = "gereon.dusella@tu-berlin.de" },
    { name = "Ricardo Ernesto Martinez Ramirez", email = "r.martinez.ramirez@tu-berlin.de" },
    { name = "Viktor Rosenfeld", email = "viktor.rosenfeld@tu-berlin.de" },
]
maintainers = [{ name = "The ISDA Team", email = "isda@dima.tu-berlin.de" }]
keywords = ["moodle", "teaching"]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
dependencies = [
    "asteval~=1.0",
    "Jinja2~=3.1",
    "loguru~=0.7.0",
    "markdown~=3.4",
    "pyyaml~=6.0",
]

[project.optional-dependencies]
isda = ["duckdb~=1.2", "isda-streaming~=1.2", "sqlparse~=0.5.0"]

[dependency-groups]
docs = ["pdoc~=15.0"]
test = ["moodle-tools[isda]", "pytest~=8.3", "pytest-cov~=6.0"]
dev = [
    {include-group = "docs"},
    {include-group = "test"},
    "moodle-tools[isda]",
    "mypy~=1.13",
    "pre-commit~=4.0",
    "types-markdown~=3.4",
    "types-pyyaml~=6.0",
]

[project.scripts]
analyze-results = "moodle_tools.analyze_results:main"
make-questions = "moodle_tools.make_questions:main"

[project.urls]
Homepage = "https://git.tu-berlin.de/dima/moodle-tools"
Repository = "https://git.tu-berlin.de/dima/moodle-tools"
Documentation = "https://dima.gitlab-pages.tu-berlin.de/moodle-tools"
"Bug Tracker" = "https://git.tu-berlin.de/dima/moodle-tools/-/issues"

[tool.hatch.build.targets.sdist]
exclude = [".gitlab/**", ".gitlab-ci.yml", ".pre-commit-config.yaml"]

[tool.ruff]
line-length = 99
target-version = "py311"

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "ANN",  # flake8-annotations
    "B",    # flake8-bugbear
    "COM",  # flake8-commas
    "C4",   # flake8-comprehensions
    "C90",  # mccabe
    "D",    # pydocstyle
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "FURB", # refurb
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "ISC",  # flake8-implicit-str-concat
    "N",    # pep8-naming
    "NPY",  # Numpy checks
    "PERF", # perflint
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PT",   # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RUF",  # ruff-specific rules
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "TC",   # flake8-typing-checking
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
]
ignore = [
    "COM812",  # missing-trailing-comma
    "D1",      # doctring rules
    "D415",    # ends-in-punctuation
    "ISC001",  # single-line-implicit-string-concatenation
    "PLR0913", # too-many-arguments
    "PLR2004", # magic-value-comparison
    "S101",    # assert
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-positional-args = 7

[tool.mypy]
strict = true

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
