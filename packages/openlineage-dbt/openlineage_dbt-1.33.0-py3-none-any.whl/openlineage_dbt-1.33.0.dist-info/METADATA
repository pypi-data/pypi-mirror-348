Metadata-Version: 2.4
Name: openlineage-dbt
Version: 1.33.0
Summary: OpenLineage integration with dbt
Author: OpenLineage
Keywords: openlineage
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: tqdm>=4.62.0
Requires-Dist: openlineage-integration-common[dbt]==1.33.0
Provides-Extra: tests
Requires-Dist: pytest; extra == "tests"
Requires-Dist: pytest-cov; extra == "tests"
Requires-Dist: mock; extra == "tests"
Requires-Dist: ruff; extra == "tests"
Requires-Dist: mypy>=0.9.6; extra == "tests"
Requires-Dist: python-dateutil; extra == "tests"
Provides-Extra: dev
Requires-Dist: python-dateutil; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: mock; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: mypy>=0.9.6; extra == "dev"
Dynamic: author
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# OpenLineage dbt integration

Wrapper script for automatic metadata collection from dbt

## Features

**Metadata**

* Model run lifecycle
* Model inputs / outputs

## Requirements

- [Python >= 3.8](https://www.python.org/downloads)
- [dbt >= 0.20](https://www.getdbt.com/)

Right now, `openlineage-dbt` only supports `bigquery`, `snowflake`, `spark`,`redshift`, `athena` and `glue` dbt adapters.

## Installation

```bash
$ pip3 install openlineage-dbt
```

To install from source, run:

```bash
$ pip install .
```

## Configuration


### `HTTP` Backend Environment Variables

`openlineage-dbt` uses the OpenLineage client to push data to the OpenLineage backend.

The OpenLineage client depends on environment variables:

* `OPENLINEAGE_URL` - point to service which will consume OpenLineage events
* `OPENLINEAGE_API_KEY` - set if consumer of OpenLineage events requires `Bearer` authentication key
* `OPENLINEAGE_NAMESPACE` - set if you are using something other than the `default` namespace for job namespace.


### Logging

In addition to conventional logging approaches, the OpenLineage dbt wrapper script provides an alternative way of configuring its logging behavior. By setting the `OPENLINEAGE_DBT_LOGGING` environment variable, you can establish the logging level for the `openlineage.dbt` and its child modules.

You can also set log level of `dbtol` which is deprecated.

## Usage

To begin collecting dbt metadata with OpenLineage, replace `dbt run` with `dbt-ol run`.

Additional table and column level metadata will be available if `catalog.json`, a result of running `dbt docs generate`, will be found in the target directory.

If you need to send events without running the job you can use the command `dbt-ol send-events`, it will send the metadata of your last run without running the job.

----
SPDX-License-Identifier: Apache-2.0\
Copyright 2018-2025 contributors to the OpenLineage project
