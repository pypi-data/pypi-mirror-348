Metadata-Version: 2.1
Name: cryptomanager
Version: 0.1.0
Summary: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–µ–∂–¥—É –≤–∞–ª—é—Ç–∞–º–∏ –±–µ–∑ API –∫–ª—é—á–µ–π
Author: cryptomanager
Author-email: info@cryptomanager.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.25.1

# CryptoManager üìàüí∞

**–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏ –∏ –æ–±—ã—á–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏ –±–µ–∑ API –∫–ª—é—á–µ–π**

CryptoManager –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ —Ñ–∏–∞—Ç–Ω—ã—Ö –≤–∞–ª—é—Ç, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–µ–∂–¥—É –Ω–∏–º–∏. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ API –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–∏—è API –∫–ª—é—á–µ–π.

```python
import cryptomanager
from cryptomanager import cm

# –ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É Bitcoin –≤ USD
BTC_PRICE = cm.price(1, 'BTC')
print(f"–¶–µ–Ω–∞ –±–∏—Ç–∫–æ–π–Ω–∞: {BTC_PRICE}")

# –í—Å—Ç–∞–≤–∫–∞ —Å–≤–æ–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
RUBY = 80  # –ü–æ –∫—É—Ä—Å—É –∫ –¥–æ–ª–ª–∞—Ä—É
btc_to_ruby = cm.transfer.local(1, 'BTC').to((RUBY, 'RUBY'))
print(f"1 –±–∏—Ç–∫–æ–π–Ω –≤ —Ä—É–±–ª—è—Ö: {btc_to_ruby}")

# –ü–µ—Ä–µ–≤–æ–¥ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–µ –≤–∞–ª—é—Ç—ã
btc_to_usdt = cm.transfer(1, 'BTC').to('USDT')
print(f"1 –±–∏—Ç–∫–æ–π–Ω –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö: {btc_to_usdt}")

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–Ω–µ–∂–Ω–æ–π —Å—É–º–º—ã
usdt = cm.money('USDT')
amount = usdt(1000)
print(f"–°—É–º–º–∞: {amount}")
```

## üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞

```bash
pip install cryptomanager
```

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç

```python
import cryptomanager
from cryptomanager import cm

# –ü–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –≤ USD (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
BTC_PRICE = cm.price(1, 'BTC')
print(f"–¶–µ–Ω–∞ –±–∏—Ç–∫–æ–π–Ω–∞: {BTC_PRICE}")

# –£–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥—É—é —Ñ–∏–∞—Ç–Ω—É—é –≤–∞–ª—é—Ç—É
ETH_EUR = cm.price(1, 'ETH', 'EUR')
print(f"–¶–µ–Ω–∞ Ethereum –≤ –µ–≤—Ä–æ: {ETH_EUR}")

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –≤–∞–ª—é—Ç
SOL_PRICE = cm.price(1, cm.SOL)
print(f"–¶–µ–Ω–∞ Solana: {SOL_PRICE}")
```

### –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç

```python
# –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–∂–¥—É –≤–∞–ª—é—Ç–∞–º–∏
btc_to_usdt = cm.transfer(1, 'BTC').to('USDT')
print(f"1 –±–∏—Ç–∫–æ–π–Ω –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö: {btc_to_usdt}")

eth_to_btc = cm.transfer(10, 'ETH').to('BTC')
print(f"10 Ethereum –≤ –±–∏—Ç–∫–æ–π–Ω–∞—Ö: {eth_to_btc}")

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –≤–∞–ª—é—Ç
eth_to_usdt = cm.transfer(5, cm.ETH).to(cm.USDT)
print(f"5 Ethereum –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö: {eth_to_usdt}")
```

### –õ–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫—É—Ä—Å–æ–º

```python
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞
RUBY = 80  # –ö—É—Ä—Å –∫ –¥–æ–ª–ª–∞—Ä—É
btc_to_ruby = cm.transfer.local(1, 'BTC').to((RUBY, 'RUBY'))
print(f"1 –±–∏—Ç–∫–æ–π–Ω –≤ —Ä—É–±–ª—è—Ö: {btc_to_ruby}")

# –î—Ä—É–≥–æ–π –ø—Ä–∏–º–µ—Ä –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞
EUR_RATE = 0.92  # –ö—É—Ä—Å EUR –∫ USD
usd_to_eur = cm.transfer.local(100, 'USD').to((EUR_RATE, 'EUR'))
print(f"100 –¥–æ–ª–ª–∞—Ä–æ–≤ –≤ –µ–≤—Ä–æ: {usd_to_eur}")
```

### –†–∞–±–æ—Ç–∞ —Å –¥–µ–Ω–µ–∂–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏

```python
# –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–Ω–µ–∂–Ω–æ–π —Å—É–º–º—ã –≤ USDT
usdt = cm.money('USDT')
usdt_amount = usdt(1000)
print(f"–°–æ–∑–¥–∞–Ω–∞ —Å—É–º–º–∞: {usdt_amount}")

# –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –¥—Ä—É–≥—É—é –≤–∞–ª—é—Ç—É
btc_amount = usdt_amount.to('BTC')
print(f"1000 USDT –≤ –±–∏—Ç–∫–æ–π–Ω–∞—Ö: {btc_amount}")

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –≤–∞–ª—é—Ç
eth = cm.money(cm.ETH)
eth_amount = eth(5)
print(f"–°–æ–∑–¥–∞–Ω–∞ —Å—É–º–º–∞: {eth_amount}")
```

## ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º

```python
# –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 60 —Å–µ–∫)
cm.set_update_interval(30)  # –û–±–Ω–æ–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

# –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∞–º—ã—Ö —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
cm.clear_cache()
```

### API –∫–ª—é—á–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ API –∫–ª—é—á–µ–π, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ö –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:

```python
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á –¥–ª—è CoinMarketCap
cm.set_api_key('coinmarketcap', '–≤–∞—à_api_–∫–ª—é—á')

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á –¥–ª—è Alpha Vantage
cm.set_api_key('alphavantage', '–≤–∞—à_api_–∫–ª—é—á')
```

### –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç

```python
# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
cryptos = cm.get_supported_cryptos()
print(f"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è {len(cryptos)} –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç")

# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–∏–∞—Ç–Ω—ã—Ö –≤–∞–ª—é—Ç
fiats = cm.get_supported_fiats()
print(f"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è {len(fiats)} —Ñ–∏–∞—Ç–Ω—ã—Ö –≤–∞–ª—é—Ç")
```

## üîå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ API

–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ API –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã:

### –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ API:
- Binance
- CoinGecko
- CoinCap
- CryptoCompare
- Kraken
- Bitfinex
- Huobi
- OKX
- Bybit
- CoinMarketCap (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å API –∫–ª—é—á–æ–º)
- KuCoin
- Gate.io
- Gemini
- Bitstamp
- Bittrex

### –§–∏–∞—Ç–Ω—ã–µ API:
- Frankfurter
- Exchangerate.host
- ExchangeRate-API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å API –∫–ª—é—á–æ–º)
- Open Exchange Rates (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å API –∫–ª—é—á–æ–º)
- Currency Layer (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å API –∫–ª—é—á–æ–º)
- Fixer.io (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å API –∫–ª—é—á–æ–º)
- Alpha Vantage (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å API –∫–ª—é—á–æ–º)

## üß© –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

### –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –∫–ª–∞—Å—Å—É CryptoManager

–î–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ `CryptoManager`:

```python
from cryptomanager import CryptoManager

# –°–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
my_rates = CryptoManager(update_interval=120)

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
api_keys = {
    'coinmarketcap': '–≤–∞—à_–∫–ª—é—á_coinmarketcap',
    'alphavantage': '–≤–∞—à_–∫–ª—é—á_alphavantage'
}
my_rates_with_keys = CryptoManager(api_keys=api_keys)

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
price = my_rates.price(1, 'BTC')
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å try-except –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫:

```python
try:
    price = cm.price(1, 'BTC')
    print(f"–¶–µ–Ω–∞ –±–∏—Ç–∫–æ–π–Ω–∞: {price}")
except ValueError as e:
    print(f"–û—à–∏–±–∫–∞: {e}")

try:
    converted = cm.transfer(1, 'ETH').to('RUB')
    print(f"1 ETH = {converted} RUB")
except Exception as e:
    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é: {e}")
```

### –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–æ–¥—É–ª—å `logging` Python. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:

```python
import logging

# –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.getLogger('cryptomanager').setLevel(logging.DEBUG)

# –ò–ª–∏ –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
logging.getLogger('cryptomanager').setLevel(logging.ERROR)
```

## üìä –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç

```python
portfolio = {
    'BTC': 0.5,
    'ETH': 10,
    'SOL': 50,
    'DOGE': 1000
}

total_usd = 0
for crypto, amount in portfolio.items():
    try:
        value = cm.price(amount, crypto)
        total_usd += value
        print(f"{amount} {crypto} = ${value:,.2f}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ü–µ–Ω—ã {crypto}: {e}")

print(f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è: ${total_usd:,.2f}")
```

### –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω—ã

```python
import time

crypto = 'BTC'
interval = 60  # —Å–µ–∫—É–Ω–¥—ã
duration = 10  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫

try:
    initial_price = cm.price(1, crypto)
    print(f"–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ {crypto}: ${initial_price}")

    for i in range(duration):
        time.sleep(interval)
        current_price = cm.price(1, crypto)
        change = ((current_price - initial_price) / initial_price) * 100
        print(f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ {crypto}: ${current_price} ({change:+.2f}%)")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞: {e}")
```

### –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–µ–∂–¥—É –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –≤–∞–ª—é—Ç–∞–º–∏

```python
amount = 1000
base_currency = 'USD'
target_currencies = ['EUR', 'GBP', 'JPY', 'RUB', 'CNY', 'BTC', 'ETH']

for target in target_currencies:
    try:
        converted = cm.transfer(amount, base_currency).to(target)
        print(f"{amount} {base_currency} = {converted} {target}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ {target}: {e}")
```

## üìú –õ–∏—Ü–µ–Ω–∑–∏—è

MIT - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–∫ —Ö–æ—Ç–∏—Ç–µ, —Å–º. —Ñ–∞–π–ª [LICENSE](LICENSE) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.

---

–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏ –∏ –æ–±—ã—á–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ API –∫–ª—é—á–µ–π.
