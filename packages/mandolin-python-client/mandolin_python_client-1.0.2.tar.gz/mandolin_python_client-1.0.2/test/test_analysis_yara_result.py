# coding: utf-8

"""
    Mandolin

    Micro-service to analyze and convert files

    The version of the OpenAPI document: 1.0.0
    Contact: contact@defensive-lab.agency
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from mandolin_python_client.models.analysis_yara_result import AnalysisYaraResult

class TestAnalysisYaraResult(unittest.TestCase):
    """AnalysisYaraResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisYaraResult:
        """Test AnalysisYaraResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisYaraResult`
        """
        model = AnalysisYaraResult()
        if include_optional:
            return AnalysisYaraResult(
                success = True,
                content = '',
                processors = {
                    'key' : mandolin_python_client.models.analyzer_result[yara_result].AnalyzerResult[YaraResult](
                        success = True, 
                        processor_name = '', 
                        processor_url = '', 
                        processor_description = '', 
                        error = '', 
                        error_short = '', 
                        metadata = mandolin_python_client.models.metadata.metadata(), 
                        analysis = mandolin_python_client.models.yara_result.YaraResult(
                            rules = '', 
                            matches = [
                                mandolin_python_client.models.yara_match.YaraMatch(
                                    rule = '', 
                                    tags = [
                                        ''
                                        ], 
                                    namespace = '', 
                                    meta = mandolin_python_client.models.meta.meta(), 
                                    strings = [
                                        mandolin_python_client.models.yara_string.YaraString(
                                            identifier = '', 
                                            instances = [
                                                mandolin_python_client.models.yara_string_instance.YaraStringInstance(
                                                    matched_length = 56, 
                                                    offset = 56, 
                                                    plaintext = '', )
                                                ], )
                                        ], )
                                ], ), )
                    }
            )
        else:
            return AnalysisYaraResult(
        )
        """

    def testAnalysisYaraResult(self):
        """Test AnalysisYaraResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
