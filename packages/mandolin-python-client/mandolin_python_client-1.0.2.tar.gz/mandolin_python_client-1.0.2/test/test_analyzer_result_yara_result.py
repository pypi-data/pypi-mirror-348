# coding: utf-8

"""
    Mandolin

    Micro-service to analyze and convert files

    The version of the OpenAPI document: 1.0.0
    Contact: contact@defensive-lab.agency
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from mandolin_python_client.models.analyzer_result_yara_result import AnalyzerResultYaraResult

class TestAnalyzerResultYaraResult(unittest.TestCase):
    """AnalyzerResultYaraResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyzerResultYaraResult:
        """Test AnalyzerResultYaraResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyzerResultYaraResult`
        """
        model = AnalyzerResultYaraResult()
        if include_optional:
            return AnalyzerResultYaraResult(
                success = True,
                processor_name = '',
                processor_url = '',
                processor_description = '',
                error = '',
                error_short = '',
                metadata = mandolin_python_client.models.metadata.metadata(),
                analysis = mandolin_python_client.models.yara_result.YaraResult(
                    rules = '', 
                    matches = [
                        mandolin_python_client.models.yara_match.YaraMatch(
                            rule = '', 
                            tags = [
                                ''
                                ], 
                            namespace = '', 
                            meta = mandolin_python_client.models.meta.meta(), 
                            strings = [
                                mandolin_python_client.models.yara_string.YaraString(
                                    identifier = '', 
                                    instances = [
                                        mandolin_python_client.models.yara_string_instance.YaraStringInstance(
                                            matched_length = 56, 
                                            offset = 56, 
                                            plaintext = '', )
                                        ], )
                                ], )
                        ], )
            )
        else:
            return AnalyzerResultYaraResult(
                processor_name = '',
                processor_url = '',
        )
        """

    def testAnalyzerResultYaraResult(self):
        """Test AnalyzerResultYaraResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
